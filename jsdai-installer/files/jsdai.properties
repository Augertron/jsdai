# $Id$
#
# JSDAI(TM), a way to implement STEP, ISO 10303
# Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License
# version 3 as published by the Free Software Foundation (AGPL v3).
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# JSDAI is a registered trademark of LKSoftWare GmbH, Germany
# This software is also available under commercial licenses.
# See also http://www.jsdai.net/

#  properties file for JSDAI, LKSoftWare GmbH
#
# This properties file is loaded by SDAI.lang.SdaiSession class
# during openSession().
#
# The jsdai.properties file is located in the following order
# 1) If there is a system property "jsdai.properties" take
#    try to locate jsdai.property in this directory
# 2) otherwise if there is a system property "java.ext.dirs" the
#    try to locate jsdai.property in this directory
# 3) otherwise try to locate jsdai.property in the directory
#    specified by the system property "java.home".
# If the file jsdai.properties cannot be located,
# a SY-ERR exception is thrown during openSession().
#
# These properties are needed:
#   repositories=directory-path
#     specifies a directory for persistent data storage
#     for every SdaiRepository a subdirectory is created there
#     Example:
#      repositories=c:\\sdairepos
#
#   SDAI.SXxx=jar-file
#     Every supported schema xxx must be listed as a property.
#     The property value is not used by the system, but should
#     indicate where to find the class files for this Express-schema
#     Examples:
#       SDAI.SConfig_control_design=jsdai_lib.jar
#       SDAI.SElectronic_assembly_interconnect_and_packaging_design=jsdai_lib.jar
#

#log=System.out

# here goes the directory where repositories are located
repositories=$JSDAI_REPOSITORY_DIR_BACKSLASHED$


# If below at the right-hand side is TRUE, then strings as values of
# entity attributes are returned by toString methods in unicode;
# if FALSE, then in ASCII. This property is optional.
toStringUnicode=FALSE

# Aliases
jsdai.SIda_step_schema_xim=AC*;AI*;AP*;ASS*;AU*;B*;C*;D*;E*;F*;G*;H*;IDA_STEP_AIM*;ISO*;IN*;J*;K*;L*;M*;N*;O*;P*;Q*;R*;S*;T*;U*;V*;W*;X*;Y*;Z*;

# Mapping of APs
# mapping.schema.AIM_SCHEMA=MAPPING_DATA
# If AIM schema is mapped to ARM schema then a dictionary model that contains mapping data must be specified.
# There can be several different mappings for one AIM schema and one mapping model can specify mapping for several AIM schemas to one ARM schema.
# Examples:
#    mapping.schema.ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN=AP210_ARM_MAPPING_DATA
#    mapping.schema.ELECTROTECHNICAL_DESIGN=AP212_ARM_MAPPING_DATA
#    mapping.schema.AUTOMOTIVE_DESIGN=AP214_ARM_MAPPING_DATA
#
mapping.schema.IDA_STEP_SCHEMA_XIM=IDA_STEP_SCHEMA_XIM_MAPPING_DATA
mapping.schema.IDA_STEP_AIM_SCHEMA=IDA_STEP_SCHEMA_XIM_MAPPING_DATA
