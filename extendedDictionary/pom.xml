<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.jsdai</groupId>
    <artifactId>jsdai_parent</artifactId>
    <version>4.5.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>

  <groupId>net.jsdai</groupId>
  <artifactId>jsdai_extendedDictionary</artifactId>
  <packaging>jar</packaging>

  <properties>
    <express.source.dir>${basedir}/src/main/java-express</express.source.dir>
    <repo.dir>${basedir}/src/main/repo</repo.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>net.jsdai</groupId>
      <artifactId>jsdai_runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>net.jsdai</groupId>
      <artifactId>jsdai_express_files</artifactId>
      <classifier>dictionary</classifier>
      <type>zip</type>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <phase>initialize</phase>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
          <execution>
            <id>add-generated-source</id>
            <phase>process-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${express.source.dir}</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>attach-compiler-repo</id>
            <phase>package</phase>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${repo.dir}/ExpressCompilerRepo.sdai</file>
                  <classifier>repo</classifier>
                  <type>sdai</type>
                </artifact>
              </artifacts>
            </configuration>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>compile-express</id>
      <properties>
        <express.build.dir>${project.build.directory}/express</express.build.dir>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-express</id>
                <phase>initialize</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeGroupIds>net.jsdai</includeGroupIds>
                  <includeArtifactIds>jsdai_express_files</includeArtifactIds>
                  <outputDirectory>${express.build.dir}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-express</id>
                <phase>initialize</phase>
                <configuration>
                  <tasks>
                    <mkdir dir="${express.build.dir}"/>

                    <propertyfile file="${express.build.dir}/jsdai.properties" comment="Generated by Ant">
                      <entry key="repositories" value="${express.build.dir}/sdairepo"/>
                      <entry key="mapping.schema.ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN" value="AP210_ARM_MAPPING_DATA"/>
                      <entry key="mapping.schema.ELECTROTECHNICAL_DESIGN" value="AP212_ARM_MAPPING_DATA"/>
                      <entry key="mapping.schema.AUTOMOTIVE_DESIGN" value="AP214_ARM_MAPPING_DATA"/>
                      <entry key="new.repository.format" value="SDAI"/>
                    </propertyfile>

                    <concat destfile="${express.build.dir}/ExpressCompilerRepo.exp">
                      <filelist dir="${express.build.dir}" files="extended_dictionary_schema.exp,mapping_schema.exp"/>
                    </concat>
                    <replace file="${express.build.dir}/ExpressCompilerRepo.exp"
                             token="SCHEMA extended_dictionary_schema;"
                             value="SCHEMA SDAI_dictionary_schema;"/>
                    <replace file="${express.build.dir}/ExpressCompilerRepo.exp"
                             token="SCHEMA mapping_schema;"
                             value="SCHEMA sdai_mapping_schema;"/>
                    <replace file="${express.build.dir}/ExpressCompilerRepo.exp"
                             token="REFERENCE FROM extended_dictionary_schema;"
                             value="REFERENCE FROM sdai_dictionary_schema;"/>

                    <concat destfile="${express.build.dir}/mapping_schemas.exp">
                      <filelist dir="${express.build.dir}" files="mapping_schema.exp,extended_dictionary_schema.exp"/>
                    </concat>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>generate-library-system</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks>
                    <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                    <java fork="yes" dir="${express.build.dir}" classname="jsdai.expressCompiler.Main" failonerror="yes">
                      <classpath>
                        <pathelement location="${project.build.directory}/config-licensing-off"/>
                        <pathelement path="${plugin_classpath}"/>
                      </classpath>
                      <sysproperty key="jsdai.properties" value="${express.build.dir}"/>
                      <arg line="-repository -is -relax -java -binaries -no_active_nodes -no_amendment -nc"/>
                      <arg value="-express"/>
                      <arg file="${express.build.dir}/ExpressCompilerRepo.exp"/>
                      <arg value="-complex"/>
                      <arg value="${express.build.dir}/dictionary.ce"/>
                      <arg value="-compilation_sn"/>
                      <arg value="0"/>
                      <arg value="-index_file"/>
                    </java>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>generate-library-mapping</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks>
                    <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                    <java fork="yes" dir="${express.build.dir}" classname="jsdai.expressCompiler.Main" failonerror="yes">
                      <classpath>
                        <pathelement location="${project.build.directory}/config-licensing-off"/>
                        <pathelement path="${plugin_classpath}"/>
                      </classpath>
                      <sysproperty key="jsdai.properties" value="${express.build.dir}"/>
                      <arg line="-java -is -relax -inst -binaries -no_active_nodes -no_amendment -nc"/>
                      <arg value="-express"/>
                      <arg file="${express.build.dir}/mapping_schemas.exp"/>
                      <arg value="-complex"/>
                      <arg value="${express.build.dir}/dictionary.ce"/>
                      <arg value="-index_file"/>
                    </java>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>modify-library-mapping</id>
                <phase>process-sources</phase>
                <configuration>
                  <tasks>
                    <replace file="${express.build.dir}/jsdai/SExtended_dictionary_schema/CAggregation_type.java">
                      <replacetoken>public class CAggregation_type extends CData_type implements EAggregation_type {</replacetoken>
                      <replacevalue>public class CAggregation_type extends CAggregationTypeDeprecated implements EAggregation_type {</replacevalue>
                    </replace>
                    <replace file="${express.build.dir}/jsdai/SExtended_dictionary_schema/CEntity_definition.java">
                      <replacetoken>public class CEntity_definition extends CEntity_or_view_definition implements EEntity_definition {</replacetoken>
                      <replacevalue>public class CEntity_definition extends CEntityDefinitionDeprecated implements EEntity_definition {</replacevalue>
                    </replace>
                    <replace file="${express.build.dir}/jsdai/SExtended_dictionary_schema/EEntity_definition.java">
                      <replacetoken>public interface EEntity_definition extends EEntity_or_view_definition {</replacetoken>
                      <replacevalue>public interface EEntity_definition extends EEntityDefinitionDeprecated {</replacevalue>
                    </replace>

                    <!-- add license header to all generated files -->
                    <loadfile property="javaheader" srcFile="${basedir}/license.txt"/>
                    <replaceregexp match="(/\*.*\*/)" replace="${javaheader}">
                      <fileset dir="${express.build.dir}">
                        <include name="jsdai/**/*.java"/>
                      </fileset>
                    </replaceregexp>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>copy-generated-sources</id>
                <phase>process-sources</phase>
                <configuration>
                  <tasks>
                    <delete dir="${express.source.dir}/jsdai/SExtended_dictionary_schema"/>
                    <delete dir="${express.source.dir}/jsdai/SMapping_schema"/>

                    <copy todir="${express.source.dir}/jsdai/SExtended_dictionary_schema">
                      <fileset dir="${express.build.dir}/jsdai/SExtended_dictionary_schema">
                        <filename name="**/*.java"/>
                      </fileset>
                    </copy>
                    <copy todir="${express.source.dir}/jsdai/SMapping_schema">
                      <fileset dir="${express.build.dir}/jsdai/SMapping_schema">
                        <filename name="**/*.java"/>
                      </fileset>
                    </copy>

                    <delete dir="${basedir}/src/main/resources/jsdai/SExtended_dictionary_schema"/>
                    <delete dir="${basedir}/src/main/resources/jsdai/SMapping_schema"/>

                    <copy todir="${basedir}/src/main/resources/jsdai/SExtended_dictionary_schema">
                      <fileset dir="${express.build.dir}/jsdai/SExtended_dictionary_schema">
                        <not>
                          <filename name="**/*.java"/>
                        </not>
                      </fileset>
                    </copy>
                    <copy todir="${basedir}/src/main/resources/jsdai/SMapping_schema">
                      <fileset dir="${express.build.dir}/jsdai/SMapping_schema">
                        <not>
                          <filename name="**/*.java"/>
                        </not>
                      </fileset>
                    </copy>

                    <copy file="${express.build.dir}/jsdai/repository.properties" todir="${basedir}/src/main/resources/jsdai" overwrite="true"/>
                    <!-- Set the JSDAIVersion to the current one. The parsed versions will be generated from project.version by parse-version goal. -->
                    <propertyfile file="${basedir}/src/main/resources/jsdai/repository.properties">
                      <entry key="JSDAIVersion" value="$${parsedVersion.majorVersion}.$${parsedVersion.minorVersion}.$${parsedVersion.incrementalVersion}"/>
                    </propertyfile>

                    <copy file="${express.build.dir}/sdairepo/ExpressCompilerRepo.sdai" todir="${basedir}/src/main/repo" overwrite="true"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>net.jsdai</groupId>
                <artifactId>jsdai_express</artifactId>
                <version>${existing.express.compiler.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
