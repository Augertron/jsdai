-- 2000-09-08

(*

	WG12 N525 								2000-05-30

	EXPRESS Declarations for ISO 10303-41: 2nd Edition
*)

SCHEMA management_resources_schema;
REFERENCE FROM action_schema;                      -- ISO 10303-41
REFERENCE FROM application_context_schema          -- ISO 10303-41
  (library_context);
REFERENCE FROM approval_schema;                    -- ISO 10303-41
REFERENCE FROM basic_attribute_schema              -- ISO 10303-41
  (get_role,
  object_role,
  role_association);
REFERENCE FROM certification_schema;               -- ISO 10303-41
REFERENCE FROM contract_schema;                    -- ISO 10303-41
REFERENCE FROM date_time_schema;                   -- ISO 10303-41
REFERENCE FROM document_schema;                    -- ISO 10303-41
REFERENCE FROM effectivity_schema;                 -- ISO 10303-41
REFERENCE FROM external_reference_schema           -- ISO 10303-41
  (external_source);
REFERENCE FROM group_schema;                       -- ISO 10303-41
REFERENCE FROM person_organization_schema;         -- ISO 10303-41
REFERENCE FROM security_classification_schema;     -- ISO 10303-41
REFERENCE FROM support_resource_schema;            -- ISO 10303-41

TYPE attribute_type = SELECT
  (label,
   text);
END_TYPE; -- attribute_type

ENTITY action_assignment
  ABSTRACT SUPERTYPE;
  assigned_action : action;
DERIVE
  role            : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- action_assignment

ENTITY action_method_assignment
  ABSTRACT SUPERTYPE;
  assigned_action_method : action_method;
  role                   : action_method_role;
END_ENTITY; -- action_method_assignment

ENTITY action_method_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- action_method_role

ENTITY action_request_assignment
  ABSTRACT SUPERTYPE;
  assigned_action_request : versioned_action_request;
DERIVE
  role                    : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- action_request_assignment

ENTITY approval_assignment
  ABSTRACT SUPERTYPE;
  assigned_approval : approval;
DERIVE
  role              : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- approval_assignment

ENTITY attribute_classification_assignment
  ABSTRACT SUPERTYPE;
  assigned_class          : group;
  attribute_name          : label;
  role                    : classification_role;
END_ENTITY; -- attribute_classification_assignment

ENTITY attribute_value_assignment
  ABSTRACT SUPERTYPE;
  attribute_name  : label;
  attribute_value : attribute_type;
  role            : attribute_value_role;
END_ENTITY; -- attribute_value_assignment

ENTITY attribute_value_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- attribute_value_role

ENTITY certification_assignment
  ABSTRACT SUPERTYPE;
  assigned_certification : certification;
DERIVE
  role                   : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- certification_assignment

ENTITY classification_assignment
  ABSTRACT SUPERTYPE;
  assigned_class          : group;
  role                    : classification_role;
END_ENTITY; -- classification_assignment

ENTITY classification_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- classification_role

ENTITY contract_assignment
  ABSTRACT SUPERTYPE;
  assigned_contract : contract;
DERIVE
  role              : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; --  contract_assignment

ENTITY date_and_time_assignment
  ABSTRACT SUPERTYPE;
  assigned_date_and_time : date_and_time;
  role                   : date_time_role;
END_ENTITY; -- date_and_time_assignment

ENTITY date_assignment
  ABSTRACT SUPERTYPE;
  assigned_date : date;
  role          : date_role;
END_ENTITY; -- date_assignment

ENTITY document_reference
  ABSTRACT SUPERTYPE;
  assigned_document : document;
  source            : label;
DERIVE
  role              : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- document_reference

ENTITY document_usage_constraint_assignment
  ABSTRACT SUPERTYPE;
  assigned_document_usage : document_usage_constraint;
  role                    : document_usage_role;
END_ENTITY; -- document_usage_constraint_assignment

ENTITY document_usage_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- document_usage_role

ENTITY effectivity_assignment
  ABSTRACT SUPERTYPE;
  assigned_effectivity : effectivity;
DERIVE
  role                 : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- effectivity_assignment

ENTITY effectivity_context_assignment
  ABSTRACT SUPERTYPE;
  assigned_effectivity_assignment : effectivity_assignment;
  role                            : effectivity_context_role;
END_ENTITY; -- effectivity_context_assignment

ENTITY effectivity_context_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- effectivity_context_role

ENTITY event_occurrence_assignment
  ABSTRACT SUPERTYPE;
  assigned_event_occurrence : event_occurrence;
  role                      : event_occurrence_role;
END_ENTITY; -- event_occurrence_assignment

ENTITY event_occurrence_context_assignment
  ABSTRACT SUPERTYPE;
  assigned_event_occurrence_assignment : event_occurrence_assignment;
  role                                 : event_occurrence_context_role;
END_ENTITY; -- event_occurrence_context_assignment

ENTITY external_identification_assignment
  ABSTRACT SUPERTYPE
  SUBTYPE OF (identification_assignment);
  source : external_source;
END_ENTITY; -- external_identification_assignment

ENTITY external_referent_assignment
  ABSTRACT SUPERTYPE;
  assigned_name : label;
DERIVE
  role          : object_role := get_role (SELF);
UNIQUE
  UR1 : assigned_name;
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- external_referent_assignment

ENTITY group_assignment
  ABSTRACT SUPERTYPE;
  assigned_group : group;
DERIVE
  role           : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- group_assignment

ENTITY identification_assignment
  ABSTRACT SUPERTYPE;
  assigned_id : identifier;
  role        : identification_role;
END_ENTITY; -- identification_assignment

ENTITY identification_assignment_relationship;
  name                               : label;
  description                        : OPTIONAL text;
  relating_identification_assignment : identification_assignment;
  related_identification_assignment  : identification_assignment;
END_ENTITY; -- identification_assignment_relationship

ENTITY identification_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- identification_role

ENTITY library_assignment
  ABSTRACT SUPERTYPE
  SUBTYPE OF (external_referent_assignment);
  frame_of_reference : library_context;
UNIQUE
  UR1: frame_of_reference;
END_ENTITY; -- library_assignment

ENTITY name_assignment
  ABSTRACT SUPERTYPE;
  assigned_name : label;
DERIVE
  role          : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- name_assignment

ENTITY organization_assignment
  ABSTRACT SUPERTYPE;
  assigned_organization : organization;
  role                  : organization_role;
END_ENTITY; -- organization_assignment

ENTITY organizational_project_assignment
ABSTRACT SUPERTYPE;
  assigned_organizational_project : organizational_project;
  role                            : organizational_project_role;
END_ENTITY; -- organizational_project_assignment

ENTITY organizational_project_role;
  name        : label;
  description : OPTIONAL text;
END_ENTITY; -- organizational_project_role

ENTITY person_and_organization_assignment
  ABSTRACT SUPERTYPE;
  assigned_person_and_organization : person_and_organization;
  role                             : person_and_organization_role;
END_ENTITY; -- person_and_organization_assignment

ENTITY person_assignment
  ABSTRACT SUPERTYPE;
  assigned_person : person;
  role            : person_role;
END_ENTITY; -- person_assignment

ENTITY security_classification_assignment
  ABSTRACT SUPERTYPE;
  assigned_security_classification : security_classification;
DERIVE
  role                             : object_role := get_role (SELF);
WHERE
  WR1 : SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                       'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
END_ENTITY; -- security_classification_assignment

ENTITY time_assignment
  ABSTRACT SUPERTYPE;
  assigned_time : local_time;
  role          : time_role;
END_ENTITY; -- time_assignment

ENTITY time_interval_assignment
  ABSTRACT SUPERTYPE;
  assigned_time_interval : time_interval;
  role                   : time_interval_role;
END_ENTITY; -- time_interval_assignment

FUNCTION acyclic_identification_assignment_relationship
  (relation          : identification_assignment_relationship;
   relatives         : SET [1:?] OF identification_assignment;
   specific_relation : STRING) : BOOLEAN;
  LOCAL
    x                : SET OF identification_assignment_relationship;
  END_LOCAL;
  IF relation.relating_identification_assignment IN relatives THEN 
    RETURN (FALSE);
  END_IF;
  x := QUERY (ia <* bag_to_set 
             (USEDIN (relation.relating_identification_assignment,
             'MANAGEMENT_RESOURCES_SCHEMA.' + 
             'IDENTIFICATION_ASSIGNMENT_RELATIONSHIP.' +
             'RELATED_IDENTIFICATION_ASSIGNMENT')) |
              specific_relation IN TYPEOF (ia));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_identification_assignment_relationship
      (x[i], 
       relatives + relation.relating_identification_assignment, 
       specific_relation) THEN
      RETURN(FALSE);
    END_IF;
  END_REPEAT;
  RETURN(TRUE);
END_FUNCTION; -- acyclic_identification_assignment_relationship

END_SCHEMA; -- management_resources_schema
