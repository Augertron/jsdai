(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
 Derived from ISO TC184/SC4/WG12 N1157 - ISO/TS 10303-1047 Activity method - EXPRESS MIM
 by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*) 

(* Based on ARM (even if AIM entities are 1:1 *)

SCHEMA Activity_xim;

USE FROM Activity_method_xim;    -- ISO/TS 10303-1049

USE FROM action_schema   -- ISO 10303-41
  (action,
   action_relationship,
   action_status,
   executed_action); 

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute,
   object_role); 

USE FROM management_resources_schema   -- ISO 10303-41
  (action_assignment); 

USE FROM support_resource_schema(identifier);

USE FROM Activity_mim;

ENTITY Activity
	(* CONNOTATIONAL *) SUBTYPE OF (executed_action);
  	id_x : STRING;
  	status: OPTIONAL STRING;
  DERIVE
  	SELF\Action.id : identifier := id_x;
END_ENTITY;

ENTITY Activity_relationship
	(* CONNOTATIONAL *) SUBTYPE OF (action_relationship);
  	SELF\Action_relationship.relating_action RENAMED relating_activity : Activity;
  	SELF\Action_relationship.related_action RENAMED related_activity : Activity;
END_ENTITY;

ENTITY Activity_status
	(* CONNOTATIONAL *) SUBTYPE OF (Action_status);
  	SELF\Action_status.assigned_action RENAMED assigned_activity : Activity;
END_ENTITY;

ENTITY Applied_activity_assignment
	(* CONNOTATIONAL *) SUBTYPE OF (Applied_action_assignment);
  	SELF\Action_assignment.assigned_action RENAMED assigned_activity : Activity;
  	role_x : STRING;
DERIVE
   SELF\action_assignment.role : object_role := object_role(role_x, ?);
END_ENTITY;

ENTITY Applied_activity_assignment__input
  SUBTYPE OF (Applied_activity_assignment);
DERIVE
  SELF\Applied_activity_assignment.role_x : STRING := 'input';
END_ENTITY;

ENTITY Applied_activity_assignment__target
  SUBTYPE OF (Applied_activity_assignment);
DERIVE
  SELF\Applied_activity_assignment.role_x : STRING := 'target';
END_ENTITY;

ENTITY Applied_activity_assignment__output
  SUBTYPE OF (Applied_activity_assignment);
DERIVE
  SELF\Applied_activity_assignment.role_x : STRING := 'output';
END_ENTITY;

ENTITY applied_activity_assignment__constraint
  SUBTYPE OF (Applied_activity_assignment);
DERIVE
  SELF\Applied_activity_assignment.role_x : STRING := 'constraint';
END_ENTITY;

END_SCHEMA;

