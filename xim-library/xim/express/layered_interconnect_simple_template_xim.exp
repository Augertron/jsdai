(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
   Derived from ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Part template extension - EXPRESS ARM
   by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*)


SCHEMA Layered_interconnect_simple_template_xim;

    USE FROM Layered_2d_shape_xim;	-- ISO/TS 10303-1693
    USE FROM Fill_area_style_xim; -- ISO/TS 10303-1672
	USE FROM Fabrication_technology_xim;	-- ISO/TS 10303-1670
	USE FROM Text_representation_xim;	-- ISO/TS 10303-1750

USE FROM Layered_interconnect_simple_template_mim;

REFERENCE FROM Requirement_decomposition_xim(get_rvd);	-- ISO/TS 10303-1740

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set);

  TYPE list_external_identification_item_armx = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (Land_physical_template_armx);
  END_TYPE;

	SUBTYPE_CONSTRAINT list_shape_feature_subtypes FOR Shape_feature; 
	    (ONEOF (Via_template_terminal,
         Component_termination_passage_template_terminal,
         Land_template_terminal_armx));
	END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT list_single_stratum_template_subtypes FOR Single_stratum_template_armx; 
    (ONEOF (Single_stratum_continuous_template_armx));
  END_SUBTYPE_CONSTRAINT;

  TYPE land_connection_zone_class = ENUMERATION OF
    (surface_point_class,
     edge_area_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class);
  END_TYPE;
  
 SUBTYPE_CONSTRAINT list_template_definition_subtypes FOR Template_definition;   
 	(ONEOF (Geometric_template_armx,
 	Parametric_template_armx,
 	Part_string_template_armx,
    Part_text_template_armx,
    Single_stratum_template_armx,
    Stratum_stack_model_armx));
 END_SUBTYPE_CONSTRAINT;  

	TYPE list_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
		(Land_template_terminal_armx);
	END_TYPE;
 
  TYPE land_template_terminal_class = ENUMERATION OF
    (surface_point_class,
    edge_area_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class);
  END_TYPE;

  TYPE ptswp_ptsm_definition = SELECT
       (Via_template_armx,
        Component_termination_passage_template_armx);
  END_TYPE;

  TYPE ptswp_template_shape_model_context = ENUMERATION OF 
     (drilled_passage_context,
      finished_passage_context,
      unknown_context);
  END_TYPE;

  ENTITY Blind_passage_template_armx
    SUBTYPE OF (Unsupported_passage_template_armx, blind_passage_template);
      of_measure_orientation               : measure_orientation;
      datum_reference_layer                : Stratum_technology_occurrence_armx;
      datum_reference_side                 : Stratum_technology_occurrence_link_armx;
      bottom_distance_from_datum_reference : Shape_dimension_representation;
  END_ENTITY;

  ENTITY Connection_zone_in_layout_template
  	(* CONNOTATIONAL *) SUBTYPE OF (Connection_zone, Instanced_feature_armx);
  	SELF\shape_aspect.of_shape : Template_definition;
  	connection_zone_category            : OPTIONAL SET[1:?] OF land_connection_zone_class;
  END_ENTITY; 

  ENTITY Continuous_template_armx
    SUBTYPE OF (Geometric_template_armx, continuous_template);
    WHERE
      WR1 : SIZEOF(QUERY(s <* SELF\Geometric_template_armx.shapes |
          NOT 
          (SIZEOF(['CONSTRUCTIVE_SOLID_GEOMETRY_2D_XIM.SINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION',
                   'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_XIM.PLANAR_PATH_SHAPE_MODEL_WITH_PARAMETERS'] * TYPEOF(s))
           = 1)
          )) = 0;          
  END_ENTITY;

  ENTITY Counterbore_passage_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Unsupported_passage_template_armx, counterbore_passage_template);
      smaller_passage : Unsupported_passage_template_armx;
      larger_passage  : Blind_passage_template_armx;
  END_ENTITY;

  ENTITY Countersunk_passage_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Unsupported_passage_template_armx, countersunk_passage_template);
      constant_diameter_passage : Unsupported_passage_template_armx;
      tapered_passage           : Blind_passage_template_armx;
  END_ENTITY;

  ENTITY Component_termination_passage_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Continuous_template_armx, Inter_stratum_feature_template_armx, component_termination_passage_template);
      SELF\Inter_stratum_feature_template_armx.of_passage_technology : Default_component_termination_passage_definition;
    INVERSE
      access_mechanisms : SET[2:?] OF component_termination_passage_template_terminal FOR of_shape(* TEMP-AD *);
  END_ENTITY;

  ENTITY Component_termination_passage_template_interface_terminal
    (* CONNOTATIONAL *) SUBTYPE OF (Component_termination_passage_template_terminal);
    DERIVE
      SELF\shape_aspect.description : text := 'component termination passage template interface terminal';
  END_ENTITY;

  ENTITY Component_termination_passage_template_join_terminal
    (* CONNOTATIONAL *) SUBTYPE OF (Component_termination_passage_template_terminal);
      disallowed_inter_stratum_extent : OPTIONAL SET[1:?] OF Stratum_technology_occurrence_link_armx;
    DERIVE
      SELF\shape_aspect.description : text := 'component termination passage template join terminal';
  END_ENTITY;

  ENTITY Component_termination_passage_template_terminal
    ABSTRACT SUPERTYPE OF (ONEOF (Component_termination_passage_template_interface_terminal,
 Component_termination_passage_template_join_terminal))
    (* CONNOTATIONAL *) SUBTYPE OF (Shape_feature);
      SELF\shape_aspect.of_shape RENAMED associated_definition : Component_termination_passage_template_armx;
       SELF\Shape_feature.connection_area                               : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;
    UNIQUE
      UR1 : SELF\shape_aspect.name,
 associated_definition;
  END_ENTITY;

  ENTITY Default_attachment_size_based_land_physical_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Land_physical_template_armx, Shape_feature, default_attachment_size_based_land_physical_template);
    DERIVE
      SELF\Product_view_definition.name_x : STRING := '';
      SELF\shape_aspect.of_shape : Default_attachment_size_based_land_physical_template_armx := SELF;
      SELF\Shape_feature.name : STRING := '';            
      SELF\shape_aspect.id : STRING := SELF\property_definition.id;            
    INVERSE
      interface_access_mechanisms : SET[1:?] OF land_template_interface_terminal FOR associated_definition(* TEMP-AD *);
    WHERE
      WR1 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 0) OR 
                 ('minimum attachment region size' IN 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area));
      WR2 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 1) OR 
                 (SIZEOF(['maximum attachment region size','heel area', 'toe area'] * 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area)) = 1);
      WR3 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 2) OR 
                 (SIZEOF(['maximum attachment region size','heel area', 'toe area'] * 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area)) = 2);
      WR4 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 3) OR 
                 (SIZEOF(['maximum attachment region size','heel area', 'toe area'] * 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area)) = 3);
      WR5 : NOT EXISTS(SELF\Shape_feature.connection_area);
      WR6 : SIZEOF(interface_access_mechanisms) = 1;   
  END_ENTITY;

  ENTITY Default_passage_based_land_physical_template_armx
    ABSTRACT SUPERTYPE OF (ONEOF (Default_plated_passage_based_land_physical_template_armx,
 Default_unsupported_passage_based_land_physical_template_armx))
    (* CONNOTATIONAL *) SUBTYPE OF (Land_physical_template_armx, default_passage_based_land_physical_template);
      of_passage_technology         : Passage_technology_armx;
  END_ENTITY;

	ENTITY Default_plated_passage_based_land_physical_template_armx
	  (* CONNOTATIONAL *) SUBTYPE OF (Default_passage_based_land_physical_template_armx, default_plated_passage_based_land_physical_template);
     DERIVE
	    SELF\Product_view_definition.name_x : STRING := '';
	 WHERE
        WR1 : SELF\Default_passage_based_land_physical_template_armx.of_passage_technology.plated_passage = TRUE;
		WR2 : NOT('FABRICATION_TECHNOLOGY_XIM.DEFAULT_VIA_DEFINITION_ARMX' IN TYPEOF(SELF\Default_passage_based_land_physical_template_armx.of_passage_technology)) OR	    
	        (SIZEOF(QUERY(ltjt <* SELF\Land_physical_template_armx.access_mechanisms | NOT('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_XIM.LAND_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(ltjt)))) = 0);	  
	END_ENTITY;

  ENTITY Default_trace_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Trace_template_armx, default_trace_template);
      of_stratum_technology : Stratum_technology_armx;
  END_ENTITY;
 
  ENTITY Default_unsupported_passage_based_land_physical_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Default_passage_based_land_physical_template_armx, default_unsupported_passage_based_land_physical_template);
      SELF\Default_passage_based_land_physical_template_armx.of_passage_technology : Default_unsupported_passage_definition;
    DERIVE
      SELF\Product_view_definition.name_x : STRING := '';
  END_ENTITY;

  ENTITY Electrical_isolation_removal_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Material_removal_feature_template_armx, electrical_isolation_removal_template);
    DERIVE
      electrical_isolation_spacing_requirement : SET[0:?] OF Requirement_view_definition := 
        get_rvd(SELF, 'electrical requirement');
    WHERE
      WR1: SIZEOF(QUERY(eisr <* electrical_isolation_spacing_requirement |
         NOT('INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_XIM.ELECTRICAL_ISOLATION_REQUIREMENT'
        IN TYPEOF(eisr)) )) =0;
      WR2: SIZEOF(QUERY(s <* SELF\Geometric_template_armx.shapes |
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_MIM.PLANAR_CLOSED_PATH_SHAPE_REPRESENTATION_WITH_PARAMETERS' IN TYPEOF(s)))) = 0;
      WR3: SIZEOF(QUERY(s <* SELF\Geometric_template_armx.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_XIM.SINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION' IN TYPEOF(s)))) = 0;                
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_segment_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Inter_stratum_feature_template_armx, inter_stratum_feature_edge_segment_template);
      composed_edge  																														: Inter_stratum_feature_edge_template_armx;
      SELF\shape_aspect_relationship.relating_shape_aspect RENAMED start_vertex	: Edge_segment_vertex_armx;
      SELF\shape_aspect_relationship.related_shape_aspect RENAMED end_vertex		: Edge_segment_vertex_armx;
      reference_path 																														: Trimmed_curve;
    WHERE
      WR1 : EXISTS(reference_path.trim_1) AND EXISTS(reference_path.trim_2);      
      WR2 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Inter_stratum_feature_template_armx, inter_stratum_feature_edge_template);
    INVERSE
      edges : SET[2:?] OF inter_stratum_feature_edge_segment_template_armx FOR composed_edge;
  END_ENTITY;

  ENTITY Inter_stratum_feature_template_armx
    SUPERTYPE OF (ONEOF (Component_termination_passage_template_armx,
		 Via_template_armx,
		 Unsupported_passage_template_armx,
		 Inter_stratum_feature_edge_segment_template_armx,
		 Inter_stratum_feature_edge_template_armx))
    (* CONNOTATIONAL *) SUBTYPE OF (Geometric_template_armx, inter_stratum_feature_template);
      of_passage_technology : Passage_technology_armx;
    DERIVE
      SELF\Product_view_definition.name_x : STRING := '';
  END_ENTITY;

  ENTITY Part_string_template_armx
    SUBTYPE OF (Template_definition, part_string_template);
      string_alignment : text_alignment_armx;
  END_ENTITY;

  ENTITY Part_text_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Template_definition, part_text_template);
    	of_character                            : Character_glyph_symbol;
  END_ENTITY;

  ENTITY Snowball_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Teardrop_template_armx, snowball_template);
      snowball_start_distance     : length_measure_with_unit;
      snowball_end_distance       : OPTIONAL length_measure_with_unit;
      snowball_initial_spacing    : OPTIONAL length_measure_with_unit;
      snowball_end_spacing        : OPTIONAL length_measure_with_unit;
      snowball_initial_radius     : length_measure_with_unit;
      snowball_end_radius         : OPTIONAL length_measure_with_unit;
      snowball_quantity_per_trace : INTEGER; -- positive_integer;
    WHERE
      WR1 : NOT (snowball_quantity_per_trace > 1) OR (EXISTS(snowball_initial_spacing) AND EXISTS(snowball_end_spacing) AND EXISTS(snowball_end_distance) AND EXISTS(snowball_end_radius));
      WR2 : (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_XIM.PART_TEMPLATE_PLANAR_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0) AND 
            (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_3D_SHAPE_XIM.PART_TEMPLATE_3D_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0) AND 
            (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_NON_PLANAR_SHAPE_XIM.' + 'PART_TEMPLATE_NON_PLANAR_2D_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
  END_ENTITY;

  ENTITY Teardrop_by_angle_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Teardrop_template_armx, teardrop_by_angle_template);
      teardrop_angle : plane_angle_measure_with_unit;
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_XIM.PART_TEMPLATE_PLANAR_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0) AND 
            (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_3D_SHAPE_XIM.PART_TEMPLATE_3D_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0) AND 
            (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_NON_PLANAR_SHAPE_XIM.' + 'PART_TEMPLATE_NON_PLANAR_2D_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
  END_ENTITY;

  ENTITY Teardrop_by_length_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Teardrop_template_armx, teardrop_by_length_template);
      teardrop_taper_start_distance : length_measure_with_unit;
      teardrop_taper_end_distance   : length_measure_with_unit;
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_XIM.PART_TEMPLATE_PLANAR_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0) AND 
            (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_3D_SHAPE_XIM.PART_TEMPLATE_3D_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0) AND 
            (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_NON_PLANAR_SHAPE_XIM.' + 'PART_TEMPLATE_NON_PLANAR_2D_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
  END_ENTITY;

  ENTITY Teardrop_template_armx
    SUPERTYPE OF (ONEOF (Snowball_template_armx,
      Teardrop_by_angle_template_armx,
      Teardrop_by_length_template_armx))
    SUBTYPE OF (Parametric_template_armx, Single_stratum_template_armx, teardrop_template);
   WHERE
      WR1 : (SIZEOF(['LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_XIM.SNOWBALL_TEMPLATE_ARMX',
            'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_XIM.TEARDROP_BY_ANGLE_TEMPLATE_ARMX',
            'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_XIM.TEARDROP_BY_LENGTH_TEMPLATE_ARMX'] * TYPEOF(SELF)) = 1) XOR
            ('PRODUCT_IDENTIFICATION_EXTENSION_XIM.EXTERNALLY_DEFINED_VIEW_DEFINITION' IN TYPEOF(SELF));    
  END_ENTITY;
  
  ENTITY Trace_template_armx
    SUPERTYPE OF (Default_trace_template_armx)
    (* CONNOTATIONAL *) SUBTYPE OF (Parametric_template_armx, trace_template);
      trace_style : Curve_style_parameters;
    DERIVE
      SELF\Product_view_definition.name_x : STRING := '';
  END_ENTITY;

  ENTITY Closed_path_area_with_parameters
    SUBTYPE OF (Path_area_with_parameters_armx);
    SELF\Path_area_with_parameters_armx.centreline : closed_curve;
    SELF\Path_area_with_parameters_armx.parameters : Closed_curve_style_parameters_armx;
  END_ENTITY;

  ENTITY Fill_area_template_armx
   SUBTYPE OF (Parametric_template_armx, fill_area_template);
    outer_boundary_style : Closed_curve_style_parameters_armx;
    inner_boundary_style : Closed_curve_style_parameters_armx;
  END_ENTITY;

  ENTITY Hatch_area_template_armx
    SUBTYPE OF (Fill_area_template_armx, hatch_area_template);
      fill_boundary_style : Curve_style_parameters_with_ends_armx;
      hatch_pattern       : SET [1:4] OF Hatch_line_element_armx; 
      min_feature         : OPTIONAL length_measure_with_unit;
  END_ENTITY;

  ENTITY Hatch_line_element_armx 
    SUBTYPE OF (hatch_line_element);
      SELF\representation_item_relationship.relating_representation_item RENAMED hatch_line : line;
      SELF\representation_item_relationship.related_representation_item RENAMED offset      : measure_representation_item;
    DERIVE
      SELF\representation_item_relationship.name : label := ?;  
      SELF\representation_item_relationship.description : text := ?;
    WHERE
      WR1: ('MEASURE_SCHEMA.LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(offset));  
  END_ENTITY;

  ENTITY Land_physical_template_armx
    SUPERTYPE OF (ONEOF (Default_passage_based_land_physical_template_armx,
		 Default_attachment_size_based_land_physical_template_armx))
    (* CONNOTATIONAL *) SUBTYPE OF (Stratum_feature_template_armx, land_physical_template);
    INVERSE
      access_mechanisms                                   : SET[1:?] OF land_template_terminal_armx FOR of_shape(* TEMP-AD *);
      pre_defined_classification_code                     : SET[0:1] OF External_source_identification FOR items;      
    WHERE
      WR1 : SIZEOF(QUERY(ltjt <* access_mechanisms | ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_XIM.LAND_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(ltjt)))) > 0;
      WR2 : SIZEOF(QUERY(s <* SELF\Geometric_template_armx.shapes |
             NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_XIM.SINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION' IN TYPEOF(s)))) = 0;      
      WR3 : SIZEOF(SELF\Geometric_template_armx.shapes) > 0;             
  END_ENTITY;

  ENTITY Land_template_interface_terminal
    (* CONNOTATIONAL *) SUBTYPE OF (Land_template_terminal_armx);
      SELF\Land_template_terminal_armx.associated_definition : Default_attachment_size_based_land_physical_template_armx;
    DERIVE
      SELF\shape_aspect.description : text := 'interface terminal';
  END_ENTITY;

  ENTITY Land_template_join_terminal
    (* CONNOTATIONAL *) SUBTYPE OF (Land_template_terminal_armx);
    DERIVE
      SELF\shape_aspect.description : text := 'join terminal';
  END_ENTITY;

  ENTITY Land_template_terminal_armx
    ABSTRACT SUPERTYPE OF (ONEOF (Land_template_join_terminal,
 Land_template_interface_terminal))
    (* CONNOTATIONAL *) SUBTYPE OF (Shape_feature, land_template_terminal);
      SELF\shape_aspect.of_shape RENAMED associated_definition : Land_physical_template_armx;
      SELF\Shape_feature.connection_area                                : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
      terminal_category                                                 : OPTIONAL land_template_terminal_class;
    UNIQUE
      UR1 : SELF\shape_aspect.name,
 associated_definition;
    WHERE
      WR1 : NOT (EXISTS(SELF\Shape_feature.connection_area)) OR NOT EXISTS(terminal_category);
      WR2 : NOT EXISTS(SELF\shape_aspect.description);
      WR3 : SIZEOF(QUERY(ca <* connection_area |
            NOT(associated_definition = ca\Connection_zone_in_layout_template.of_shape)
            )) = 0;
  END_ENTITY;

  ENTITY Material_removal_feature_template_armx
      (* CONNOTATIONAL *)SUBTYPE OF (Single_stratum_continuous_template_armx, material_removal_feature_template);
    DERIVE
      SELF\Product_view_definition.name_x : STRING := '';
    WHERE
      WR1 : SIZEOF(SELF\Geometric_template_armx.shapes) > 0;
  END_ENTITY;

  ENTITY Parametric_template_armx
    ABSTRACT SUPERTYPE OF (ONEOF (Fill_area_template_armx,
      Teardrop_template_armx,
      Trace_template_armx))
    SUBTYPE OF (Template_definition, parametric_template);
  END_ENTITY;

  ENTITY Plated_passage_template_shape_model
    SUBTYPE OF (Part_template_shape_model);
       SELF\Part_template_shape_model.shape_characterized_definition : SET [1:?] OF ptswp_ptsm_definition;
       data_qualification : ptswp_template_shape_model_context;
    DERIVE
       template : shape_representation := shape_characterized_definition[1];  
    WHERE
      WR1 : SIZEOF(QUERY(scd <* shape_characterized_definition |  
              NOT(scd\Inter_stratum_feature_template_armx.of_passage_technology\Passage_technology_armx.plated_passage)
              )) = 0;
      WR2 : SIZEOF(QUERY(scd <* shape_characterized_definition |
              NOT(TYPEOF(scd) = TYPEOF(template))
              )) = 0;       
  END_ENTITY;

  ENTITY Single_stratum_continuous_template_armx
    ABSTRACT SUPERTYPE OF (ONEOF (Stratum_feature_template_armx, Material_removal_feature_template_armx))
    SUBTYPE OF (Continuous_template_armx, Single_stratum_template_armx, single_stratum_continuous_template);
  END_ENTITY;

  ENTITY Single_stratum_template_armx
    ABSTRACT SUPERTYPE OF (Single_stratum_continuous_template_armx)
    SUBTYPE OF (Template_definition, single_stratum_template);
  END_ENTITY;

  ENTITY Stratum_feature_template_armx
    SUPERTYPE OF (Land_physical_template_armx)
    (* CONNOTATIONAL *) SUBTYPE OF (Single_stratum_continuous_template_armx, stratum_feature_template);
  END_ENTITY;

  ENTITY Tile_area_template_armx
    SUBTYPE OF (Fill_area_template_armx);
      fill_template        : Single_stratum_template_armx;
      start_placement      : axis2_placement_2d;
      first_repeat_factor  : vector;
      second_repeat_factor : vector;
  END_ENTITY;

  ENTITY Unsupported_passage_template_armx
    SUPERTYPE OF (ONEOF (Counterbore_passage_template_armx,
      Countersunk_passage_template_armx,
      Blind_passage_template_armx)) 
    (* CONNOTATIONAL *) SUBTYPE OF (Continuous_template_armx, Inter_stratum_feature_template_armx, unsupported_passage_template);
      SELF\Inter_stratum_feature_template_armx.of_passage_technology : Default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY Via_template_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Continuous_template_armx, Inter_stratum_feature_template_armx, via_template);
      SELF\Inter_stratum_feature_template_armx.of_passage_technology : Default_via_definition;
    INVERSE
      access_mechanisms : SET[0:?] OF via_template_terminal FOR of_shape(* TEMP-AD *);
  END_ENTITY;

  ENTITY Via_template_terminal
    (* CONNOTATIONAL *) SUBTYPE OF (Shape_feature);
      SELF\shape_aspect.of_shape RENAMED associated_definition : Via_template_armx;
      disallowed_inter_stratum_extent                                   : OPTIONAL SET[1:?] OF Stratum_technology_occurrence_link_armx;
      SELF\Shape_feature.connection_area                                : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
    DERIVE
      SELF\shape_aspect.description : text := 'via template terminal';
    UNIQUE
      UR1 : SELF\shape_aspect.name, associated_definition;
  END_ENTITY;

  FUNCTION list_get_zone_name(input : SET OF Connection_zone_in_layout_template) : SET OF STRING;
    LOCAL
      s : SET OF STRING := [];
    END_LOCAL;
    REPEAT  i := 1 TO SIZEOF(input) BY 1;
      s := s + input[i]\characterized_object.name;
    END_REPEAT;
    RETURN(s);
  END_FUNCTION;

FUNCTION get_electrical_conductivity
  (mi : SET[0:?] OF material_designation) : BOOLEAN;
	REPEAT i := 1 to SIZEOF(mi) by 1;
	  IF ('CONDUCTIVITY_MATERIAL_ASPECT.'+'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' 
	  	IN TYPEOF (mi[i])) THEN
		  IF((EXISTS(mi[i]\material_identification_with_conductivity_classification.electrical_conductivity_classification)) AND 
		  (mi[i]\material_identification_with_conductivity_classification.electrical_conductivity_classification IN ['conductive', 'semi conductive', 'super conductive'])) THEN
	  		RETURN (TRUE);
	  	END_IF;	
	  END_IF;
	END_REPEAT;
	RETURN (FALSE);
END_FUNCTION;

RULE unique_land_physical_template FOR (Land_physical_template_armx);
   LOCAL
     esi : BAG OF External_source_identification := [];
     iid : BAG OF String := [];
     itype : BAG OF String := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Land_physical_template_armx) by 1;
     esi  := esi + Land_physical_template_armx[i].pre_defined_classification_code[1];
     iid := iid + Land_physical_template_armx[i].pre_defined_classification_code[1]\External_source_identification.source_id;
     itype := itype + Land_physical_template_armx[i].pre_defined_classification_code[1]\External_source_identification.source_type;
   END_REPEAT;  
  WHERE
   WR1 : (SIZEOF(esi) = SIZEOF(bag_to_set(esi))) AND
         (SIZEOF(iid) = SIZEOF(bag_to_set(iid))) AND
         (1 = SIZEOF(bag_to_set(itype)));
END_RULE;
  
END_SCHEMA;

