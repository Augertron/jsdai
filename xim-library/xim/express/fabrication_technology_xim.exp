(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
   Derived from ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Fabrication technology - EXPRESS ARM
   by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*)

SCHEMA Fabrication_technology_xim;
USE FROM Constructive_solid_geometry_2d_xim; 	-- ISO/TS 10303-1731
USE FROM Extended_geometric_tolerance_xim;  -- ISO/TS 10303-1666
USE FROM Layered_interconnect_complex_template_xim; -- ISO/TS 10303-1716
USE FROM Part_template_xim; -- ISO/TS 10303-1722
-- USE FROM Lksoft_extensions_xim(sequential_stratum_technology_occurrence_group_xim);

USE FROM Fabrication_technology_mim;
USE FROM product_property_definition_schema(characterized_definition);
REFERENCE FROM Specification_document_xim(get_document_definition);	-- ISO/TS 10303-1747
REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set);
(* Available on MIM
  TYPE ft_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
	(Stratum_technology_occurrence_relationship_armx);
  END_TYPE; *)

	TYPE ft_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Passage_technology_armx,
	   Stratum_technology_armx);
	END_TYPE; 

  TYPE ft_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
	(Passage_technology_armx,
	Stratum_technology_armx);
  END_TYPE;

  TYPE ft_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Stratum_technology_armx, 
     Passage_technology_armx);
  END_TYPE; 

  TYPE ft_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	(Passage_technology_armx,
    Stratum_technology_armx,
    Stratum_technology_occurrence_armx);
  END_TYPE; 

  TYPE ft_terminus_condition = EXTENSIBLE ENUMERATION OF
    (bilateral_bond,
     bilateral_complete_removal,
     unilateral_bond);
  END_TYPE;

  TYPE layer_position_type = ENUMERATION OF
    (secondary,
     all,
     external,
     primary,
     internal);
  END_TYPE;

  TYPE predefined_design_layer_purpose = ENUMERATION OF
    (other_signal,
     lands_only,
     power_or_ground,
     embedded_passive_capacitor_dielectric,
     embedded_passive_resistor);
  END_TYPE;

 	TYPE ft_external_identification_item_armx = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Design_layer_technology,
		Documentation_layer_technology);
	END_TYPE;

  TYPE predefined_documentation_layer_purpose = ENUMERATION OF
    (soldermask,
     solderpaste,
     silkscreen,
     generic_layer,
     glue,
     gluemask,
     pastemask,
     finish_coating);
  END_TYPE;

  TYPE stiffness_class = ENUMERATION OF
    (fluid_like_with_constant_thickness,
     fluid_like_with_varying_thickness,
     stiff_laminate);
  END_TYPE;

  TYPE ft_value_select = SELECT (
    Value_limit,
    Value_range_armx,
    measure_representation_item);
  END_TYPE;

  TYPE up_or_down = ENUMERATION OF
    (independent, 
     precedent, 
     subsequent);
  END_TYPE;

  ENTITY Allocated_passage_minimum_annular_ring_armx
    SUBTYPE OF (allocated_passage_minimum_annular_ring);
      supported_external_minimum_annular_ring   : OPTIONAL length_measure_with_unit;
      supported_internal_minimum_annular_ring   : OPTIONAL length_measure_with_unit;
      unsupported_minimum_annular_ring          : OPTIONAL length_measure_with_unit;
      minimum_fabrication_allowance             : OPTIONAL length_measure_with_unit;	   
      associated_passage_allocation             : SET [1:?] OF Passage_technology_allocation_to_stack_model_armx;
      associated_stratum_technology_occurrence  : OPTIONAL Stratum_technology_occurrence_armx;
    DERIVE
      associated_model : Stratum_stack_model_armx := associated_passage_allocation[1]\Stratum_sub_stack_armx.associated_stackup;
    WHERE
      WR1 : EXISTS(supported_external_minimum_annular_ring) OR
            EXISTS(supported_internal_minimum_annular_ring) OR
            EXISTS(unsupported_minimum_annular_ring) OR
            EXISTS(minimum_fabrication_allowance);
      WR2 : NOT EXISTS(associated_stratum_technology_occurrence) OR
             (associated_stratum_technology_occurrence IN associated_model\Stratum_stack_model_armx.composing_occurrence);
      WR3 : NOT EXISTS(supported_external_minimum_annular_ring) OR
             (SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(ptatsm\Passage_technology_allocation_to_stack_model_armx.allocated_technology\Passage_technology_armx.plated_passage)
                   )) = 0);
      WR4 : NOT EXISTS(supported_internal_minimum_annular_ring) OR
             (SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(ptatsm\Passage_technology_allocation_to_stack_model_armx.allocated_technology\Passage_technology_armx.plated_passage)
                   )) = 0);
      WR5 : NOT (EXISTS(unsupported_minimum_annular_ring) AND
             (SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(ptatsm\Passage_technology_allocation_to_stack_model_armx.allocated_technology\Passage_technology_armx.plated_passage)
                   )) = 0));
      WR6 : SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(associated_model = ptatsm\Stratum_sub_stack_armx.associated_stackup)
             )) =0;         
      WR7 : NOT (EXISTS(associated_stratum_technology_occurrence) AND
                 EXISTS(supported_internal_minimum_annular_ring));
  END_ENTITY;

  ENTITY Copy_stratum_technology_occurrence_relationship_armx
    SUBTYPE OF (Derived_stratum_technology_occurrence_relationship_armx, copy_stratum_technology_occurrence_relationship);
  END_ENTITY;

 ENTITY Default_component_termination_passage_definition
    (* CONNOTATIONAL *) SUBTYPE OF (Passage_technology_armx);
      allowed_component_terminal_extent	                            : Length_tolerance_characteristic;
      SELF\Passage_technology_armx.as_finished_deposition_thickness : Length_tolerance_characteristic;
      SELF\Passage_technology_armx.as_finished_passage_extent       : ft_value_select;      
    INVERSE
      SELF\Passage_technology_armx.deposition_material : SET[1:1] OF Passage_deposition_material_identification_armx FOR definitions; 
    WHERE  
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_XIM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]); 
  END_ENTITY;

  ENTITY Default_unsupported_passage_definition
    (* CONNOTATIONAL *) SUBTYPE OF (Passage_technology_armx);
    SELF\Passage_technology_armx.as_finished_passage_extent : ft_value_select;
  END_ENTITY;

  ENTITY Default_tapered_blind_via_definition
    SUBTYPE OF (Default_via_definition);
      as_finished_interior_passage_extent : Length_tolerance_characteristic;
    WHERE
      WR1: less(as_finished_interior_passage_extent, SELF\Default_via_definition.as_finished_passage_extent);      
  END_ENTITY;

 ENTITY Default_via_definition
    (* CONNOTATIONAL *) SUBTYPE OF (Passage_technology_armx);
      SELF\Passage_technology_armx.as_finished_deposition_thickness : Length_tolerance_characteristic;
      SELF\Passage_technology_armx.as_finished_passage_extent       : ft_value_select;    
    INVERSE
      SELF\Passage_technology_armx.deposition_material : SET [1:1] OF Passage_deposition_material_identification_armx FOR definitions;      
    WHERE
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_XIM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]);
  END_ENTITY;

  ENTITY Derived_stratum_technology_occurrence_relationship_armx
    ABSTRACT SUPERTYPE OF (ONEOF (
      Copy_stratum_technology_occurrence_relationship_armx,
      Inverse_copy_stratum_technology_occurrence_relationship_armx))
    SUBTYPE OF (Stratum_technology_occurrence_relationship_armx, derived_stratum_technology_occurrence_relationship);
  END_ENTITY;

  ENTITY Design_layer_technology
    (* CONNOTATIONAL *) SUBTYPE OF (Stratum_technology_armx);
      design_layer_purpose                                     		: OPTIONAL predefined_design_layer_purpose;
      SELF\Stratum_technology_armx.minimum_finished_feature_size    : Length_measure_with_unit;
      SELF\Stratum_technology_armx.minimum_finished_feature_spacing : Length_measure_with_unit;
   INVERSE
	  externally_defined_design_layer_purpose : SET [0:1] OF External_source_identification FOR item;            
   WHERE
	WR1 : (SIZEOF([SELF\Stratum_technology_armx.stratum_material[1]\Material_identification_with_conductivity_classification.electrical_conductivity_classification,
           SELF\Stratum_technology_armx.stratum_material[1]\Material_identification_with_conductivity_classification.thermal_conductivity_classification] *
           ['conductive']) >= 1) OR
       (SELF\Stratum_technology_armx.stratum_material[1]\Material_identification_with_conductivity_classification.magnetic_permeability_classification IN ['highly permeable']) OR
       (SELF\Stratum_technology_armx.stratum_material[1]\Material_identification_with_conductivity_classification.optical_insertion_loss_classification IN ['vacuum', 'very low loss', 'low loss']);
    WR2 : (EXISTS (design_layer_purpose)) XOR ((SIZEOF(externally_defined_design_layer_purpose)) = 1);              
  END_ENTITY;

  ENTITY Design_stack_model_armx -- choose some of the Stratum_technology_occurrence
    SUBTYPE OF(design_stack_model, Stratum_stack_model_armx);
      model_thickness : OPTIONAL Length_tolerance_characteristic;    
    INVERSE
      sub_stack: SET [1:?] OF Stratum_sub_stack_armx for associated_stackup;
  END_ENTITY;

  ENTITY Documentation_layer_technology
    (* CONNOTATIONAL *) SUBTYPE OF (Stratum_technology_armx);
      pre_defined_documentation_layer_purpose : OPTIONAL predefined_documentation_layer_purpose;
    INVERSE
	  externally_defined_documentation_layer_purpose : SET [0:1] OF External_source_identification FOR items;      
	WHERE
	  WR1: (EXISTS (pre_defined_documentation_layer_purpose)) XOR ((SIZEOF(externally_defined_documentation_layer_purpose)) = 1);
  END_ENTITY;

  ENTITY Equivalent_stackup_model_definition_armx
    SUBTYPE OF (Product_view_definition, equivalent_stackup_model_definition);
     SELF\product_definition_relationship.relating_product_definition RENAMED primary_stackup_model   : Stratum_stack_model_armx;
     SELF\product_definition_relationship.related_product_definition RENAMED equivalent_stackup_model : Stratum_stack_model_armx;
     equivalent_sub_stacks : SET [1:?] OF Equivalent_sub_stack_definition_armx;
    WHERE
      WR1 : primary_stackup_model :<>: equivalent_stackup_model;
      WR2 : SIZEOF(QUERY( ess <* equivalent_sub_stacks |
               NOT (ess\Equivalent_sub_stack_definition_armx.equivalent_stack\Stratum_sub_stack_armx.associated_stackup :=: equivalent_stackup_model)
                  )) = 0;
      WR3:  acyclic_equivalent_stackup_model_definition(SELF,
                    [equivalent_stackup_model],
                    'FABRICATION_TECHNOLOGY_XIM.EQUIVALENT_STACKUP_MODEL_DEFINITION_ARMX');
  END_ENTITY;
   
  ENTITY Equivalent_sub_stack_definition_armx
    SUBTYPE OF (Product_view_definition, equivalent_sub_stack_definition);
      equivalent_stack : Local_linear_stack;
      primary_sto : Stratum_technology_occurrence;
      primary_sto_link : Stratum_technology_occurrence_link;
    WHERE
      WR1 : primary_sto IN [primary_sto_link\Stratum_technology_occurrence_relationship_armx.sto_1,
                               primary_sto_link\Stratum_technology_occurrence_relationship_armx.sto_2]; 
      WR2 : equivalent_stack\Stratum_sub_stack_armx.associated_stackup :<>: primary_sto_link\Stratum_technology_occurrence_relationship_armx.scope; 
  END_ENTITY;   

  ENTITY Footprint_library_stratum_technology_armx
    SUBTYPE OF (Stratum_technology_armx, footprint_library_stratum_technology);
	WHERE
	  WR1: NOT EXISTS(stratum_thickness);
  END_ENTITY;

  ENTITY Impedance_measurement_setup_requirement_armx
    SUBTYPE OF (Predefined_requirement_view_definition_armx, impedance_measurement_setup_requirement);
      characterized_stackup     : Stratum_sub_stack_armx;
      measurement_stratum_1       : Stratum_technology_occurrence_armx;
      measurement_stratum_2       : Stratum_technology_occurrence_armx;
      reference_stratum         : SET [1:2] OF Stratum_technology_occurrence_armx;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
      WR2: NOT EXISTS(SELF\Product_view_definition.id);
      WR3: SIZEOF([measurement_stratum_1, measurement_stratum_2] * reference_stratum) = 0;
  END_ENTITY;

  ENTITY Impedance_requirement_armx
    SUBTYPE OF (Predefined_requirement_view_definition_armx, impedance_requirement);
      frequency_range           : Value_range_armx;
      impedance_value           : Tolerance_characteristic;
      test_bench                : Impedance_measurement_setup_requirement_armx;
      test_method               : Test_specification;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
      WR2: NOT EXISTS(SELF\Product_view_definition.id);
  END_ENTITY;

  ENTITY Inverse_copy_stratum_technology_occurrence_relationship_armx
    SUBTYPE OF (Derived_stratum_technology_occurrence_relationship_armx, inverse_copy_stratum_technology_occurrence_relationship);
  END_ENTITY;

  ENTITY Local_linear_stack_armx
    SUBTYPE OF (Stratum_sub_stack_armx, local_linear_stack); --TODO - likely supertype will change.
      SELF\Stratum_sub_stack_armx.stratum_technology_sequence : SET[1:?] OF Stratum_technology_occurrence_link_armx;
      -- Attribute in XIM only - have no relevance to ARM
      root_xim : OPTIONAL Sequential_stratum_technology_occurrence_group_xim;
    WHERE
      WR1: SIZEOF(get_stack(stratum_technology_sequence)) = (SIZEOF(stratum_technology_sequence) + 1);
      WR2: sts_vertex_degree_check(stratum_technology_sequence, 2);
  END_ENTITY;

  ENTITY Passage_deposition_material_identification_armx
    SUBTYPE OF (passage_deposition_material_identification);
    SELF\material_designation.definitions : SET [1:?] OF Passage_technology_armx;
  END_ENTITY;

  ENTITY Passage_filling_material_identification_armx
    SUBTYPE OF (passage_filling_material_identification);
    SELF\material_designation.definitions : SET [1:?] OF Passage_technology_armx;
  END_ENTITY;
  
	ENTITY Passage_technology_armx
		SUPERTYPE OF (ONEOF (Default_via_definition,
 			Default_component_termination_passage_definition,
 			Default_unsupported_passage_definition))
 			(* CONNOTATIONAL *) SUBTYPE OF (product_definition_shape, passage_technology);
      as_finished_deposition_thickness 	: OPTIONAL Length_tolerance_characteristic;
      as_finished_passage_extent       	: OPTIONAL ft_value_select;
      maximum_aspect_ratio            	: OPTIONAL REAL;
      minimum_finished_size             : OPTIONAL length_measure_with_unit;      
      plated_passage                   	: BOOLEAN;
      passage_terminus_condition        : OPTIONAL ft_terminus_condition;
      minimum_fabrication_allowance     : OPTIONAL length_measure_with_unit;
      minimum_finished_feature_size     : OPTIONAL length_measure_with_unit;
      supported_external_minimum_annular_ring   : OPTIONAL length_measure_with_unit;
      supported_internal_minimum_annular_ring   : OPTIONAL length_measure_with_unit;
      unsupported_minimum_annular_ring          : OPTIONAL length_measure_with_unit;
    DERIVE  
      SELF\property_definition.name : label := ?;    
      SELF\property_definition.definition : Passage_technology_armx := SELF;     
	  specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'specification', 
  			'SPECIFICATION_DOCUMENT_XIM.PROCESS_SPECIFICATION');
  	  -- cover all subtypes
  	  SELF\characterized_object.description : text :=?;	
   INVERSE
      deposition_material : SET [0:1] OF Passage_deposition_material_identification_armx FOR definitions;
      fill_material : SET [0:1] OF Passage_filling_material_identification_armx FOR definitions;
   UNIQUE
     UR1 : SELF\characterized_object.name;     
   WHERE
	  WR1 : NOT (SIZEOF(deposition_material) = 1) OR
            ('CONDUCTIVITY_MATERIAL_ASPECTS_XIM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1])); 
      WR2: NOT plated_passage OR (SIZEOF(deposition_material) = 1);
      WR3: NOT EXISTS(as_finished_deposition_thickness) OR (SIZEOF(deposition_material) = 1);
      WR4: NOT plated_passage OR
           (SIZEOF([deposition_material[1].electrical_conductivity_classification,
                   deposition_material[1].thermal_conductivity_classification] *
                  ['conductive']) >= 1);
      WR5: NOT ((passage_terminus_condition = ft_terminus_condition.bilateral_bond) OR
                (passage_terminus_condition = ft_terminus_condition.unilateral_bond)) OR
           plated_passage;                
      WR6: NOT (EXISTS(as_finished_passage_extent) AND EXISTS(minimum_finished_feature_size));                  
      WR7: NOT EXISTS(supported_external_minimum_annular_ring) OR plated_passage;
      WR8: NOT EXISTS(supported_internal_minimum_annular_ring) OR plated_passage;
      WR9: NOT EXISTS(unsupported_minimum_annular_ring) AND plated_passage;
	END_ENTITY; 

  ENTITY Passage_technology_allocation_to_stack_model_armx
    SUBTYPE OF (Stratum_sub_stack_armx, passage_technology_allocation_to_stack_model);
      allocated_technology            : Passage_technology_armx;
      single_stratum_passage_location : OPTIONAL Stratum_technology_occurrence_armx;
	  target_stratum                  : OPTIONAL Stratum_technology_occurrence_armx;
	DERIVE
	   terminus_stratum                : SET OF Stratum_technology_occurrence_armx := ft_get_terminus(SELF\Stratum_sub_stack_armx.stratum_technology_sequence);
       SELF\property_definition.name : label := ?;
       SELF\property_definition.description : text := ?;
       SELF\property_definition.id : identifier := ?;
    INVERSE
      minimum_annular_ring             : SET [0:?] OF Allocated_passage_minimum_annular_ring_armx FOR associated_passage_allocation;
    WHERE 
      WR1: (NOT EXISTS(single_stratum_passage_location) OR
        (single_stratum_passage_location IN
        SELF\Stratum_sub_stack_armx.associated_stackup.composing_occurrence));
      WR2: EXISTS(SELF\Stratum_sub_stack_armx.stratum_technology_sequence) XOR
        EXISTS(single_stratum_passage_location);
      WR3: SIZEOF(get_stack(SELF\Stratum_sub_stack_armx.stratum_technology_sequence)) = 
                 (SIZEOF(SELF\Stratum_sub_stack_armx.stratum_technology_sequence) + 1);
      WR4: sts_vertex_degree_check(SELF\Stratum_sub_stack_armx.stratum_technology_sequence, 2);
	  WR5: NOT EXISTS(single_stratum_passage_location) OR NOT EXISTS(target_stratum);
	  WR6: NOT EXISTS(target_stratum) OR
			  ((target_stratum IN SELF\Stratum_sub_stack_armx.associated_stackup.composing_occurrence) AND
	           (target_stratum IN terminus_stratum));
      WR7: ft_count_unspecified_asto(minimum_annular_ring) < 2;	           
  END_ENTITY;

  ENTITY Stratum_stack_model_armx
    ABSTRACT SUPERTYPE OF (Design_stack_model_armx)
    SUBTYPE OF(Template_definition, stratum_stack_model);
    DERIVE
      composing_occurrence : SET [1:?] OF Stratum_technology_occurrence_armx := get_stack(composing_link);
    INVERSE
      composing_link : SET[1:?] OF Stratum_technology_occurrence_link_armx FOR scope;    
    WHERE
      WR1 : SIZEOF(QUERY( cl <* composing_link |
            NOT('FABRICATION_TECHNOLOGY_XIM.STRATUM_TECHNOLOGY_OCCURRENCE_LINK_ARMX' IN TYPEOF(cl))
                  )) = 0;  
  END_ENTITY;

  ENTITY Stratum_sub_stack_armx 
    ABSTRACT SUPERTYPE OF (ONEOF(Local_linear_stack_armx, 
      Passage_technology_allocation_to_stack_model_armx))
    SUBTYPE OF (Template_definition, stratum_sub_stack);      
      stack_thickness             : OPTIONAL Length_tolerance_characteristic;          
      stratum_technology_sequence : OPTIONAL SET[1:?] OF Stratum_technology_occurrence_link_armx;
      associated_stackup          : Design_stack_model_armx;
    WHERE
      WR1: SIZEOF(QUERY(sts <* stratum_technology_sequence | 
        NOT(associated_stackup :=: sts\Stratum_technology_occurrence_relationship_armx.scope)) ) = 0;        
  END_ENTITY;

  ENTITY Stratum_technology_armx
    SUPERTYPE OF (ONEOF (Design_layer_technology,
 Documentation_layer_technology))
 		(* CONNOTATIONAL *) SUBTYPE OF (product_definition_shape, stratum_technology);
      layer_position                   : layer_position_type;
      stratum_thickness                : Length_tolerance_characteristic;
      minimum_finished_feature_size    : OPTIONAL Length_measure_with_unit;
      laminate_stiffness_class         : OPTIONAL stiffness_class;
      minimum_finished_feature_spacing : OPTIONAL Length_measure_with_unit;
      maximum_feature_size_requirement : OPTIONAL Length_measure_with_unit;
      minimum_aspect_ratio             : OPTIONAL REAL;      
   DERIVE
   		SELF\property_definition.name : label := ?;
		SELF\property_definition.definition : Stratum_technology_armx := SELF;   
		specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'specification', 
  			'SPECIFICATION_DOCUMENT_XIM.PROCESS_SPECIFICATION');
		surface_specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'surface specification', 
  			'SPECIFICATION_DOCUMENT_XIM.SURFACE_FINISH_SPECIFICATION');   
     SELF\characterized_object.description : text := ?;
     -- TEMP - workarround for the bug in mapping compiler
     -- SELF\property_definition.name : label :=  ? ;
   INVERSE
	  stratum_material   : SET[1:1] OF material_designation FOR definitions;      
      surface_technology : SET[0:2] OF Stratum_surface_technology_armx FOR associated_technology;
    UNIQUE
      UR1 : SELF\characterized_object.name;
    WHERE
      WR1 : NOT (layer_position = layer_position_type.primary) OR ('FABRICATION_TECHNOLOGY_XIM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
      WR2 : NOT (layer_position = layer_position_type.secondary) OR ('FABRICATION_TECHNOLOGY_XIM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
	  WR3 : 'CONDUCTIVITY_MATERIAL_ASPECTS_XIM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (stratum_material[1]);
	  WR4 : NOT((SIZEOF(surface_technology) > 0 ) AND (SIZEOF(surface_specification) = 1));	  
  END_ENTITY;

  ENTITY Stratum_surface_technology_armx
    SUBTYPE OF (shape_aspect, stratum_surface_technology);
    SELF\shape_aspect.of_shape RENAMED associated_technology : Stratum_technology_armx;
  DERIVE
    surface_specification: SET[0:1] OF Document_definition :=
  	    		get_document_definition(SELF, 'surface specification',  	
                                        'SPECIFICATION_DOCUMENT_XIM.SURFACE_FINISH_SPECIFICATION');
  WHERE
    WR1 : (SIZEOF(USEDIN(SELF,'SURFACE_CONDITIONS_XIM.SURFACE_CONDITION_ASSOCIATION.DESCRIBED_ELEMENT')) > 0) OR 
          (SIZEOF(get_document_definition(SELF, 'surface specification', 'SPECIFICATION_DOCUMENT_XIM.SURFACE_FINISH_SPECIFICATION')) = 1);
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_feature_constraint_armx
    SUBTYPE OF (Stratum_technology_occurrence_relationship);
      difference_distance   : OPTIONAL length_measure_with_unit;    
      intersection_distance : OPTIONAL length_measure_with_unit;
    WHERE
      WR1: EXISTS (difference_distance) XOR EXISTS(intersection_distance);
  END_ENTITY;
  
  ENTITY Stratum_technology_mapping_relationship_armx
    SUBTYPE Of (stratum_technology_mapping_relationship);
      SELF\property_definition_relationship.relating_property_definition RENAMED source_stratum_technology   : Footprint_library_stratum_technology_armx;
      SELF\property_definition_relationship.related_property_definition RENAMED target_stratum_technology   : Stratum_technology_armx;
    WHERE 
      WR1 : NOT ('FABRICATION_TECHNOLOGY_XIM.FOOTPRINT_LIBRARY_STRATUM_TECHNOLOGY_ARMX' IN TYPEOF(target_stratum_technology));
      WR2 : acyclic_stratum_technology_mapping_relationship(SELF,
        [target_stratum_technology], 
       'FABRICATION_TECHNOLOGY_XIM.STRATUM_TECHNOLOGY_MAPPING_RELATIONSHIP_ARMX');
  END_ENTITY;
  
  ENTITY Stratum_technology_occurrence_armx
    SUBTYPE OF (stratum_technology_occurrence);
      SELF\property_definition.definition : Stratum_technology_armx;
      primary    : OPTIONAL Stratum_surface_technology_armx;
      rotation   : OPTIONAL plane_angle_measure_with_unit;
  UNIQUE
    UR1: name;
   --also don't want to disallow multiple references to one stratum_technology!
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_link_armx
   SUBTYPE OF(Stratum_technology_occurrence_relationship_armx, stratum_technology_occurrence_link);
     base_stratum_technology_occurrence                                                        : OPTIONAL up_or_down; 
  DERIVE
    SELF\property_definition.name : label := ?; -- overlaps with 'base_stratum_technology_occurrence'
    SELF\property_definition.description : text := ?;
    SELF\property_definition_relationship.name : label := ?;
    SELF\property_definition_relationship.description : text := ?;
  WHERE
   WR1 : NOT (SELF\Stratum_technology_occurrence_relationship_armx.sto_1 :=: SELF\Stratum_technology_occurrence_relationship_armx.sto_2) OR 
                (SIZEOF(SELF\Stratum_technology_occurrence_relationship_armx.scope\Stratum_stack_model_armx.composing_link) = 1);
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_relationship_armx
    ABSTRACT SUPERTYPE OF (ONEOF
      (Derived_stratum_technology_occurrence_relationship_armx,
       Stratum_technology_occurrence_link_armx,
       Stratum_technology_occurrence_swap_relationship_armx))
    SUBTYPE OF(stratum_technology_occurrence_relationship);
      SELF\property_definition_relationship.relating_property_definition RENAMED sto_1 : Stratum_technology_occurrence_armx;
      SELF\property_definition_relationship.related_property_definition RENAMED sto_2  : Stratum_technology_occurrence_armx;
      SELF\property_definition.definition RENAMED scope                                : Stratum_stack_model_armx;
    DERIVE
      SELF\property_definition.name : label :=  ? ;
      SELF\property_definition.description : text :=  ? ;
      SELF\property_definition_relationship.name : label :=  ? ;
      SELF\property_definition_relationship.description : text :=  ? ;          
    WHERE
      WR1 : acyclic_stratum_technology_occurrence_relationship(SELF, [sto_2], 
           'FABRICATION_TECHNOLOGY_XIM.STRATUM_TECHNOLOGY_OCCURRENCE_RELATIONSHIP_ARMX');
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_swap_relationship_armx
    SUBTYPE OF (Stratum_technology_occurrence_relationship_armx, stratum_technology_occurrence_swap_relationship);
    UNIQUE
      UR1 : SELF\Stratum_technology_occurrence_relationship_armx.sto_1, SELF\Stratum_technology_occurrence_relationship_armx.scope;
      UR2 : SELF\Stratum_technology_occurrence_relationship_armx.sto_2, SELF\Stratum_technology_occurrence_relationship_armx.scope;
    WHERE
      WR1 : SELF\Stratum_technology_occurrence_relationship_armx.sto_1 <> SELF\Stratum_technology_occurrence_relationship_armx.sto_2;
      WR2 : (SELF\Stratum_technology_occurrence_relationship_armx.sto_1 IN SELF\Stratum_technology_occurrence_relationship_armx.scope\Stratum_stack_model_armx.composing_occurrence) AND
         (SELF\Stratum_technology_occurrence_relationship_armx.sto_2 IN SELF\Stratum_technology_occurrence_relationship_armx.scope\Stratum_stack_model_armx.composing_occurrence);
  END_ENTITY;

 ENTITY Stratum_technology_swap_relationship_armx
  (* CONNOTATIONAL *) SUBTYPE OF (stratum_technology_swap_relationship);
    SELF\property_definition_relationship.relating_property_definition RENAMED primary_stratum_technology   : Stratum_technology_armx;
    SELF\property_definition_relationship.related_property_definition RENAMED secondary_stratum_technology  : Stratum_technology_armx;
   DERIVE
      SELF\property_definition_relationship.name : label :=?; 
      SELF\property_definition_relationship.description : text :=?; 
   UNIQUE
    ur1: primary_stratum_technology;
    ur2: secondary_stratum_technology;
   WHERE 
    WR1 : NOT (('FABRICATION_TECHNOLOGY_XIM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(primary_stratum_technology)) AND
              EXISTS(primary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose))
          OR
          (primary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose =
           secondary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose);
    WR2: TYPEOF(primary_stratum_technology) = TYPEOF(secondary_stratum_technology);
    WR3: primary_stratum_technology\Stratum_technology_armx.layer_position = layer_position_type.primary;
    WR4: secondary_stratum_technology\Stratum_technology_armx.layer_position = layer_position_type.secondary;    
    WR5: primary_stratum_technology <> secondary_stratum_technology;
    WR6: acyclic_stratum_technology_swap_relationship(SELF,
      [secondary_stratum_technology], 
     'FABRICATION_TECHNOLOGY_XIM.STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP_ARMX');
  END_ENTITY;

  FUNCTION acyclic_stratum_technology_occurrence_relationship
    (relation : Stratum_technology_occurrence_relationship_armx; 
    relatives : SET[1:?] OF Stratum_technology_occurrence_armx; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_occurrence_relationship_armx := [];
  END_LOCAL;
    IF relation.sto_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.sto_1,
      'FABRICATION_TECHNOLOGY_XIM.' +
      'STRATUM_TECHNOLOGY_OCCURRENCE_RELATIONSHIP_ARMX.' +
      'STO_2')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_Stratum_technology_occurrence_relationship(x[i], relatives +
        relation.sto_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

  FUNCTION acyclic_stratum_technology_swap_relationship
    (relation : Stratum_technology_swap_relationship_armx; 
    relatives : SET[1:?] OF Stratum_technology_armx; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_swap_relationship_armx := [];
  END_LOCAL;

    IF relation.primary_stratum_technology IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.primary_stratum_technology,
      'FABRICATION_TECHNOLOGY_XIM.' +
      'STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP_ARMX.' +
      'SECONDARY_STRATUM_TECHNOLOGY')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_stratum_technology_swap_relationship(x[i], relatives +
        relation.primary_stratum_technology, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

 FUNCTION get_stack(input : SET OF Stratum_technology_occurrence_link_armx) : SET OF Stratum_technology_occurrence_armx;
  LOCAL
   sto : SET OF Stratum_technology_occurrence_armx := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   sto := sto + input[i].sto_1 + input[i].sto_2;
  END_REPEAT;
  RETURN(sto);
 END_FUNCTION;

  FUNCTION ft_count_unspecified_asto(input : SET OF Allocated_passage_minimum_annular_ring_armx) : INTEGER;
    LOCAL
     count : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 to SIZEOF(input) BY 1;
     IF NOT EXISTS(input[i]\Allocated_passage_minimum_annular_ring_armx.associated_stratum_technology_occurrence) THEN
       count := count + 1;
     END_IF;
    END_REPEAT;
    RETURN(count);
  END_FUNCTION;
  
  FUNCTION less(input1 : Length_tolerance_characteristic;
              input2 : ft_value_select) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;

 FUNCTION sts_vertex_degree_less_than_two(input : SET OF Stratum_technology_occurrence_link_armx) : BOOLEAN;
 LOCAL
   psto : BAG OF INTEGER := [];
   ssto : BAG OF INTEGER := [];
   sto : SET OF Stratum_technology_occurrence_armx := get_stack(input);
   i : INTEGER := 0;
   j : INTEGER := 0;
   pass : BOOLEAN := TRUE;
 END_LOCAL;
  REPEAT i := 1 TO SIZEOF(sto) BY 1;
   REPEAT j := 1 TO SIZEOF(input) BY 1;
     IF (input[j].sto_1 :=: sto[i]) THEN
      psto[i] := psto[i] + 1;
      IF (psto[i] = 2) THEN 
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
     IF (input[j].sto_2 :=: sto[i]) THEN  
      ssto[i] := ssto[i] + 1;  
      IF (ssto[i] = 2) THEN 
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
   END_REPEAT;                                     
  END_REPEAT;                                     
 RETURN(pass);
 END_FUNCTION;                                 

FUNCTION acyclic_equivalent_stackup_model_definition
  (relation : Equivalent_stackup_model_definition_armx; relatives : SET[1:?] OF
  Stratum_stack_model_armx; specific_relation : STRING) : BOOLEAN; 
LOCAL
    x : SET OF Equivalent_stackup_model_definition_armx := [];
END_LOCAL;

    IF relation.primary_stackup_model IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.primary_stackup_model,
        'FABRICATION_TECHNOLOGY_XIM.' + 'EQUIVALENT_STACKUP_MODEL_DEFINITION_ARMX.' +
        'EQUIVALENT_STACKUP_MODEL')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_equivalent_stackup_model_definition(x[i], relatives +
        relation.primary_stackup_model, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

 FUNCTION sts_vertex_degree_check(input : SET OF Stratum_technology_occurrence_link_armx;
                                       n : INTEGER) : BOOLEAN;
 LOCAL
   psto : INTEGER := 0;
   ssto : INTEGER := 0;
   sto : SET OF Stratum_technology_occurrence_armx := get_stack(input);
   i : INTEGER := 0;
   j : INTEGER := 0;
   pass : BOOLEAN := TRUE;
 END_LOCAL;
  REPEAT i := 1 TO SIZEOF(sto) BY 1;
   REPEAT j := 1 TO SIZEOF(input) BY 1;
     IF (input[j]\Stratum_technology_occurrence_relationship_armx.sto_1 :=: sto[i]) THEN 
      psto := psto + 1;
      IF (psto = n) THEN
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
     IF (input[j]\Stratum_technology_occurrence_relationship_armx.sto_2 :=: sto[i]) THEN 
      ssto := ssto + 1;  
      IF (ssto = n) THEN 
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
   END_REPEAT;                                     
  END_REPEAT;                                     
 RETURN(pass);
 END_FUNCTION;     

FUNCTION ft_get_terminus(input : SET OF Stratum_technology_occurrence_link_armx) : SET OF Stratum_technology_occurrence_armx;
LOCAL
  sto : SET OF Stratum_technology_occurrence_armx := get_stack(input);
  i : INTEGER := 0;
  j : INTEGER := 0;
  pstoo : SET OF Stratum_technology_occurrence_armx := [];
  sstoo : SET OF Stratum_technology_occurrence_armx := [];
END_LOCAL;
  pstoo := sto;
  sstoo := sto;
 REPEAT i := 1 TO SIZEOF(sto) BY 1;
  REPEAT j := 1 TO SIZEOF(input) BY 1;
	IF (input[j]\Stratum_technology_occurrence_relationship_armx.sto_1 :=: sto[i]) THEN 
	  pstoo := pstoo - sto[i];
	END_IF;  
	IF (input[j]\Stratum_technology_occurrence_relationship_armx.sto_2 :=: sto[i]) THEN 
	  sstoo := sstoo - sto[i];
	END_IF;  
  END_REPEAT;                                     
 END_REPEAT;                                     
RETURN(pstoo + sstoo);
END_FUNCTION;                                 

  FUNCTION acyclic_stratum_technology_mapping_relationship
    (relation : Stratum_technology_mapping_relationship_armx; 
    relatives : SET[1:?] OF Stratum_technology_armx; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_mapping_relationship_armx := [];
  END_LOCAL;

    IF relation.source_stratum_technology IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.source_stratum_technology,
      'FABRICATION_TECHNOLOGY_XIM.' +
      'STRATUM_TECHNOLOGY_MAPPING_RELATIONSHIP_ARMX.' +
      'TARGET_STRATUM_TECHNOLOGY')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_stratum_technology_mapping_relationship(x[i], relatives +
        relation.source_stratum_technology, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 


END_SCHEMA;

