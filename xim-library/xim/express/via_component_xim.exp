(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
   Derived from ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Via component - EXPRESS ARM
   by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*)
SCHEMA Via_component_xim;

USE FROM Layered_interconnect_module_design_xim;

USE FROM Interconnect_module_connection_routing_xim;

USE FROM Via_component_mim;

  ENTITY Blind_via_armx
    ABSTRACT SUPERTYPE OF (ONEOF (Bonded_conductive_base_blind_via_armx,
 Non_conductive_base_blind_via_armx,
 Plated_conductive_base_blind_via_armx))
    (* CONNOTATIONAL *) SUBTYPE OF (Via_armx, blind_via);
  END_ENTITY;

  ENTITY Bonded_conductive_base_blind_via_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Blind_via_armx, bonded_conductive_base_blind_via);
      features_join : Stratum_feature_conductive_join_armx;
    UNIQUE
    	UR1 : features_join;
  END_ENTITY;

  ENTITY Buried_via_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Via_armx, buried_via);
  END_ENTITY;
  
  ENTITY Interfacial_connection_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Via_armx, interfacial_connection);
  END_ENTITY;

  ENTITY Non_conductive_base_blind_via_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Blind_via_armx, non_conductive_base_blind_via);
  END_ENTITY;

  ENTITY Plated_conductive_base_blind_via_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Blind_via_armx, plated_conductive_base_blind_via);
  END_ENTITY;

 SUBTYPE_CONSTRAINT via_subtypes FOR Via_armx;   
 	(ONEOF (Blind_via_armx,
 	Buried_via_armx,
 	Interfacial_connection_armx));
 END_SUBTYPE_CONSTRAINT;  

END_SCHEMA;

