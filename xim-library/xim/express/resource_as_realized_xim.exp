(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
 Derived from ISO TC184/SC4/WG12 N3139 - ISO/TS 10303-1269 Resource as realized - EXPRESS ARM
 by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*) 


SCHEMA Resource_as_realized_xim;

USE FROM Classification_assignment_xim;    -- ISO/TS 10303-1114

USE FROM Required_resource_xim;    -- ISO/TS 10303-1267

USE FROM Resource_item_xim;    -- ISO/TS 10303-1268

USE FROM Resource_management_xim;    -- ISO/TS 10303-1266

USE FROM Value_with_unit_xim;    -- ISO/TS 10303-1054


TYPE resource_as_realized_classification_item_armx = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (Resource_as_realized, 
    Resource_as_realized_assignment, 
    Resource_as_realized_relationship);
END_TYPE; 

TYPE resource_as_realized_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE resource_as_realized_relationship_select = SELECT
   (Required_resource, 
    Resource_event);
END_TYPE; 

ENTITY Resource_as_realized
	(* CONNOTATIONAL *) SUBTYPE OF (action_resource);
	(* attributes are accessable from supertype
  name : STRING;
  description : OPTIONAL STRING; *)
  quantity : OPTIONAL measure_with_unit;
 (* This attribute overlaps with entity mapping, so better to make it not accessable to developer by making it dervied *)
 DERIVE
  SELF\action_resource.usage : SET [1:?] OF supported_item := ?;
END_ENTITY;

ENTITY Resource_as_realized_assignment
	(* CONNOTATIONAL *) SUBTYPE OF (action_method);
  assigned_resource : Resource_as_realized;
  item : resource_as_realized_item;
 DERIVE
    SELF\action_method.name : label := 'resource management';
	SELF\action_method.consequence : text := 'resource as realized assignment';
	SELF\action_method.purpose : text := 'standard action method';
END_ENTITY;

ENTITY Resource_as_realized_relationship
	(* CONNOTATIONAL *) SUBTYPE OF (action_resource_relationship);
	(* attributes are accessable from supertype
  name : STRING;
  description : OPTIONAL STRING; *)
  SELF\action_resource_relationship.relating_resource RENAMED relating : Resource_as_realized;
  related : resource_as_realized_relationship_select;
 DERIVE 
 	SELF\action_resource_relationship.name : label := 'resource as realized relationship';
 	(* this attribute is overlapping with related attribute *)
 	SELF\action_resource_relationship.related_resource : action_resource := ?;
END_ENTITY;

ENTITY Resource_as_realized_resource_item
  (* CONNOTATIONAL *) SUBTYPE OF (Resource_as_realized);
  resource_item : Resource_item;
END_ENTITY;

END_SCHEMA;  -- Resource_as_realized_arm

