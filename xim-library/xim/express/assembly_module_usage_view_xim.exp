(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
   Derived from ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Assembly module usage view - EXPRESS ARM 
   by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*)

SCHEMA Assembly_module_usage_view_xim;

USE FROM Functional_usage_view_xim;

USE FROM Packaged_connector_model_xim;

USE FROM Assembly_module_usage_view_mim;


  ENTITY Assembly_module_interface_terminal_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Assembly_module_terminal_armx, assembly_module_interface_terminal);
  END_ENTITY;

  ENTITY Assembly_module_terminal_armx
    SUPERTYPE OF (assembly_module_interface_terminal_armx ANDOR
 Layered_assembly_module_terminal)
    (* CONNOTATIONAL *) SUBTYPE OF (Part_terminal, assembly_module_terminal);
      SELF\Shape_element.containing_shape(* TEMP-PF! *) : Assembly_module_usage_view_armx;
      reference_terminal                      : OPTIONAL Packaged_part_interface_terminal;
      related_connector                       : OPTIONAL Next_assembly_usage_occurrence_relationship_armx;
      SELF\Shape_feature.connection_area      : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
    WHERE
      WR1 : NOT EXISTS(related_connector) OR (SELF\Shape_element.containing_shape = related_connector\Product_occurrence_definition_relationship_armx.related_view);
      WR2 : EXISTS(related_connector.reference_designator);
  END_ENTITY;

  ENTITY Assembly_module_usage_view_armx
    SUPERTYPE OF (Layered_assembly_module_usage_view_armx)
    (* CONNOTATIONAL *) SUBTYPE OF (Part_usage_view, assembly_module_usage_view);
      implemented_function              : OPTIONAL Functional_unit_usage_view;
    DERIVE
      SELF\Product_view_definition.additional_characterization : STRING := 'assembly module';  
    INVERSE
      access_mechanisms : SET[0:?] OF assembly_module_terminal_armx FOR containing_shape(* TEMP-AD! *);
  END_ENTITY;

  ENTITY Layered_assembly_module_terminal
    (* CONNOTATIONAL *) SUBTYPE OF (Assembly_module_terminal_armx);
      SELF\Shape_element.containing_shape(* TEMP-PF! *) : Layered_assembly_module_usage_view_armx;
  END_ENTITY;

  ENTITY Layered_assembly_module_usage_view_armx
    (* CONNOTATIONAL *) SUBTYPE OF (Assembly_module_usage_view_armx, layered_assembly_module_usage_view);
      maximum_negative_component_height : OPTIONAL Datum_based_length_measure;
      maximum_positive_component_height : OPTIONAL Datum_based_length_measure;
  END_ENTITY;

END_SCHEMA;

