(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*
   Derived from ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Physical unit 2d design view - EXPRESS ARM
   by LKSoftWare GmbH for implementation purpose within IDA-STEP(TM)
*)

SCHEMA Physical_unit_2d_design_view_xim;

USE FROM Part_template_shape_with_parameters_xim;  -- ISO/TS 10303-1720

USE FROM Physical_unit_2d_shape_xim;  

USE FROM Physical_unit_design_view_xim;	-- ISO/TS 10303-1728

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set);

USE FROM Physical_unit_2d_design_view_mim;

  ENTITY Assembly_component_2d_shape_model
    (* CONNOTATIONAL *) SUBTYPE OF (Planar_projected_shape_model);
      shape_characterized_component : SET[1:?] OF Assembly_component_armx;
    DERIVE
      equivalent_reference_shape_model : SET [0:1] OF Shape_representation_relationship :=
        bag_to_set(QUERY( gmr <* USEDIN(SELF, 'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.SHAPE_REPRESENTATION_RELATIONSHIP.REP_2') |
        (gmr\Representation_relationship.relation_type = 'equivalent reference shape model')));      
    WHERE
      WR1 : SIZEOF(equivalent_reference_shape_model) < 2;         
      WR2 : (SIZEOF(USEDIN(SELF,
       'EXTENDED_BASIC_GEOMETRY_XIM.' + 'REFERENCE_GEOMETRIC_REPRESENTATION_RELATIONSHIP__SRR.' + 'RELATED_FEATURE_SHAPE')) = 0);       
      WR3 : (SIZEOF(USEDIN(SELF,
        'EXTENDED_BASIC_GEOMETRY_XIM.' + 'REFERENCE_GEOMETRIC_REPRESENTATION_RELATIONSHIP__MI.' + 'RELATED_FEATURE_SHAPE')) = 0);       
  END_ENTITY;

  ENTITY Component_2d_location_armx
   SUBTYPE OF (Contextual_shape_representation, Geometric_composition_with_operator_transformation, component_2d_location);
     placement_fixed : BOOLEAN;
     SELF\Geometric_relationship_with_operator_transformation.transformation : cartesian_transformation_operator_2d;
     SELF\representation_relationship.rep_2 RENAMED assembly_model : Physical_unit_planar_shape_model;  -- CHANGED
     SELF\representation_relationship.rep_1 RENAMED component_model : shape_representation; -- CHANGED
   DERIVE
     component : Next_assembly_usage_occurrence_relationship_armx := SELF\Contextual_shape_representation.contextual_shape.described_element;   
     substrate_location : BOOLEAN := substrate_in_assembly(SELF);
  	 the_context : geometric_representation_context := assembly_model\Shape_representation\Representation.context_of_items;
     SELF\context_dependent_shape_representation.representation_relation : shape_representation_relationship := SELF;   -- NEW
     SELF\Representation_relationship.name : label := 'component 2d location';
--	 component : next_assembly_usage_occurrence := SELF\context_dependent_shape_representation.represented_product_relation\property_definition.definition;     
   WHERE
     WR1: EXISTS (component);  
     WR2: NOT('PHYSICAL_UNIT_2D_DESIGN_VIEW_XIM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Next_assembly_usage_occurrence_relationship_armx.related_view IN component_model\Assembly_component_2d_shape_model.shape_characterized_component);
     WR3: NOT('PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_XIM.PHYSICAL_UNIT_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component_model\Physical_unit_shape_model.shape_characterized_definition :=: 
     component\Next_assembly_usage_occurrence_relationship_armx.related_view\Assembly_component_armx.derived_from);
     WR4: NOT('PART_TEMPLATE_SHAPE_WITH_PARAMETERS_XIM.PART_TEMPLATE_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Next_assembly_usage_occurrence_relationship_armx.related_view\Assembly_component_armx.derived_from IN
      component_model\Part_template_shape_model.shape_characterized_definition);
  END_ENTITY;

RULE unique_assembly_component_2d_shape_model FOR (Assembly_component_2d_shape_model);
   LOCAL
     ac : BAG OF Assembly_component_armx := [];
     pass : BOOLEAN := TRUE;
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_2d_shape_model) by 1;
     ac  := ac + Assembly_component_2d_shape_model[i].shape_characterized_component;
   END_REPEAT;
  WHERE
   WR1 : SIZEOF(ac) = SIZEOF(bag_to_set(ac));
  END_RULE;

  FUNCTION substrate_in_assembly(
    c2dl : Component_2d_location_armx
  ) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;

  RULE unique_physical_unit_planar_shape_model_for_part_design_and_usage_view FOR
      (Part_design_view, Part_usage_view);
    WHERE
      WR1:  SIZEOF(QUERY (pdv <* Part_design_view | 
        (SIZEOF (QUERY (pupsm1 <* USEDIN
        (pdv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_XIM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
        ('PHYSICAL_UNIT_2D_SHAPE_XIM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF
        (pupsm1)) AND (SIZEOF (QUERY (pupsm2 <* USEDIN
        (pdv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_XIM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
        ('PHYSICAL_UNIT_2D_SHAPE_XIM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF (pupsm2)) AND (pupsm1 = pupsm2))) > 1)
        )) > 0) )) = 0;  
      WR2:  SIZEOF(QUERY (puv <* Part_usage_view | (SIZEOF (QUERY (pupsm1 <*
        USEDIN (puv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_XIM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
          ('PHYSICAL_UNIT_2D_SHAPE_XIM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF (pupsm1)) AND 
          (SIZEOF (QUERY (pupsm2 <* USEDIN (puv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_XIM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |
          ('PHYSICAL_UNIT_2D_SHAPE_XIM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF (pupsm2)) AND 
          (pupsm1 = pupsm2))) > 1) )) > 0) )) = 0;  
  END_RULE;

  function pu2dv_has_shape(input : Assembly_component_armx) : BOOLEAN;
  LOCAL
    ac2ds : BAG OF Assembly_component_2d_shape_model := USEDIN(input,'PHYSICAL_UNIT_2D_DESIGN_VIEW_XIM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT');
  END_LOCAL;

  RETURN(SIZEOF(ac2ds) > 0);
  END_FUNCTION;

  function pu2dv_typeof(input : Assembly_component_armx) : SET OF STRING;
  LOCAL
    ac2ds : BAG OF Assembly_component_2d_shape_model := USEDIN(input,'PHYSICAL_UNIT_2D_DESIGN_VIEW_XIM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT');
  END_LOCAL;
  IF SIZEOF(ac2ds) > 1 THEN 
    RETURN(?);
  END_IF;
  RETURN(TYPEOF(ac2ds[1]));
  END_FUNCTION;


END_SCHEMA;




