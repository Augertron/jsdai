(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping via_component(Via_component_arm, Via_component_mim);*)


entity_mapping Blind_via_armx(Blind_via_armx, blind_via);

mapping_constraints;
blind_via <=
via <=				
plated_passage <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
component_definition  <=
product_definition

end_mapping_constraints;

end_entity_mapping;

entity_mapping Buried_via_armx(Buried_via_armx, buried_via);

mapping_constraints;
buried_via <=
via <=				
plated_passage <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
component_definition  <=
product_definition

end_mapping_constraints;

end_entity_mapping;

entity_mapping Interfacial_connection_armx(Interfacial_connection_armx, interfacial_connection);

mapping_constraints;
interfacial_connection <=
via <=				
plated_passage <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
component_definition  <=
product_definition

end_mapping_constraints;

end_entity_mapping;

entity_mapping Non_conductive_base_blind_via_armx(Non_conductive_base_blind_via_armx, non_conductive_base_blind_via);

mapping_constraints;
non_conductive_base_blind_via <=
blind_via <=
via <=				
plated_passage <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
component_definition  <=
product_definition

end_mapping_constraints;

end_entity_mapping;

entity_mapping Plated_conductive_base_blind_via_armx(Plated_conductive_base_blind_via_armx, plated_conductive_base_blind_via);

mapping_constraints;
plated_conductive_base_blind_via <=
blind_via <=
via <=				
plated_passage <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
component_definition  <=
product_definition

end_mapping_constraints;

end_entity_mapping;

(*end_schema_mapping;*)
