(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping conductivity_material_aspects(Conductivity_material_aspects_arm, Conductivity_material_aspects_mim);*)

(* Taken from AIM
entity_mapping Classification_assignment(Classification_assignment, applied_classification_assignment)
extended;

attribute_mapping items(items, , Material_identification_with_conductivity_classification);

				classification_item *> cma_classification_item
				cma_classification_item = material_designation
			
end_attribute_mapping;

end_entity_mapping;
*)
entity_mapping Conductivity_material_property_class(Conductivity_material_property_class, class);

mapping_constraints;
class <=
		group
		{(group.description = 'thermal conductivity')
		(group.description = 'electrical conductivity')}
		
end_mapping_constraints;

end_entity_mapping;

entity_mapping Material_electrical_conductivity_class(Material_electrical_conductivity_class, class);

mapping_constraints;
class <=
		group
		{group.description = 'electrical conductivity'}
		
end_mapping_constraints;

end_entity_mapping;
(*
entity_mapping Material_identification(Material_identification, material_designation)
extended;

attribute_mapping items(items, $PATH, Part_view_definition);
 characterized_definition
			characterized_definition = characterized_product_definition
			characterized_product_definition
			characterized_product_definition = product_definition
			
end_attribute_mapping;

end_entity_mapping;
*)
entity_mapping Material_identification_with_conductivity_classification(Material_identification_with_conductivity_classification, material_designation_with_conductivity_classification);

mapping_constraints;
material_designation_with_conductivity_classification <=
			material_designation
		
end_mapping_constraints;

end_entity_mapping;

entity_mapping Material_thermal_conductivity_class(Material_thermal_conductivity_class, class);

mapping_constraints;
class <=
		group 
		{group.description = 'thermal conductivity'}
		
end_mapping_constraints;

end_entity_mapping;

entity_mapping Relative_permeability_material_property_class(Relative_permeability_material_property_class, class);

mapping_constraints;
class <=
		group
		{group.description = 'relative permeability'}
		
end_mapping_constraints;

end_entity_mapping;

entity_mapping Relative_optical_insertion_loss_material_property_class(Relative_optical_insertion_loss_material_property_class, class);

mapping_constraints;
class <=
		group
		{group.description = 'relative optical insertion loss'}
		
end_mapping_constraints;

end_entity_mapping;

entity_mapping Relative_permittivity_material_property_class(Relative_permittivity_material_property_class, class);

mapping_constraints;
class <=
		group
		{group.description = 'relative permittivity'}
		
end_mapping_constraints;

end_entity_mapping;


(*end_schema_mapping;*)
