(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping product_concept_identification(Product_concept_identification_arm, Product_concept_identification_mim);*)

uof_mapping Product_Concept_Identification(Product_Concept_Identification);

entity_mapping Market(Market, 
				product_concept_context
			);

attribute_mapping name(name, 
					application_context_element.name
				);
product_concept_context <= application_context_element
				application_context_element.name
				
end_attribute_mapping;

attribute_mapping market_segment_type(market_segment_type, 
					product_concept_context.market_segment_type
				);

end_attribute_mapping;

end_entity_mapping;

entity_mapping Product_concept(Product_concept, 
				product_concept
			);

attribute_mapping id(id, 
					product_concept.id
				);

end_attribute_mapping;

attribute_mapping name(name, 
					product_concept.name
				);

end_attribute_mapping;

attribute_mapping description(description, 
					product_concept.description
				);

end_attribute_mapping;

attribute_mapping target_market(target_market, $PATH, Market);

				product_concept.market_context ->
				product_concept_context
				
end_attribute_mapping;

end_entity_mapping;
end_uof_mapping;

(*end_schema_mapping;*)
