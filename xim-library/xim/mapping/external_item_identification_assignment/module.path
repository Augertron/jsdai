(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping external_item_identification_assignment(External_item_identification_assignment_arm, External_item_identification_assignment_mim);*)

uof_mapping External_Item_Identification_Assignment(External_Item_Identification_Assignment);
(* Replaced by entity External_source_identification
entity_mapping External_item_identification(External_item_identification, applied_external_identification_assignment);

mapping_constraints;
applied_external_identification_assignment <= 
external_identification_assignment
end_mapping_constraints;

attribute_mapping external_id(external_id, identification_assignment.assigned_id);
applied_external_identification_assignment <= 
external_identification_assignment <=
identification_assignment
identification_assignment.assigned_id
end_attribute_mapping;

end_entity_mapping;
*)
entity_mapping External_source_identification(External_source_identification, applied_external_identification_assignment);

attribute_mapping source_id(source_id, external_source.source_id);
applied_external_identification_assignment <= 
external_identification_assignment
external_identification_assignment.source -> external_source
{external_source.source_id -> source_item
source_item = identifier}
end_attribute_mapping;

attribute_mapping source_type(source_type, identification_role.name);
applied_external_identification_assignment <= 
external_identification_assignment <=
identification_assignment
identification_assignment.role ->
identification_role
identification_role.name
end_attribute_mapping;

attribute_mapping item(item, $PATH, external_identification_item);
applied_external_identification_assignment.items[i]-> external_identification_item 

end_attribute_mapping;

attribute_mapping description(description, identification_role.description);
applied_external_identification_assignment <= 
external_identification_assignment <=
identification_assignment
identification_assignment.role ->
identification_role
identification_role.description
end_attribute_mapping;

end_entity_mapping;
end_uof_mapping;

(*end_schema_mapping;*)
