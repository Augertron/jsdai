(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping cable(Cable_arm, Cable_mim);*)


entity_mapping Cable_terminal_armx(Cable_terminal_armx, cable_terminal);

mapping_constraints;
cable_terminal <=
shape_aspect

end_mapping_constraints;

attribute_mapping connection_area(connection_area, $PATH, Connection_zone_in_usage_view);
cable_terminal <=
shape_aspect <-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'connection area'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect ->
shape_aspect
{shape_aspect
shape_aspect.description = 'connection zone'}

end_attribute_mapping;

attribute_mapping mapped_terminal(mapped_terminal, $PATH, Packaged_connector_component_interface_terminal);
cable_terminal <=
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'mapped terminal'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect.description = 'packaged connector component interface terminal'}
shape_aspect =>
component_feature =>
physical_component_feature =>
physical_component_interface_terminal

end_attribute_mapping;

attribute_mapping associated_definition(associated_definition, $PATH, Part_usage_view);
cable_terminal <=
shape_aspect
shape_aspect.of_shape ->
product_definition_shape =>
physical_unit =>
cable_usage_view

end_attribute_mapping;

end_entity_mapping;

entity_mapping Cable_usage_view_armx(Cable_usage_view_armx, cable_usage_view);

mapping_constraints;
cable_usage_view <=
physical_unit <=
product_definition

end_mapping_constraints;

end_entity_mapping;

entity_mapping Part_terminal(Part_terminal, 
			(/SUBTYPE(Cable_terminal_armx)/)
		)
extended;

end_entity_mapping;
(*end_schema_mapping;*)
