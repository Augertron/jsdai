(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping pre_defined_datum_2d_symbol(Pre_defined_datum_2d_symbol_arm, Pre_defined_datum_2d_symbol_mim);*)


entity_mapping Pre_defined_datum_2d_symbol(Pre_defined_datum_2d_symbol, shape_representation);

mapping_constraints;
shape_representation <=
{representation
(representation.description = 'pre defined parallel datum axis 2d symbol')
(representation.description = 'pre defined perpendicular datum axis 2d symbol')
(representation.description = 'pre defined perpendicular datum plane 2d symbol')}
representation

end_mapping_constraints;

attribute_mapping associated_element(associated_element, $PATH, Datum_axis);
shape_representation <=
representation <-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition ->
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect
{shape_aspect
shape_aspect.product_definitional = .FALSE.}
{shape_aspect 
shape_aspect.description = 'axis'} 
shape_aspect =>
datum

end_attribute_mapping;

end_entity_mapping;

entity_mapping Pre_defined_parallel_datum_axis_2d_symbol(Pre_defined_parallel_datum_axis_2d_symbol, shape_representation);

mapping_constraints;
shape_representation <=
{representation
representation.description = 'pre defined parallel datum axis 2d symbol'}
representation

end_mapping_constraints;

end_entity_mapping;

entity_mapping Pre_defined_perpendicular_datum_axis_2d_symbol(Pre_defined_perpendicular_datum_axis_2d_symbol, shape_representation);

mapping_constraints;
shape_representation <=
{representation
representation.description = 'pre defined perpendicular datum axis 2d symbol'}
representation

end_mapping_constraints;

end_entity_mapping;

entity_mapping Pre_defined_perpendicular_datum_plane_2d_symbol(Pre_defined_perpendicular_datum_plane_2d_symbol, shape_representation);

mapping_constraints;
shape_representation <=
{representation
representation.description = 'pre defined perpendicular datum plane 2d symbol'}
representation

end_mapping_constraints;

end_entity_mapping;
(*end_schema_mapping;*)
