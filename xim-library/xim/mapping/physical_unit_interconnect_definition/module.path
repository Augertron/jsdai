(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping physical_unit_interconnect_definition(Physical_unit_interconnect_definition_arm, Physical_unit_interconnect_definition_mim);*)


entity_mapping connector_based_interconnect_definition_armx(connector_based_interconnect_definition_armx, connector_based_interconnect_definition);

mapping_constraints;
connector_based_interconnect_definition <=
property_definition

end_mapping_constraints;

attribute_mapping name(name, property_definition.name);
connector_based_interconnect_definition <=
property_definition
property_definition.name

end_attribute_mapping;

attribute_mapping associated_definition(associated_definition, $PATH, Physical_unit_interconnect_definition);
connector_based_interconnect_definition <=
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =>
physical_unit_interconnect_definition

end_attribute_mapping;

attribute_mapping component_1(component_1, $PATH, next_assembly_usage_occurrence);
connector_based_interconnect_definition <=
property_definition <-
property_definition_relationship.related_property_definition
property_definition_relationship
{property_definition_relationship
property_definition_relationship.name = 'component 1'}
property_definition_relationship.relating_property_definition ->
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
product_definition_relationship =>
product_definition_usage =>
assembly_component_usage =>
next_assembly_usage_occurrence

end_attribute_mapping;

attribute_mapping component_2(component_2, $PATH, next_assembly_usage_occurrence);
connector_based_interconnect_definition <=
property_definition <-
property_definition_relationship.related_property_definition
property_definition_relationship
{property_definition_relationship
property_definition_relationship.name = 'component 2'}
property_definition_relationship.relating_property_definition ->
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
product_definition_relationship =>
product_definition_usage =>
assembly_component_usage =>
next_assembly_usage_occurrence

end_attribute_mapping;

attribute_mapping connector_in_uv_1(connector_in_uv_1, $PATH, next_assembly_usage_occurrence);
connector_based_interconnect_definition <=
property_definition <-
property_definition_relationship.related_property_definition
property_definition_relationship
{property_definition_relationship
property_definition_relationship.name = 'connector in uv 1'}
property_definition_relationship.relating_property_definition ->
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
product_definition_relationship =>
product_definition_usage =>
assembly_component_usage =>
next_assembly_usage_occurrence

end_attribute_mapping;

attribute_mapping connector_in_uv_2(connector_in_uv_2, $PATH, next_assembly_usage_occurrence);
connector_based_interconnect_definition <=
property_definition <-
property_definition_relationship.related_property_definition
property_definition_relationship
{property_definition_relationship
property_definition_relationship.name = 'connector in uv 2'}
property_definition_relationship.relating_property_definition ->
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
product_definition_relationship =>
product_definition_usage =>
assembly_component_usage =>
next_assembly_usage_occurrence

end_attribute_mapping;

end_entity_mapping;

entity_mapping physical_unit_interconnect_definition_armx(physical_unit_interconnect_definition_armx, physical_unit_interconnect_definition);

mapping_constraints;
physical_unit_interconnect_definition <=
				product_definition
			
end_mapping_constraints;

end_entity_mapping;
(*end_schema_mapping;*)
