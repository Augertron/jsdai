(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping layout_macro_definition(Layout_macro_definition_arm, Layout_macro_definition_mim);*)


entity_mapping Layout_macro_component_armx(Layout_macro_component_armx, layout_macro_component);

mapping_constraints;
layout_macro_component <=
printed_component <=
assembly_component <=
component_definition <=
product_definition

end_mapping_constraints;

attribute_mapping design_definition(design_definition, $PATH, Layout_macro_definition_armx);
layout_macro_component <=
printed_component <=
assembly_component <=
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'design definition'}
product_definition_relationship
product_definition_relationship.relating_product_definition ->
product_definition =>
physical_unit =>
interconnect_module_design_view =>
layered_interconnect_module_design_view =>
layout_macro_definition

end_attribute_mapping;

attribute_mapping derived_from(derived_from, $PATH, Layout_macro_floor_plan_template_armx);
layout_macro_component <=
printed_component <=
assembly_component <=
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_template =>
layout_macro_floor_plan_template

end_attribute_mapping;

end_entity_mapping;

entity_mapping Layout_macro_definition_armx(Layout_macro_definition_armx, layout_macro_definition);

mapping_constraints;
layout_macro_definition <=
layered_interconnect_module_design_view <=
interconnect_module_design_view <=
physical_unit <=
product_definition_shape <=
property_definition
{property_definition.name = 'interconnect module'}


end_mapping_constraints;

attribute_mapping floor_layout_view(floor_layout_view, $PATH, Layout_macro_floor_plan_template_armx);
layout_macro_definition <=
layered_interconnect_module_design_view <=
interconnect_module_design_view <=
physical_unit <=
product_definition <-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'floor layout view'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_template =>
layout_macro_floor_plan_template

end_attribute_mapping;

end_entity_mapping;

entity_mapping Layout_macro_definition_terminal_to_usage_terminal_assignment_armx(Layout_macro_definition_terminal_to_usage_terminal_assignment_armx, layout_macro_definition_terminal_to_usage_terminal_assignment);

mapping_constraints;
{[layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect]
[layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship]}

end_mapping_constraints;

attribute_mapping defined_template_feature(defined_template_feature, $PATH, Printed_part_template_terminal);
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect ->
shape_aspect =>
printed_part_template_terminal

end_attribute_mapping;

attribute_mapping assigned_design_object(assigned_design_object, $PATH, Component_termination_passage_join_terminal);
layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
{shape_aspect
shape_aspect.description = 'component termination passage join terminal'}
shape_aspect =>
component_feature =>
component_terminal =>
laminate_component_join_terminal

end_attribute_mapping;

attribute_mapping assigned_design_object(assigned_design_object, $PATH, Conductive_interconnect_element_terminal);
layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
{shape_aspect
shape_aspect.description = 'conductive interconnect element terminal'}
shape_aspect =>
component_feature =>
laminate_component_feature

end_attribute_mapping;

attribute_mapping assigned_design_object(assigned_design_object, $PATH, Land_join_terminal);
layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect.description = 'land join terminal'}
shape_aspect =>
component_feature =>
laminate_component_feature =>
laminate_component_join_terminal

end_attribute_mapping;

attribute_mapping assigned_design_object(assigned_design_object, $PATH, Printed_component_join_terminal);
layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect.description = 'printed component join terminal'}
shape_aspect =>
component_feature =>				
laminate_component_feature =>	
laminate_component_join_terminal 

end_attribute_mapping;

attribute_mapping assigned_design_object(assigned_design_object, $PATH, Via_terminal);
layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect.description = 'via terminal'}
shape_aspect =>
component_feature =>
laminate_component_feature

end_attribute_mapping;

attribute_mapping assigned_design_object(assigned_design_object, $PATH, Embedded_physical_component_terminal);
layout_macro_definition_terminal_to_usage_terminal_assignment <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect.description = 'embedded physical component terminal'}
shape_aspect =>
component_feature =>
component_terminal =>
laminate_component_join_terminal

end_attribute_mapping;

end_entity_mapping;

entity_mapping Layout_macro_floor_plan_template_armx(Layout_macro_floor_plan_template_armx, layout_macro_floor_plan_template);

mapping_constraints;
layout_macro_floor_plan_template <=
printed_part_template <=
part_template_definition <=
product_definition

end_mapping_constraints;

attribute_mapping access_maps(access_maps, $PATH, Layout_macro_definition_terminal_to_usage_terminal_assignment_armx);
layout_macro_floor_plan_template <=
printed_part_template <=
part_template_definition <=
product_definition_shape <-
shape_aspect.of_shape
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'access maps'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
layout_macro_definition_terminal_to_usage_terminal_assignment

end_attribute_mapping;

end_entity_mapping;
(*end_schema_mapping;*)
