(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping external_class(External_class_arm, External_class_mim);*)

uof_mapping External_Class(External_Class);

entity_mapping External_class(External_class, externally_defined_class);

attribute_mapping external_source(external_source, $PATH, External_class_library);
class =>
externally_defined_class <=externally_defined_item
externally_defined_item
externally_defined_item.source ->
external_source
end_attribute_mapping;

end_entity_mapping;

entity_mapping External_class_library(External_class_library, external_class_library);

mapping_constraints;
external_class_library <= external_source 
external_source 
   
end_mapping_constraints;

attribute_mapping id(id, external_source.source_id);
external_class_library <= external_source 
external_source 
external_source.source_id
{external_source.source_id ->
source_item
source_item = identifier
identifier}
end_attribute_mapping;

attribute_mapping description(description, external_source.description);
external_class_library <= external_source 
external_source 
external_source = description_attribute_select
description_attribute_select <- description_attribute.described_item
description_attribute.attribute_value
   
end_attribute_mapping;

end_entity_mapping;
end_uof_mapping;


entity_mapping Name_assignment(Name_assignment, applied_name_assignment)
extended;

attribute_mapping items(items, $PATH, External_class_library);

         name_item *> external_class_name_item
         external_class_name_item = external_class_library
       
end_attribute_mapping;

end_entity_mapping;
(*end_schema_mapping;*)
