(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping interconnect_module_connection_routing(Interconnect_module_connection_routing_arm, Interconnect_module_connection_routing_mim);*)


entity_mapping Dependently_located_layer_connection_point(Dependently_located_layer_connection_point, layer_connection_point);

mapping_constraints;
layer_connection_point <=
shape_aspect
{shape_aspect
shape_aspect.description = 'dependently located'}

end_mapping_constraints;

attribute_mapping reference_zone(reference_zone, $PATH, Connection_zone_in_design_view);
layer_connection_point <=
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'reference zone'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect.description = 'connection zone'}

end_attribute_mapping;

attribute_mapping associated_design_object(associated_design_object, $PATH, terminal_or_inter_stratum_feature);
layer_connection_point <=
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'associated design object'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
(shape_aspect =>
component_feature =>
component_terminal =>
laminate_component_join_terminal)
(shape_aspect =>
interconnect_module_terminal)
(shape_aspect =>
component_feature =>
component_terminal =>
physical_component_terminal =>
interconnect_module_macro_component_join_terminal)
(shape_aspect.of_shape ->
product_definition_shape =>
assembly_component =>
laminate_component =>
inter_stratum_feature)

end_attribute_mapping;

attribute_mapping associated_design_object(associated_design_object, $PATH, Embedded_physical_component_terminal);
layer_connection_point <=
				shape_aspect <-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'associated design object'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect
				shape_aspect =>
				component_feature =>
				component_terminal =>
				laminate_component_join_terminal
				
end_attribute_mapping;

attribute_mapping associated_design_object(associated_design_object, $PATH, Inter_stratum_feature_armx);
layer_connection_point <=
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'associated design object'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
shape_aspect.of_shape ->
product_definition_shape =>
assembly_component =>
laminate_component =>
inter_stratum_feature

end_attribute_mapping;

attribute_mapping associated_design_object(associated_design_object, $PATH, Interconnect_module_macro_component_join_terminal_armx);
layer_connection_point <=
				shape_aspect <-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'associated design object'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect
				shape_aspect =>
				component_feature =>
				component_terminal =>
				physical_component_terminal =>
				interconnect_module_macro_component_join_terminal
				
end_attribute_mapping;

attribute_mapping associated_design_object(associated_design_object, $PATH, Interconnect_module_terminal_armx);
layer_connection_point <=
				shape_aspect <-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'associated design object'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect
				shape_aspect =>
				interconnect_module_terminal
				
end_attribute_mapping;

attribute_mapping associated_design_object(associated_design_object, $PATH, Printed_component_join_terminal);
layer_connection_point <=
				shape_aspect <-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'associated design object'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect
				shape_aspect =>
				component_feature =>
				component_terminal =>
				laminate_component_join_terminal
				
end_attribute_mapping;

end_entity_mapping;

entity_mapping Dielectric_crossover_area_armx(Dielectric_crossover_area_armx, dielectric_crossover_area);

mapping_constraints;
[dielectric_crossover_area <=
shape_aspect_relationship]
[dielectric_crossover_area <=
shape_aspect]

end_mapping_constraints;

attribute_mapping related_concept(related_concept, $PATH, Stratum_feature_armx);
dielectric_crossover_area <=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect ->
shape_aspect =>
stratum_feature

end_attribute_mapping;

attribute_mapping relating_concept(relating_concept, $PATH, Stratum_feature_armx);
dielectric_crossover_area <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
stratum_feature

end_attribute_mapping;

attribute_mapping resulting_dielectric_crossover(resulting_dielectric_crossover, $PATH, Stratum_feature_armx);
dielectric_crossover_area <=
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'resulting dielectric crossover'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
stratum_feature

end_attribute_mapping;

attribute_mapping resulting_shape(resulting_shape, $PATH, Shape_representation);
dielectric_crossover_area <=
shape_aspect_relationship
shape_definition = shape_aspect_relationship
shape_definition
characterized_definition = shape_definition
characterized_definition <-
property_definition.definition
property_definition <-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation ->
representation

end_attribute_mapping;

end_entity_mapping;

entity_mapping Direct_stratum_component_join_implementation_armx(Direct_stratum_component_join_implementation_armx, direct_stratum_component_join_implementation);

mapping_constraints;
direct_stratum_component_join_implementation <=
shape_aspect_relationship

end_mapping_constraints;

attribute_mapping topological_requirement(topological_requirement, $PATH, Stratum_embedded_physical_component_join_relationship);
direct_stratum_component_join_implementation <=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect ->
{shape_aspect
shape_aspect.name = 'stratum embedded physical component join'}
shape_aspect =>
join_shape_aspect

end_attribute_mapping;

attribute_mapping implementing_joint(implementing_joint, $PATH, Fabrication_joint_armx);
direct_stratum_component_join_implementation <=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
component_feature_joint =>
fabrication_joint

end_attribute_mapping;

end_entity_mapping;

entity_mapping Explicitly_located_layer_connection_point(Explicitly_located_layer_connection_point, layer_connection_point);

mapping_constraints;
layer_connection_point <=
shape_aspect
{shape_aspect
shape_aspect.description = 'explicitly located'}

end_mapping_constraints;

end_entity_mapping;

entity_mapping Indirect_stratum_component_join_implementation_armx(Indirect_stratum_component_join_implementation_armx, indirect_stratum_component_join_implementation);

mapping_constraints;
indirect_stratum_component_join_implementation <=
plated_inter_stratum_feature

end_mapping_constraints;

attribute_mapping indirect_topological_requirement(indirect_topological_requirement, $PATH, Stratum_embedded_physical_component_join_relationship);
indirect_stratum_component_join_implementation <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
product_definition_shape <-
shape_aspect.of_shape
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'indirect topological requirement'}
shape_aspect_relationship.relating_shape_aspect ->
{shape_aspect
shape_aspect.name = 'stratum embedded physical component join'}
shape_aspect =>
join_shape_aspect

end_attribute_mapping;

attribute_mapping implementing_joint(implementing_joint, $PATH, Fabrication_joint_armx);
indirect_stratum_component_join_implementation <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
product_definition_shape <-
shape_aspect.of_shape
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementing joint'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
component_feature_joint =>
fabrication_joint

end_attribute_mapping;

end_entity_mapping;

entity_mapping Inter_stratum_join_implementation(Inter_stratum_join_implementation, (stratum_feature_conductive_join) (plated_inter_stratum_feature));

mapping_constraints;
(stratum_feature_conductive_join <=
product_definition_relationship
{product_definition_relationship
product_definition_relationship.description = 'physical net supporting stratum feature conductive join'})
(plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
component_definition <=
product_definition)

end_mapping_constraints;

attribute_mapping topological_requirement(topological_requirement, $PATH, Inter_stratum_join_relationship);
(stratum_feature_conductive_join <=
product_definition_relationship
characterized_product_definition = product_definition_relationship
characterized_definition = characterized_product_definition
characterized_definition <-
property_definition.definition					
property_definition =>
product_definition_shape)
(plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
product_definition_shape)
product_definition_shape <-
shape_aspect.of_shape
shape_aspect
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'join implementation'}
shape_aspect_relationship.relating_shape_aspect ->
{shape_aspect
shape_aspect.name = 'inter stratum join'}
shape_aspect =>
join_shape_aspect

end_attribute_mapping;

end_entity_mapping;

entity_mapping Junction_vertex_allocation(Junction_vertex_allocation, shape_aspect_relationship);

mapping_constraints;
{shape_aspect_relationship
shape_aspect_relationship.name = 'junction vertex allocation'}

end_mapping_constraints;

attribute_mapping implementation_point(implementation_point, $PATH, trace_junction_or_via);
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect ->
shape_aspect

end_attribute_mapping;

attribute_mapping required_vertex(required_vertex, $PATH, Topological_junction);
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
{shape_aspect
shape_aspect.description = 'topological junction'}

end_attribute_mapping;

end_entity_mapping;

entity_mapping Physical_connectivity_abstraction_map(Physical_connectivity_abstraction_map, shape_aspect_relationship);

mapping_constraints;
{shape_aspect_relationship
shape_aspect_relationship.name = 'physical to topological abstraction map'}

end_mapping_constraints;

attribute_mapping geometric_context_based_definition(geometric_context_based_definition, $PATH, Conductive_interconnect_element_terminal_link_armx);
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
conductive_interconnect_element_terminal_link

end_attribute_mapping;

attribute_mapping geometric_context_based_definition(geometric_context_based_definition, $PATH, Passage_terminal_based_fabrication_joint_link_armx);
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
passage_terminal_based_fabrication_joint_link

end_attribute_mapping;

attribute_mapping name_space_context_based_definition(name_space_context_based_definition, $PATH, Physical_connectivity_element_armx);
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect ->
shape_aspect =>
physical_connectivity_element

end_attribute_mapping;

end_entity_mapping;

entity_mapping Physical_connectivity_element_armx(Physical_connectivity_element_armx, physical_connectivity_element)
extended;

attribute_mapping start_terminus(start_terminus, $PATH, Inter_stratum_join_relationship);

				physical_connectivity_element <=
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'start to end terminus'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect =>
				join_shape_aspect
				
end_attribute_mapping;

attribute_mapping start_terminus(start_terminus, $PATH, Explicitly_located_layer_connection_point);

				physical_connectivity_element <=
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'start to end terminus'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect =>
				layer_connection_point
				
end_attribute_mapping;

attribute_mapping end_terminus(end_terminus, $PATH, Inter_stratum_join_relationship);

				physical_connectivity_element <=
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'start to end terminus'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect =>
				join_shape_aspect
				
end_attribute_mapping;

attribute_mapping end_terminus(end_terminus, $PATH, Explicitly_located_layer_connection_point);

				physical_connectivity_element <=
				shape_aspect_relationship
				{shape_aspect_relationship
				shape_aspect_relationship.name = 'start to end terminus'}
				shape_aspect_relationship.relating_shape_aspect ->
				shape_aspect =>
				layer_connection_point
				
end_attribute_mapping;

end_entity_mapping;

entity_mapping Physical_network_supporting_inter_stratum_feature_armx(Physical_network_supporting_inter_stratum_feature_armx, physical_network_supporting_inter_stratum_feature);

mapping_constraints;
physical_network_supporting_inter_stratum_feature <=
plated_inter_stratum_feature <=
inter_stratum_feature <=
laminate_component <=
assembly_component <=
product_definition_shape

end_mapping_constraints;

end_entity_mapping;

entity_mapping Physical_network_supporting_stratum_feature_conductive_join(Physical_network_supporting_stratum_feature_conductive_join, stratum_feature_conductive_join);

mapping_constraints;
stratum_feature_conductive_join <=
product_definition_relationship
{product_definition_relationship
product_definition_relationship.description = 'physical net supporting stratum feature conductive join'}

end_mapping_constraints;

end_entity_mapping;

entity_mapping Stratum_feature_conductive_join_armx(Stratum_feature_conductive_join_armx, stratum_feature_conductive_join);

mapping_constraints;
stratum_feature_conductive_join <=
product_definition_relationship

end_mapping_constraints;

attribute_mapping related_concept(related_concept, $PATH, Stratum_feature_template_component_armx);
stratum_feature_conductive_join <=
product_definition_relationship
product_definition_relationship.related_product_definition ->
product_definition =>
component_definition =>
assembly_component =>
laminate_component =>
stratum_feature_template_component

end_attribute_mapping;

attribute_mapping relating_concept(relating_concept, $PATH, Stratum_feature_template_component_armx);
stratum_feature_conductive_join <=
product_definition_relationship
product_definition_relationship.relating_product_definition ->
product_definition =>
component_definition =>
assembly_component =>
laminate_component =>
stratum_feature_template_component

end_attribute_mapping;

attribute_mapping resulting_shape(resulting_shape, $PATH, Shape_representation);
stratum_feature_conductive_join <=
product_definition_relationship
characterized_product_definition = product_definition_relationship
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition <-
property_definition.definition
property_definition <-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation ->
representation

end_attribute_mapping;

end_entity_mapping;
(*end_schema_mapping;*)
