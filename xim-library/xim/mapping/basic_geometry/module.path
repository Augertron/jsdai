(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping basic_geometry(Basic_geometry_arm, Basic_geometry_mim);*)


entity_mapping Curve(Curve, curve);

mapping_constraints;

						curve <= geometric_representation_item
					
end_mapping_constraints;

end_entity_mapping;

entity_mapping Line(Line, line);

mapping_constraints;

		line <= curve
		
end_mapping_constraints;

end_entity_mapping;

entity_mapping Plane(Plane, plane);

end_entity_mapping;

entity_mapping Point_on_curve(Point_on_curve, point_on_curve
		);

attribute_mapping supporting_curve(supporting_curve, $PATH, Curve);

		point_on_curve.basis_curve -> curve
end_attribute_mapping;

end_entity_mapping;

entity_mapping Point_on_surface(Point_on_surface, ((point_on_surface))((degenerate_pcurve)));

attribute_mapping supporting_surface(supporting_surface, ($PATH)($PATH), Surface);
(
		point_on_surface.basis_surface -> surface
		)(
		degenerate_pcurve.basis_surface -> surface)
end_attribute_mapping;

end_entity_mapping;

entity_mapping Surface(Surface, (surface)(oriented_surface));

mapping_constraints;
(
		surface <= geometric_representation_item
		)(
		oriented_surface <= surface
		surface <= geometric_representation_item
		)
end_mapping_constraints;

end_entity_mapping;
(*end_schema_mapping;*)
