(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping alias_identification(Alias_identification_arm, Alias_identification_mim);*)
(*
uof_mapping Alias_Identification(Alias_Identification);

entity_mapping Alias_identification(Alias_identification, applied_identification_assignment);

mapping_constraints;
applied_identification_assignment <=
identification_assignment
identification_assignment.role ->
{identification_role
identification_role.name='alias'}
			
end_mapping_constraints;

attribute_mapping items(items, $PATH, alias_identification_item);
applied_identification_assignment.items[i] ->
identification_item
identification_item *> ai_identification_item
ai_identification_item = aliasable_item

end_attribute_mapping;

end_entity_mapping;
end_uof_mapping;
*)

entity_mapping Applied_identification_assignment__alias(Applied_identification_assignment__alias, identification_assignment);

mapping_constraints;
			identification_assignment
			identification_assignment.role -> identification_role
			identification_role.name
			{identification_role.name = 'alias'}
			
end_mapping_constraints;

end_entity_mapping;

entity_mapping Applied_identification_assignment__uri(Applied_identification_assignment__uri, identification_assignment);

mapping_constraints;
			identification_assignment
			identification_assignment.role -> identification_role
			identification_role.name
			{identification_role.name = 'uri'}
			
end_mapping_constraints;

end_entity_mapping;
(*end_schema_mapping;*)
