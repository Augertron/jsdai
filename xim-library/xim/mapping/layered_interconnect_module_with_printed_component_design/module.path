(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping layered_interconnect_module_with_printed_component_design(Layered_interconnect_module_with_printed_component_design_arm, Layered_interconnect_module_with_printed_component_design_mim);*)

entity_mapping Basic_multi_stratum_printed_component_armx(Basic_multi_stratum_printed_component_armx, basic_multi_stratum_printed_component);

mapping_constraints;
basic_multi_stratum_printed_component <=
printed_component <=
assembly_component <=
component_definition <= 
product_definition 

end_mapping_constraints;

attribute_mapping material_stack(material_stack, $PATH, Stratum_feature_based_derived_pattern_armx);
basic_multi_stratum_printed_component <=
printed_component <=
assembly_component <=					
product_definition_shape <=
property_definition <-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'material stack'}
property_definition_relationship.relating_property_definition ->
property_definition.definition ->
characterized_definition
characterized_definition = characterized_object
characterized_object =>
stratum_feature_based_derived_pattern

end_attribute_mapping;

attribute_mapping derived_from(derived_from, $PATH, Basic_multi_stratum_printed_part_template_armx);
basic_multi_stratum_printed_component <=
printed_component <=
assembly_component <=					
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_template =>
basic_multi_stratum_printed_part_template

end_attribute_mapping;

end_entity_mapping;

entity_mapping Multi_stratum_printed_component_armx(Multi_stratum_printed_component_armx, multi_stratum_printed_component);

mapping_constraints;
multi_stratum_printed_component <=
printed_component <=
assembly_component <=
component_definition <= 
product_definition 

end_mapping_constraints;

attribute_mapping derived_from(derived_from, $PATH, Multi_stratum_printed_part_template_armx);
multi_stratum_printed_component <=
printed_component <=
assembly_component <=					
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
geometric_template =>
structured_template =>
multi_stratum_structured_template =>
multi_stratum_printed_part_template

end_attribute_mapping;

end_entity_mapping;

entity_mapping External_source_identification(External_source_identification, applied_external_identification_assignment)
extended;

attribute_mapping item(item, , Printed_component_armx);

				external_identification_item *> limwpcd_external_identification_item
				limwpcd_external_identification_item = printed_component
			
end_attribute_mapping;

end_entity_mapping;

entity_mapping Printed_component_armx(Printed_component_armx, printed_component );

mapping_constraints;
printed_component <=
assembly_component <=
component_definition <= 
product_definition 

end_mapping_constraints;
(* Removed attribute
attribute_mapping footprint_implementation(footprint_implementation, $PATH, Footprint_occurrence_armx);
printed_component <=
assembly_component <=					
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'footprint implementation'}
product_definition_relationship.relating_product_definition ->
product_definition =>
component_definition =>
assembly_component =>
assembly_group_component =>
structured_layout_component =>
footprint_occurrence

end_attribute_mapping;
*)
(* Removed attribute
attribute_mapping required_material_stack(required_material_stack, $PATH, Stratum_based_pattern_armx);
printed_component <=
assembly_component <=					
product_definition_shape <-
shape_aspect.of_shape
shape_aspect
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'required material stack'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
stratum_based_pattern

end_attribute_mapping;

attribute_mapping printed_component_stack(printed_component_stack, $PATH, Printed_component_link_armx);
printed_component <=
assembly_component <=
component_definition <=					
product_definition <-
product_definition_relationship.relating_product_definition
{product_definition_relationship
product_definition_relationship.name = 'printed component stack'}
product_definition_relationship.related_product_definition ->
product_definition =>
printed_component_link

end_attribute_mapping;
*)
attribute_mapping derived_from(derived_from, $PATH, Printed_part_template_armx);
printed_component <=
assembly_component <=					
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_template

end_attribute_mapping;
(* Removed option
attribute_mapping derived_from(derived_from, $PATH, Printed_part_cross_section_template_armx);
printed_component <=
				assembly_component <=					
				component_definition <=
				product_definition <-
				product_definition_relationship.related_product_definition
				product_definition_relationship
				{product_definition_relationship
				product_definition_relationship.name = 'definition usage'}
				product_definition_relationship.relating_product_definition ->
				product_definition =>
				part_template_definition =>
				printed_part_cross_section_template
				
end_attribute_mapping;

attribute_mapping stratum_feature_implementation(stratum_feature_implementation, $PATH, Stratum_feature_armx);
printed_component <=
assembly_component <=					
product_definition_shape <-
shape_aspect.of_shape
shape_aspect
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature implementation'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
stratum_feature

end_attribute_mapping;
*)
end_entity_mapping;

entity_mapping Printed_component_join_terminal(Printed_component_join_terminal, laminate_component_join_terminal);

mapping_constraints;
laminate_component_join_terminal <=
laminate_component_feature <=				
component_feature <=				
shape_aspect
{shape_aspect
[shape_aspect.description = 'printed component join terminal']
[shape_aspect.product_definitional = .TRUE.]}

end_mapping_constraints;

attribute_mapping associated_component(associated_component, $PATH, Printed_component_armx);
component_terminal <=
component_feature <=					
shape_aspect
shape_aspect.of_shape ->
product_definition_shape =>
assembly_component =>
printed_component

end_attribute_mapping;

attribute_mapping definition(definition, $PATH, Printed_part_template_join_terminal);
component_terminal <=
component_feature <=					
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
{shape_aspect
shape_aspect.description = 'join terminal'}
shape_aspect =>
printed_part_template_terminal

end_attribute_mapping;

attribute_mapping stratum_concept_implementation(stratum_concept_implementation, $PATH, Stratum_feature_template_component_armx);
component_terminal <=
component_feature <=
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementation'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect
shape_aspect.of_shape ->
product_definition_shape =>
assembly_component =>
laminate_component =>
stratum_feature_template_component


end_attribute_mapping;

end_entity_mapping;

entity_mapping Printed_connector_component_armx(Printed_connector_component_armx, printed_connector_component);

mapping_constraints;
printed_connector_component <=
printed_component <=
assembly_component <=
component_definition <=
product_definition

end_mapping_constraints;

attribute_mapping derived_from(derived_from, $PATH, Printed_connector_template_armx);
printed_connector_component <=
printed_component <=
assembly_component <=
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_template =>
printed_connector_template


end_attribute_mapping;

end_entity_mapping;

entity_mapping Printed_connector_component_interface_terminal(Printed_connector_component_interface_terminal, laminate_component_interface_terminal);

mapping_constraints;
laminate_component_interface_terminal <=
laminate_component_feature <=
component_feature <=	
shape_aspect
{shape_aspect
[shape_aspect.description = 'printed connector component interface terminal']
[shape_aspect.product_definitional = .TRUE.]}

end_mapping_constraints;

attribute_mapping associated_component(associated_component, $PATH, Printed_connector_component_armx);
laminate_component_interface_terminal <=
laminate_component_feature <=
component_feature <=	
shape_aspect
shape_aspect.of_shape ->
product_definition_shape =>
printed_component =>
printed_connector_component

end_attribute_mapping;

attribute_mapping definition(definition, $PATH, Printed_part_template_interface_terminal);
laminate_component_interface_terminal <=
laminate_component_feature <=
component_feature <=	
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect ->
{shape_aspect
shape_aspect.description = 'interface terminal'}
shape_aspect =>
printed_part_template_terminal

end_attribute_mapping;

attribute_mapping stratum_concept_implementation(stratum_concept_implementation, $PATH, Stratum_feature_template_component_armx);
laminate_component_interface_terminal <=
laminate_component_feature <=
component_feature <=	
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementation'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect.of_shape ->
product_definition_shape =>
assembly_component =>
laminate_component =>
stratum_feature_template_component

end_attribute_mapping;

end_entity_mapping;

entity_mapping Routed_transmission_line_armx(Routed_transmission_line_armx, routed_transmission_line);

mapping_constraints;
routed_transmission_line <=
assembly_component <=
component_definition <=
product_definition

end_mapping_constraints;

attribute_mapping curve_parameters(curve_parameters, $PATH, Curve_style_parameters);
routed_transmission_line <=
assembly_component <=
component_definition <=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition <-
property_definition.definition
{property_definition
property_definition.name = 'curve parameters'}
property_definition <-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation ->
representation =>
curve_style_parameters_representation
end_attribute_mapping;

attribute_mapping routed_centreline_shape(routed_centreline_shape, $PATH, Curve);
routed_transmission_line <=
assembly_component <=
component_definition <=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition <-
property_definition.definition
{property_definition
property_definition.name = 'routed centreline shape'}
property_definition <-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation ->
representation.items[i] ->
representation_item =>
geometric_representation_item =>
curve

end_attribute_mapping;

attribute_mapping component_extent(component_extent, $PATH, Inter_stratum_extent);
routed_transmission_line <=
assembly_component <=
product_definition_shape <=
property_definition <-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'component extent'}
property_definition_relationship.relating_property_definition ->
property_definition
property_definition.definition ->
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'inter stratum extent'}

end_attribute_mapping;

attribute_mapping derived_from(derived_from, $PATH, Printed_part_cross_section_template_armx);
routed_transmission_line <=
assembly_component <=
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_cross_section_template

end_attribute_mapping;

end_entity_mapping;

entity_mapping Single_stratum_printed_component_armx(Single_stratum_printed_component_armx, single_stratum_printed_component);

mapping_constraints;
single_stratum_printed_component <=
printed_component <=
assembly_component <=
component_definition <= 
product_definition 

end_mapping_constraints;

attribute_mapping derived_from(derived_from, $PATH, Single_stratum_printed_part_template_armx);
single_stratum_printed_component <=
printed_component <=
assembly_component <=					
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
geometric_template =>
structured_template =>
single_stratum_structured_template =>
single_stratum_printed_part_template

end_attribute_mapping;

attribute_mapping stratum_feature_implementation(stratum_feature_implementation, $PATH, Stratum_feature_armx);
single_stratum_printed_component <=
printed_component <=
assembly_component <=					
product_definition_shape <-
shape_aspect.of_shape
shape_aspect
shape_aspect <-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature implementation'}
shape_aspect_relationship.relating_shape_aspect ->
shape_aspect =>
stratum_feature

end_attribute_mapping;

end_entity_mapping;

entity_mapping Tiebar_printed_component_armx(Tiebar_printed_component_armx, tiebar_printed_component);

mapping_constraints;
tiebar_printed_component <=
structured_layout_component <=
assembly_group_component <=
assembly_component <=
component_definition <=
product_definition

end_mapping_constraints;

attribute_mapping derived_from(derived_from, $PATH, Printed_tiebar_template_armx);
tiebar_printed_component <=
structured_layout_component <=
assembly_group_component <=
assembly_component <=
component_definition <=
product_definition <-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition ->
product_definition =>
part_template_definition =>
printed_part_template =>
structured_printed_part_template =>
printed_tiebar_template

end_attribute_mapping;

end_entity_mapping;
(*end_schema_mapping;*)
