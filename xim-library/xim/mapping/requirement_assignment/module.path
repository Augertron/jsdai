(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping requirement_assignment(Requirement_assignment_arm, Requirement_assignment_mim);*)

uof_mapping Requirement_Assignment(Requirement_Assignment);

entity_mapping requirement_assignment_armx(requirement_assignment_armx, requirement_assignment);

mapping_constraints;

				requirement_assignment <=
				[group]
				[characterized_object]
			
end_mapping_constraints;

attribute_mapping id_x(id_x, group.id);

					requirement_assignment <=
					group
					group.id
				
end_attribute_mapping;

attribute_mapping description(description, group.description);

					requirement_assignment <=
					group
					group.description
				
end_attribute_mapping;

attribute_mapping assigned_requirement(assigned_requirement, $PATH, Requirement_view_definition);

					requirement_assignment <-
					assigned_requirement.assigned_group
					assigned_requirement
					assigned_requirement.items ->
					product_definition
				
end_attribute_mapping;

attribute_mapping assigned_to(assigned_to, $PATH, requirement_assignment_item);

					requirement_assignment <-
					requirement_assigned_object.assigned_group
					requirement_assigned_object
					requirement_assigned_object.items ->
					requirement_assigned_item
				
end_attribute_mapping;

end_entity_mapping;
end_uof_mapping;


entity_mapping requirement_source_armx(requirement_source_armx, requirement_source);

mapping_constraints;

				requirement_source <=
				group
			
end_mapping_constraints;

attribute_mapping id(id, group.id);

					requirement_source <=
					group
					group.id
				
end_attribute_mapping;

attribute_mapping description(description, group.description);

					requirement_source <=
					group
					group.description
				
end_attribute_mapping;

attribute_mapping source(source, $PATH, requirement_source_item);

					requirement_source <-
					source_for_requirement.assigned_group
					source_for_requirement
					source_for_requirement.items ->
					requirement_source_item
				
end_attribute_mapping;

attribute_mapping sourced_requirement(sourced_requirement, $PATH, Requirement_view_definition);

					requirement_source <-
					sourced_requirement.assigned_group
					sourced_requirement
					sourced_requirement.items ->
					product_definition
				
end_attribute_mapping;

end_entity_mapping;
(*end_schema_mapping;*)
