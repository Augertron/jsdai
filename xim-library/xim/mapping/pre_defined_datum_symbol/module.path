(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping pre_defined_datum_symbol(Pre_defined_datum_symbol_arm, Pre_defined_datum_symbol_mim);*)


entity_mapping pre_defined_parallel_datum_axis_symbol_3d_2d_relationship_armx(pre_defined_parallel_datum_axis_symbol_3d_2d_relationship_armx, pre_defined_parallel_datum_axis_symbol_3d_2d_relationship);

mapping_constraints;
{pre_defined_parallel_datum_axis_symbol_3d_2d_relationship <=
shape_definition_3d_intersection}
			
end_mapping_constraints;

attribute_mapping surface_intersection_result(surface_intersection_result, $PATH, Pre_defined_parallel_datum_axis_2d_symbol);

					pre_defined_parallel_datum_axis_symbol_3d_2d_relationship <=
					shape_definition_3d_intersection <=
					shape_representation_relationship <=
					representation_relationship
					representation_relationship.rep_1 ->
					{representation
					representation.description = 'pre defined parallel datum axis 2d symbol'}
					representation =>
					shape_representation
					
end_attribute_mapping;

attribute_mapping projected_volume(projected_volume, $PATH, Pre_defined_datum_axis_3d_symbol);
pre_defined_parallel_datum_axis_symbol_3d_2d_relationship <=
shape_definition_3d_intersection <=
shape_representation_relationship <=
representation_relationship
representation_relationship.rep_2 ->
{representation
representation.description = 'pre defined datum axis 3d symbol'}
representation
{representation.context_of_items ->
representation_context =>
geometric_representation_context
geometric_representation_context.coordinate_space_dimension = 3}
representation =>
shape_representation

end_attribute_mapping;

end_entity_mapping;

entity_mapping pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship_armx(pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship_armx, pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship);

mapping_constraints;
{pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship <=
shape_definition_3d_intersection}
			
end_mapping_constraints;

attribute_mapping surface_intersection_result(surface_intersection_result, $PATH, Pre_defined_perpendicular_datum_axis_2d_symbol);

					pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship <=
					shape_definition_3d_intersection <=
					shape_representation_relationship <=
					representation_relationship
					representation_relationship.rep_1 ->
					{representation
					representation.description = 'pre defined perpendicular datum axis 2d symbol'}
					representation =>
					shape_representation
					
end_attribute_mapping;

attribute_mapping projected_volume(projected_volume, $PATH, Pre_defined_datum_axis_3d_symbol);
pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship <=
shape_definition_3d_intersection <=
shape_representation_relationship <=
representation_relationship
representation_relationship.rep_2 ->
{representation
representation.description = 'pre defined datum axis 3d symbol'}
{representation
representation.context_of_items ->
representation_context =>
geometric_representation_context
geometric_representation_context.coordinate_space_dimension = 3}
representation =>
shape_representation

end_attribute_mapping;

end_entity_mapping;

entity_mapping pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship_armx(pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship_armx, pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship);

mapping_constraints;
{pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship <=
shape_definition_3d_intersection}
			
end_mapping_constraints;

attribute_mapping surface_intersection_result(surface_intersection_result, $PATH, Pre_defined_perpendicular_datum_plane_2d_symbol);
			
					pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship <=
					shape_definition_3d_intersection <=
					shape_representation_relationship <=
					representation_relationship
					representation_relationship.rep_1 ->
					{representation
					representation.description = 'pre defined perpendicular datum plane 2d symbol'}
					representation =>
					shape_representation
				
end_attribute_mapping;

attribute_mapping projected_volume(projected_volume, $PATH, Pre_defined_datum_plane_3d_symbol);
pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship <=
shape_definition_3d_intersection <=
shape_representation_relationship <=
representation_relationship
representation_relationship.rep_2 ->
{representation
representation.description = 'pre defined datum plane 3d symbol'}
{representation
representation.context_of_items ->
representation_context =>
geometric_representation_context
geometric_representation_context.coordinate_space_dimension = 3}
representation =>
shape_representation

end_attribute_mapping;

end_entity_mapping;
(*end_schema_mapping;*)
