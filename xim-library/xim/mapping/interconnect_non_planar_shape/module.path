(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping interconnect_non_planar_shape(Interconnect_non_planar_shape_arm, Interconnect_non_planar_shape_mim);*)

entity_mapping Component_part_2d_non_planar_geometric_representation_relationship_armx(Component_part_2d_non_planar_geometric_representation_relationship_armx, component_part_2d_non_planar_geometric_representation_relationship);

mapping_constraints;
{component_part_2d_non_planar_geometric_representation_relationship <=
shape_representation_relationship <=
representation_relationship
{representation_relationship
representation_relationship.name = 'component part non planar shape'}}

end_mapping_constraints;

attribute_mapping component_shape(component_shape, $PATH, Assembly_component_non_planar_shape_model);
component_part_2d_non_planar_geometric_representation_relationship <=
shape_representation_relationship <=
representation_relationship
representation_relationship.rep_2 ->
{representation
[representation.name = 'non planar shape']
[representation <-
property_definition_representation.used_representation
property_definition_representation
{property_definition_representation =>
shape_definition_representation}
property_definition_representation.definition ->
property_definition =>
product_definition_shape =>
assembly_component]}
representation =>
shape_representation

end_attribute_mapping;

attribute_mapping part_shape(part_shape, $PATH, Part_template_planar_shape_model);
component_part_2d_non_planar_geometric_representation_relationship <=
shape_representation_relationship <=
representation_relationship
representation_relationship.rep_1 ->
{[representation
representation.name = 'ppsm']
[representation <-
property_definition_representation.used_representation
property_definition_representation
{property_definition_representation =>
shape_definition_representation}
property_definition_representation.definition ->
property_definition =>
product_definition_shape =>
part_template_definition]}
representation =>
shape_representation

end_attribute_mapping;

end_entity_mapping;

(*end_schema_mapping;*)
