(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

(*schema_mapping location_assignment(Location_assignment_arm, Location_assignment_mim);*)

uof_mapping Location_Assignment(Location_Assignment);

entity_mapping Location_assignment_armx(Location_assignment_armx, applied_location_assignment);

mapping_constraints;

				applied_location_assignment <=
				location_assignment
			
end_mapping_constraints;

attribute_mapping description(description, location_assignment.description);

				       applied_location_assignment <=
				       location_assignment 
				       location_assignment.description
			     
end_attribute_mapping;

attribute_mapping role(role, location_role.name);

                                  applied_location_assignment <=
                                  location_assignment 
                                  location_assignment.role -> location_role
                                  location_role.name
			     
end_attribute_mapping;

attribute_mapping entity_for_location(entity_for_location, $PATH, location_assignment_select);

					applied_location_assignment
					applied_location_assignment.items[1] ->
					location_item	
				
end_attribute_mapping;

attribute_mapping location_for_assignment(location_for_assignment, $PATH, Location);

				       applied_location_assignment <=
				       location_assignment 
				       location_assignment.assigned_location ->
					location
				
end_attribute_mapping;

end_entity_mapping;
end_uof_mapping;

(*end_schema_mapping;*)
