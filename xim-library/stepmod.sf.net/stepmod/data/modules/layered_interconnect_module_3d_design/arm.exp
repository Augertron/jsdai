(*
   $Id$
   ISO TC184/SC4/WG12 N6432 - ISO/TS 10303-1696 Layered interconnect module 3d design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5698
*)

SCHEMA Layered_interconnect_module_3d_design_arm;

	USE FROM Physical_unit_3d_design_view_arm;	-- ISO/TS 10303-1725
	USE FROM Stratum_non_planar_shape_arm;	-- ISO/TS 10303-1748

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE lim3dd_sf_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON limd_sf_shape_select WITH 
    (Solid_model);
  END_TYPE; 

  TYPE lim3dd_stratum_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON limd_stratum_shape_model_select WITH 
    (Stratum_3d_shape_model);
  END_TYPE; 

  ENTITY Located_3d_inter_stratum_extent
    SUBTYPE OF (Inter_stratum_extent);
      location : Cartesian_point;
     direction : Direction;
  END_ENTITY;

  ENTITY Stratum_3d_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_component : Stratum;
    WHERE
      WR1 : NOT ('LAYERED_INTERCONNECT_MODULE_3D_DESIGN_ARM.PLANAR_SHAPE_MODEL' IN TYPEOF(SELF));
      WR2 : NOT EXISTS(SELF\Representation.name);
      WR3 : NOT EXISTS(SELF\Representation.description);
      WR4 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;            
  END_ENTITY;

  ENTITY Stratum_interconnect_module_3d_position;
      stratum_component         : Interconnect_module_stratum_assembly_relationship;
      stratum_shape             : Stratum_3d_shape_model;
      interconnect_module_shape : Physical_unit_3d_shape_model;
      transformation            : Axis_placement_3d;
   UNIQUE
   	UR1 : stratum_component;
  END_ENTITY;

RULE no_component_assembly_3d_location_for_area_component FOR (Area_component);
WHERE
  WR1:  SIZEOF(QUERY( ac <* Area_component | NOT(
       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR
       (no_3d_location_for_component(ac))) 
  )) = 0;
END_RULE;  

RULE component_in_assembly_3d_context FOR (Area_component);
WHERE
  WR1:  SIZEOF(QUERY( ac <* Area_component | NOT(
       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR 
        (in_3d_assembly_context(ac)))
          )) = 0;
END_RULE;  

FUNCTION in_3d_assembly_context(comp : Assembly_component) : LOGICAL;
  LOCAL
    shapes : SET OF Assembly_component_3d_shape_model := [];
    shapes_in_context : SET OF Physical_unit_3d_shape_model := [];
    assemblies : SET OF Product_view_definition := [];
    i, j : INTEGER := 0;
    in_context : LOGICAL := TRUE;
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    assemblies := assemblies + comp.occurrence_contexts[i].relating_view;
  END_REPEAT;

  shapes := bag_to_set(USEDIN(comp,'PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT'));
  REPEAT i := 1 TO SIZEOF(shapes);
    shapes_in_context := bag_to_set(USEDIN(shapes[i]\Geometric_model.context_of_items,'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL.CONTEXT_OF_ITEMS'));
    in_context := FALSE;
    j := 1;
    REPEAT WHILE ((j <= SIZEOF(shapes_in_context)) AND (NOT (in_context)));
      in_context := (shapes_in_context[j].shape_characterized_definition IN assemblies);
      j := j + 1;
    END_REPEAT;
    
    IF NOT (in_context) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  
  RETURN (SIZEOF(shapes) > 0);
END_FUNCTION;

FUNCTION no_3d_location_for_component(comp : Assembly_component) : BOOLEAN;
  LOCAL
    i, j : INTEGER := 0;
    cis : SET OF Contextual_item_shape := [];
    loc : SET OF Component_3d_location := [];
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    cis := bag_to_set(USEDIN(comp.occurrence_contexts[i],'SHAPE_PROPERTY_ASSIGNMENT_ARM.CONTEXTUAL_ITEM_SHAPE.DESCRIBED_ELEMENT'));
    REPEAT j := 1 TO SIZEOF(cis);
      loc := bag_to_set(USEDIN(cis[j],'CONTEXTUAL_SHAPE_POSITIONING_ARM.CONTEXTUAL_SHAPE_REPRESENTATION.CONTEXTUAL_SHAPE'));
      IF (SIZEOF(loc) > 0) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_REPEAT;

  RETURN (TRUE);
END_FUNCTION;

END_SCHEMA;

