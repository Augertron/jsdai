(*
 * $Id$
 *
 * JSDAI(TM), a way to implement STEP, ISO 10303
 * Copyright (C) 1997-2008, LKSoftWare GmbH, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License
 * version 3 as published by the Free Software Foundation (AGPL v3).
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JSDAI is a registered trademark of LKSoftWare GmbH, Germany
 * This software is also available under commercial licenses.
 * See also http://www.jsdai.net/
 *)

SCHEMA express_g_schema;

  USE FROM extended_dictionary_schema;

  ENTITY graphics_diagram;
    dic_schema : schema_definition;
    comment: OPTIONAL STRING;
    default_size: OPTIONAL size;
  END_ENTITY;

  ENTITY size;
    width : INTEGER;
    height : INTEGER;
  END_ENTITY;
  
  ENTITY location;
    x : INTEGER;
    y : INTEGER;
  END_ENTITY;

  ENTITY page;
    diagram : graphics_diagram;
    comment : OPTIONAL STRING;
    page_number : INTEGER;
    page_size   : OPTIONAL size;
  UNIQUE
    ur1 : diagram, page_number;
  END_ENTITY;

  ENTITY object_placement
    ABSTRACT;
    object_location : OPTIONAL location;
    object_size: OPTIONAL size;
    presented_on: OPTIONAL page;
    visible: OPTIONAL BOOLEAN;
    representation_color: OPTIONAL color;
  END_ENTITY;
  
  ENTITY color;
    name: OPTIONAL STRING;
    red : INTEGER;
    green : INTEGER;
    blue : INTEGER;
  END_ENTITY;
     
  ENTITY page_reference_to -- not used
    SUBTYPE OF (object_placement);
    reference_to : page_reference_from;
    parent : data_type_extension;
  END_ENTITY;

  ENTITY page_reference_from -- not used
    SUBTYPE OF (object_placement);
    reference_from : LIST [1:?] OF page_reference_to;
    extended_relation : page_relation;
    child : data_type_extension;
  END_ENTITY;

  TYPE data_type_extension = SELECT
	(data_type, declaration, schema_definition, sub_supertype_constraint, page);
  END_TYPE;

  ENTITY data_type_placement 
    SUBTYPE OF (object_placement);
    represented_object: data_type_extension;
  END_ENTITY;

  ENTITY relation_placement
    ABSTRACT SUBTYPE OF (object_placement);
    hint1: OPTIONAL location; -- placement hint point
    hint2: OPTIONAL location; -- text location
  INVERSE
    bundle : SET [0:1] OF relation_bundle FOR member;
  END_ENTITY;
  
  ENTITY relation_bundle;
    member : SET [1:?] OF relation_placement;
  END_ENTITY;

  ENTITY schema_relation_placement
    SUBTYPE OF (relation_placement);
    parent : schema_definition;
    child : schema_definition;
    relation_type : INTEGER;
  END_ENTITY;

  ENTITY attribute_placement
    SUBTYPE OF (relation_placement);
    represented_object: attribute;
  END_ENTITY;

  ENTITY defined_relation_placement
    SUBTYPE OF (relation_placement);
    parent: defined_type;
  END_ENTITY;

  ENTITY select_relation_placement
    SUBTYPE OF (relation_placement);
    parent: select_type;
  END_ENTITY;

  ENTITY supertype_placement
    SUBTYPE OF (relation_placement);
    parent: data_type;
    child: data_type;
  END_ENTITY;
  
  ENTITY constraint_relation_placement
    SUBTYPE OF (relation_placement);
    parent: sub_supertype_constraint;
    child: data_type;
  END_ENTITY;
  
  ENTITY page_relation
    SUBTYPE OF (relation_placement);
    parent : object_placement;
    child : data_type_extension;
  END_ENTITY;

-- "Font_Entity" - for default Entity font
-- "Font_Attribute" - for default Attribute font
-- "Editing_mode" - for editing mode
-- "Default_page_mask" - for page frame mask
-- "Page_mask_X" - where X = integer page number, for specific page mask
-- "Pages_of_same_size" - boolean property, if exists defines that all pages are of the same size
  ENTITY property;
    name : STRING;
    data : OPTIONAL STRING;
  END_ENTITY;
  
  ENTITY page_reference_bundle
    SUBTYPE OF (object_placement);
    referenced : data_type_extension;
    relation : SET [1:?] OF relation_placement;
    link : OPTIONAL page_reference_bundle;  -- may be needed if will want to replace page_references (from,to) with this one
  END_ENTITY;

END_SCHEMA;
