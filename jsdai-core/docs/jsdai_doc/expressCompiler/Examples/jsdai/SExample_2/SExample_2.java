/* Generated by JSDAI Express Compiler, version 3.5, build 225, 2003-04-23 */

// Special class for schema definition

package jsdai.SExample_2;
import jsdai.lang.*;

import java.lang.reflect.*;

public class SExample_2 extends SSuper {

	public static final String time_stamp = "2003-06-06 T17:46:50";
	public static final String version = "3.5.225, 2003-04-23";
	public static final SSuper ss;

	static{
		ss = SSuper.initSuper(new SExample_2());
	}
	protected CEntity makeInstanceX(Class c) throws java.lang.InstantiationException, java.lang.IllegalAccessException {
			return (CEntity)c.newInstance();
	}

	protected void setDataField(Class cl, String name, Object value) throws NoSuchFieldException, IllegalAccessException {
		Field fd = cl.getDeclaredField(name);
		fd.set(null, value);
	}

	protected Object getObject(Object obj, Field field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		return field.get(obj);
	}
	protected int getInt(Object obj, Field field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		return field.getInt(obj);
	}
	protected double getDouble(Object obj, Field field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		return field.getDouble(obj);
	}

	protected void setObject(Object obj, Field field, Object value) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		field.set(obj, value);
	}
	protected void setInt(Object obj, Field field, int value) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		field.setInt(obj, value);
	}
	protected void setDouble(Object obj, Field field, double value) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		field.setDouble(obj, value);
	}

}
