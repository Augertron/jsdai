ISO-10303-21;
HEADER;
/* JSDAI MULTIPLE  Version 3.5.3 (Build 270, 2003-05-28T03:02:03) */
FILE_DESCRIPTION(('DEFAULT DESCRIPTION'),'3;1');
FILE_NAME('ExpressCompilerRepo','2003-05-28T03:03:10',('DEFAULT AUTHOR'),('DEFAULT ORGANIZATION'),
     'NO VERSION','CREATED BY A PROGRAM','MISSING');
FILE_SCHEMA(('EXTENDED_DICTIONARY_SCHEMA'));
FILE_POPULATION(
     /* 'extended_dictionary_schema', schema_instance.name */
     'SDAI_DICTIONARY_SCHEMA',  /* schema_instance.native_schema */
     'SECTION_BOUNDARY',  /* determination_method = SDAI schema_instance compatibility */
     ('EXTENDED_DICTIONARY_SCHEMA_DICTIONARY_DATA')  /* schema_instance.associated_models */
     /* '2003-05-28T03:03:17', schema_instance.change_date */
     /* '2003-05-28T03:03:17', schema_instance.validation_date */
     /* .U., schema_instance.validation_result */
     /* 0, schema_instance.validation_level */
     /* (), schema_instance.description */
     /* (), schema_instance.author */
     /* (), schema_instance.organization */
     /* (), schema_instance.context_identifiers */);
FILE_POPULATION(
     /* 'mapping_schema', schema_instance.name */
     'SDAI_DICTIONARY_SCHEMA',  /* schema_instance.native_schema */
     'SECTION_BOUNDARY',  /* determination_method = SDAI schema_instance compatibility */
     ('EXTENDED_DICTIONARY_SCHEMA_DICTIONARY_DATA','MAPPING_SCHEMA_DICTIONARY_DATA')  /* schema_instance.associated_models */
     /* '2003-05-28T03:03:17', schema_instance.change_date */
     /* '2003-05-28T03:03:17', schema_instance.validation_date */
     /* .U., schema_instance.validation_result */
     /* 0, schema_instance.validation_level */
     /* (), schema_instance.description */
     /* (), schema_instance.author */
     /* (), schema_instance.organization */
     /* (), schema_instance.context_identifiers */);
FILE_POPULATION(
     /* 'sdai_dictionary_schema', schema_instance.name */
     'SDAI_DICTIONARY_SCHEMA',  /* schema_instance.native_schema */
     'SECTION_BOUNDARY',  /* determination_method = SDAI schema_instance compatibility */
     ('SDAI_DICTIONARY_SCHEMA_DICTIONARY_DATA')  /* schema_instance.associated_models */
     /* '2003-05-28T03:03:17', schema_instance.change_date */
     /* '2003-05-28T03:03:17', schema_instance.validation_date */
     /* .U., schema_instance.validation_result */
     /* 0, schema_instance.validation_level */
     /* (), schema_instance.description */
     /* (), schema_instance.author */
     /* (), schema_instance.organization */
     /* (), schema_instance.context_identifiers */);
FILE_POPULATION(
     /* 'sdai_mapping_schema', schema_instance.name */
     'SDAI_DICTIONARY_SCHEMA',  /* schema_instance.native_schema */
     'SECTION_BOUNDARY',  /* determination_method = SDAI schema_instance compatibility */
     ('SDAI_DICTIONARY_SCHEMA_DICTIONARY_DATA','SDAI_MAPPING_SCHEMA_DICTIONARY_DATA')  /* schema_instance.associated_models */
     /* '2003-05-28T03:03:17', schema_instance.change_date */
     /* '2003-05-28T03:03:17', schema_instance.validation_date */
     /* .U., schema_instance.validation_result */
     /* 0, schema_instance.validation_level */
     /* (), schema_instance.description */
     /* (), schema_instance.author */
     /* (), schema_instance.organization */
     /* (), schema_instance.context_identifiers */);
ENDSEC;
DATA('EXAMPLE_1_DICTIONARY_DATA',('EXTENDED_DICTIONARY_SCHEMA'));
#2130=SCHEMA_DEFINITION('EXAMPLE_1',$);
#2131=ENTITY_DEFINITION('first_entity','FENT',(),.F.,.T.,$,());
#2132=(DATA_TYPE_DECLARATION()DECLARATION(#2130,#2130,#2131)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2133=EXPLICIT_ATTRIBUTE('attr_1',#2131,#2131,0,#2,$,.F.);
ENDSEC;
DATA('EXAMPLE_2_DICTIONARY_DATA',('EXTENDED_DICTIONARY_SCHEMA'));
#2134=SCHEMA_DEFINITION('EXAMPLE_2',$);
#2135=ENTITY_DEFINITION('second_entity','SENT',(#2131),.F.,.T.,$,(#2131));
#2136=(DATA_TYPE_DECLARATION()DECLARATION(#2134,#2134,#2135)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2137=EXPLICIT_ATTRIBUTE('attr_2',#2135,#2135,0,#7,$,.F.);
#2138=ENTITY_DEFINITION('third_entity','TENT',(#2131),.F.,.T.,$,(#2131));
#2139=(DATA_TYPE_DECLARATION()DECLARATION(#2134,#2134,#2138)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2140=EXPLICIT_ATTRIBUTE('attr_c',#2138,#2138,0,#2135,$,.F.);
#2141=USE_FROM_SPECIFICATION(#2130,#2134,$);
#2142=(DATA_TYPE_DECLARATION()DECLARATION(#2134,#2134,#2131)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)USED_DECLARATION());
#2143=ENTITY_DEFINITION('second_entity+third_entity',$,(#2135,#2138),.T.,.T.,.T.,
     (#2135,#2138));
#2144=(DATA_TYPE_DECLARATION()DECLARATION(#2134,#2134,#2143)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
ENDSEC;
DATA('EXTENDED_DICTIONARY_SCHEMA_DICTIONARY_DATA',('EXTENDED_DICTIONARY_SCHEMA'));
#1073=SCHEMA_DEFINITION('EXTENDED_DICTIONARY_SCHEMA',$);
#1074=DEFINED_TYPE('base_type',$,#1827);
#1075=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1074)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1076=DEFINED_TYPE('constructed_type',$,#1828);
#1077=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1076)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1078=DEFINED_TYPE('declaration_type',$,#1829);
#1079=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1078)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1080=DEFINED_TYPE('documentation_object',$,#1830);
#1081=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1080)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1082=DEFINED_TYPE('entity_or_subtype_expression',$,#1831);
#1083=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1082)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1084=DEFINED_TYPE('entity_or_view_or_subtype_expression',$,#1832);
#1085=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1084)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1086=DEFINED_TYPE('explicit_or_derived',$,#1833);
#1087=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1086)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1088=DEFINED_TYPE('express_id',$,#7);
#1089=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1088)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1090=DEFINED_TYPE('info_object_id',$,#7);
#1091=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1090)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1092=DEFINED_TYPE('map_or_view_definition_select',$,#1834);
#1093=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1092)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1094=DEFINED_TYPE('schema_map_or_view_definition',$,#1835);
#1095=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1094)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1096=DEFINED_TYPE('entity_or_view_definition_or_simple_type',$,#1836);
#1097=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1096)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1098=DEFINED_TYPE('type_or_rule',$,#1837);
#1099=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1098)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1100=DEFINED_TYPE('underlying_type',$,#1838);
#1101=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1100)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1102=ENTITY_DEFINITION('aggregate_target_parameter',$,(#1395),.F.,.T.,$,(#1395));
#1103=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1102)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1104=EXPLICIT_ATTRIBUTE('lower_bound',#1102,#1102,0,#1143,$,.T.);
#1105=EXPLICIT_ATTRIBUTE('upper_bound',#1102,#1102,1,#1143,$,.T.);
#1106=ENTITY_DEFINITION('aggregation_type',$,(#1153),.F.,.T.,$,(#1153));
#1107=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1106)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1108=EXPLICIT_ATTRIBUTE('element_type',#1106,#1106,0,#1153,$,.F.);
#1109=ENTITY_DEFINITION('algorithm_declaration',$,(#1158),.F.,.F.,$,(#1158));
#1110=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1109)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1111=ENTITY_DEFINITION('algorithm_definition',$,(),.F.,.F.,$,());
#1112=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1111)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1113=EXPLICIT_ATTRIBUTE('name',#1111,#1111,0,#1088,$,.F.);
#1114=EXPLICIT_ATTRIBUTE('parameters',#1111,#1111,1,#1849,$,.F.);
#1115=ENTITY_DEFINITION('andor_subtype_expression',$,(#1391),.F.,.T.,$,(#1391));
#1116=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1115)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1117=ENTITY_DEFINITION('and_subtype_expression',$,(#1391),.F.,.T.,$,(#1391));
#1118=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1117)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1119=ENTITY_DEFINITION('annotation',$,(),.F.,.F.,$,());
#1120=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1119)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1121=EXPLICIT_ATTRIBUTE('target',#1119,#1119,0,#1080,$,.F.);
#1122=EXPLICIT_ATTRIBUTE('values',#1119,#1119,1,#1850,$,.F.);
#1123=ENTITY_DEFINITION('array_type',$,(#1106),.F.,.T.,$,(#1106));
#1124=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1123)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1125=EXPLICIT_ATTRIBUTE('lower_index',#1123,#1123,0,#1143,$,.T.);
#1126=EXPLICIT_ATTRIBUTE('upper_index',#1123,#1123,1,#1143,$,.T.);
#1127=EXPLICIT_ATTRIBUTE('unique_flag',#1123,#1123,2,#6,$,.F.);
#1128=EXPLICIT_ATTRIBUTE('optional_flag',#1123,#1123,3,#6,$,.F.);
#1129=ENTITY_DEFINITION('attribute',$,(),.F.,.F.,$,());
#1130=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1129)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1131=EXPLICIT_ATTRIBUTE('name',#1129,#1129,0,#1088,$,.F.);
#1132=EXPLICIT_ATTRIBUTE('parent_entity',#1129,#1129,1,#1193,$,.F.);
#1133=EXPLICIT_ATTRIBUTE('parent',#1129,#1129,2,#1202,$,.F.);
#1134=EXPLICIT_ATTRIBUTE('order',#1129,#1129,3,#2,$,.T.);
#1135=ENTITY_DEFINITION('bag_type',$,(#1414),.F.,.T.,$,(#1414));
#1136=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1135)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1137=ENTITY_DEFINITION('binary_type',$,(#1372),.F.,.T.,$,(#1372));
#1138=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1137)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1139=EXPLICIT_ATTRIBUTE('width',#1137,#1137,0,#1143,$,.T.);
#1140=EXPLICIT_ATTRIBUTE('fixed_width',#1137,#1137,1,#6,$,.F.);
#1141=ENTITY_DEFINITION('boolean_type',$,(#1372),.F.,.T.,$,(#1372));
#1142=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1141)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1143=ENTITY_DEFINITION('bound',$,(),.F.,.F.,$,());
#1144=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1143)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1145=EXPLICIT_ATTRIBUTE('bound_value',#1143,#1143,0,#2,$,.F.);
#1146=ENTITY_DEFINITION('constant_declaration',$,(#1158),.F.,.T.,$,(#1158));
#1147=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1146)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1148=ENTITY_DEFINITION('constant_definition',$,(),.F.,.T.,$,());
#1149=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1148)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1150=EXPLICIT_ATTRIBUTE('name',#1148,#1148,0,#1088,$,.F.);
#1151=EXPLICIT_ATTRIBUTE('domain',#1148,#1148,1,#1074,$,.F.);
#1152=EXPLICIT_ATTRIBUTE('constant_value',#1148,#1148,2,#1074,$,.F.);
#1153=ENTITY_DEFINITION('data_type',$,(),.F.,.T.,$,());
#1154=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1153)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1155=EXPLICIT_ATTRIBUTE('name',#1153,#1153,0,#1088,$,.F.);
#1156=ENTITY_DEFINITION('data_type_declaration',$,(#1158),.F.,.T.,$,(#1158));
#1157=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1156)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1158=ENTITY_DEFINITION('declaration',$,(),.F.,.F.,$,());
#1159=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1158)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1160=EXPLICIT_ATTRIBUTE('parent_schema',#1158,#1158,0,#1350,$,.F.);
#1161=EXPLICIT_ATTRIBUTE('parent',#1158,#1158,1,#1239,$,.F.);
#1162=EXPLICIT_ATTRIBUTE('definition',#1158,#1158,2,#1078,$,.F.);
#1163=ENTITY_DEFINITION('defined_type',$,(#1305),.F.,.T.,$,(#1305));
#1164=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1163)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1165=EXPLICIT_ATTRIBUTE('domain',#1163,#1163,0,#1100,$,.F.);
#1166=ENTITY_DEFINITION('dependent_map_definition',$,(#1285),.F.,.T.,$,(#1285));
#1167=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1166)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1168=ENTITY_DEFINITION('dependent_map_partition',$,(#1297),.F.,.T.,$,(#1297));
#1169=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1168)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1170=EXPLICIT_ATTRIBUTE('parent',#1168,#1168,$,#1166,#1299,.F.);
#1171=INVERSE_ATTRIBUTE('source_parameters',#1168,#1168,$,#1172,#1301,#1294,#1898,
     $,.F.);
#1172=ENTITY_DEFINITION('dependent_source_parameter',$,(#1374),.F.,.T.,$,(#1374));
#1173=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1172)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1174=EXPLICIT_ATTRIBUTE('name',#1172,#1172,$,#1088,#1293,.F.);
#1175=EXPLICIT_ATTRIBUTE('extent',#1172,#1172,$,#1096,#1295,.F.);
#1176=ENTITY_DEFINITION('dependent_view_definition',$,(#1427),.F.,.T.,$,(#1427));
#1177=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1176)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1178=EXPLICIT_ATTRIBUTE('domain',#1176,#1176,0,#1074,$,.F.);
#1179=ENTITY_DEFINITION('derived_attribute',$,(#1129),.F.,.T.,$,(#1129));
#1180=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1179)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1181=EXPLICIT_ATTRIBUTE('domain',#1179,#1179,0,#1074,$,.F.);
#1182=EXPLICIT_ATTRIBUTE('redeclaring',#1179,#1179,1,#1086,$,.T.);
#1183=ENTITY_DEFINITION('documentation',$,(#1119),.F.,.T.,$,(#1119));
#1184=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1183)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1185=ENTITY_DEFINITION('domain_equivalent_type',$,(),.F.,.T.,$,());
#1186=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1185)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1187=EXPLICIT_ATTRIBUTE('external_type',#1185,#1185,0,#1305,$,.F.);
#1188=EXPLICIT_ATTRIBUTE('native_type',#1185,#1185,1,#1305,$,.F.);
#1189=EXPLICIT_ATTRIBUTE('owner',#1185,#1185,2,#1228,$,.F.);
#1190=ENTITY_DEFINITION('entity_declaration',$,(#1156),.F.,.T.,$,(#1156));
#1191=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1190)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1192=EXPLICIT_ATTRIBUTE('definition',#1190,#1190,$,#1193,#1162,.F.);
#1193=ENTITY_DEFINITION('entity_definition',$,(#1202),.F.,.T.,$,(#1202));
#1194=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1193)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1195=EXPLICIT_ATTRIBUTE('complex',#1193,#1193,0,#6,$,.F.);
#1196=EXPLICIT_ATTRIBUTE('instantiable',#1193,#1193,1,#6,$,.F.);
#1197=EXPLICIT_ATTRIBUTE('independent',#1193,#1193,2,#6,$,.F.);
#1198=EXPLICIT_ATTRIBUTE('supertypes',#1193,#1193,3,#1851,$,.F.);
#1199=INVERSE_ATTRIBUTE('attributes',#1193,#1193,0,#1129,$,#1133,#1900,$,.F.);
#1200=INVERSE_ATTRIBUTE('uniqueness_rules',#1193,#1193,1,#1404,$,#1408,#1901,$,.F.);
#1201=INVERSE_ATTRIBUTE('global_rules',#1193,#1193,2,#1243,$,#1246,#1902,$,.F.);
#1202=ENTITY_DEFINITION('entity_or_view_definition',$,(#1305),.F.,.F.,$,(#1305));
#1203=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1202)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1204=EXPLICIT_ATTRIBUTE('generic_supertypes',#1202,#1202,0,#1852,$,.F.);
#1205=ENTITY_DEFINITION('entity_select_type',$,(#1366),.F.,.T.,$,(#1366));
#1206=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1205)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1207=ENTITY_DEFINITION('enumeration_type',$,(#1153),.F.,.T.,$,(#1153));
#1208=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1207)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1209=EXPLICIT_ATTRIBUTE('local_elements',#1207,#1207,0,#1853,$,.T.);
#1210=DERIVED_ATTRIBUTE('elements',#1207,#1207,0,#1854,$);
#1211=ENTITY_DEFINITION('explicit_attribute',$,(#1129),.F.,.T.,$,(#1129));
#1212=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1211)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1213=EXPLICIT_ATTRIBUTE('domain',#1211,#1211,0,#1074,$,.F.);
#1214=EXPLICIT_ATTRIBUTE('redeclaring',#1211,#1211,1,#1211,$,.T.);
#1215=EXPLICIT_ATTRIBUTE('optional_flag',#1211,#1211,2,#6,$,.F.);
#1216=ENTITY_DEFINITION('express_code',$,(#1119),.F.,.T.,$,(#1119));
#1217=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1216)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1218=ENTITY_DEFINITION('extended_enumeration_type',$,(#1207),.F.,.T.,$,(#1207));
#1219=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1218)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1220=EXPLICIT_ATTRIBUTE('is_based_on',#1218,#1218,0,#1224,$,.F.);
#1221=ENTITY_DEFINITION('extended_select_type',$,(#1366),.F.,.T.,$,(#1366));
#1222=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1221)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1223=EXPLICIT_ATTRIBUTE('is_based_on',#1221,#1221,0,#1226,$,.F.);
#1224=ENTITY_DEFINITION('extensible_enumeration_type',$,(#1207),.F.,.T.,$,(#1207));
#1225=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1224)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1226=ENTITY_DEFINITION('extensible_select_type',$,(#1366),.F.,.T.,$,(#1366));
#1227=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1226)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1228=ENTITY_DEFINITION('external_schema',$,(),.F.,.T.,$,());
#1229=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1228)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1230=EXPLICIT_ATTRIBUTE('definition',#1228,#1228,0,#1350,$,.F.);
#1231=EXPLICIT_ATTRIBUTE('native_schema',#1228,#1228,1,#1350,$,.F.);
#1232=INVERSE_ATTRIBUTE('for_types',#1228,#1228,0,#1185,$,#1189,#1913,$,.F.);
#1233=ENTITY_DEFINITION('function_declaration',$,(#1109),.F.,.T.,$,(#1109));
#1234=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1233)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1235=ENTITY_DEFINITION('function_definition',$,(#1111),.F.,.T.,$,(#1111));
#1236=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1235)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1237=EXPLICIT_ATTRIBUTE('return_type',#1235,#1235,0,#1153,$,.F.);
#1238=EXPLICIT_ATTRIBUTE('return_type_label',#1235,#1235,1,#1088,$,.T.);
#1239=ENTITY_DEFINITION('generic_schema_definition',$,(),.F.,.F.,$,());
#1240=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1239)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1241=EXPLICIT_ATTRIBUTE('name',#1239,#1239,0,#1088,$,.F.);
#1242=EXPLICIT_ATTRIBUTE('identification',#1239,#1239,1,#1090,$,.T.);
#1243=ENTITY_DEFINITION('global_rule',$,(),.F.,.T.,$,());
#1244=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1243)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1245=EXPLICIT_ATTRIBUTE('name',#1243,#1243,0,#1088,$,.F.);
#1246=EXPLICIT_ATTRIBUTE('entities',#1243,#1243,1,#1855,$,.F.);
#1247=INVERSE_ATTRIBUTE('where_rules',#1243,#1243,0,#1439,$,#1442,#1918,$,.F.);
#1248=ENTITY_DEFINITION('identified_by_parameter',$,(#1291),.F.,.T.,$,(#1291));
#1249=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1248)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1250=ENTITY_DEFINITION('implicit_declaration',$,(#1258),.F.,.T.,$,(#1258));
#1251=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1250)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1252=ENTITY_DEFINITION('independent_view_definition',$,(#1427),.F.,.T.,$,(#1427));
#1253=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1252)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1254=ENTITY_DEFINITION('integer_bound',$,(#1143),.F.,.T.,$,(#1143));
#1255=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1254)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1256=ENTITY_DEFINITION('integer_type',$,(#1372),.F.,.T.,$,(#1372));
#1257=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1256)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1258=ENTITY_DEFINITION('interfaced_declaration',$,(#1158),.F.,.F.,$,(#1158));
#1259=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1258)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1260=EXPLICIT_ATTRIBUTE('alias_name',#1258,#1258,0,#1088,$,.T.);
#1261=ENTITY_DEFINITION('interface_specification',$,(),.F.,.T.,$,());
#1262=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1261)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1263=EXPLICIT_ATTRIBUTE('foreign_schema',#1261,#1261,0,#1239,$,.F.);
#1264=EXPLICIT_ATTRIBUTE('current_schema',#1261,#1261,1,#1239,$,.F.);
#1265=EXPLICIT_ATTRIBUTE('items',#1261,#1261,2,#1856,$,.T.);
#1266=ENTITY_DEFINITION('inverse_attribute',$,(#1129),.F.,.T.,$,(#1129));
#1267=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1266)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1268=EXPLICIT_ATTRIBUTE('domain',#1266,#1266,0,#1193,$,.F.);
#1269=EXPLICIT_ATTRIBUTE('redeclaring',#1266,#1266,1,#1266,$,.T.);
#1270=EXPLICIT_ATTRIBUTE('inverted_attr',#1266,#1266,2,#1211,$,.F.);
#1271=EXPLICIT_ATTRIBUTE('min_cardinality',#1266,#1266,3,#1143,$,.T.);
#1272=EXPLICIT_ATTRIBUTE('max_cardinality',#1266,#1266,4,#1143,$,.T.);
#1273=EXPLICIT_ATTRIBUTE('duplicates',#1266,#1266,5,#6,$,.F.);
#1274=ENTITY_DEFINITION('list_type',$,(#1414),.F.,.T.,$,(#1414));
#1275=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1274)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1276=EXPLICIT_ATTRIBUTE('unique_flag',#1274,#1274,0,#6,$,.F.);
#1277=ENTITY_DEFINITION('local_declaration',$,(#1158),.F.,.T.,$,(#1158));
#1278=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1277)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1279=ENTITY_DEFINITION('logical_type',$,(#1372),.F.,.T.,$,(#1372));
#1280=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1279)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1281=ENTITY_DEFINITION('map_declaration',$,(#1156),.F.,.T.,$,(#1156));
#1282=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1281)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1283=EXPLICIT_ATTRIBUTE('parent',#1281,#1281,$,#1357,#1161,.F.);
#1284=EXPLICIT_ATTRIBUTE('definition',#1281,#1281,$,#1285,#1162,.F.);
#1285=ENTITY_DEFINITION('map_definition',$,(),.F.,.T.,$,());
#1286=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1285)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1287=EXPLICIT_ATTRIBUTE('name',#1285,#1285,0,#1088,$,.F.);
#1288=EXPLICIT_ATTRIBUTE('super_type',#1285,#1285,1,#1285,$,.F.);
#1289=INVERSE_ATTRIBUTE('partitions',#1285,#1285,0,#1302,$,#1304,#1922,$,.F.);
#1290=INVERSE_ATTRIBUTE('target_parameters',#1285,#1285,1,#1395,$,#1398,#1923,$,
     .F.);
#1291=ENTITY_DEFINITION('map_or_view_input_parameter',$,(),.F.,.F.,$,());
#1292=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1291)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1293=EXPLICIT_ATTRIBUTE('name',#1291,#1291,0,#1088,$,.T.);
#1294=EXPLICIT_ATTRIBUTE('parent',#1291,#1291,1,#1297,$,.F.);
#1295=EXPLICIT_ATTRIBUTE('extent',#1291,#1291,2,#1153,$,.T.);
#1296=EXPLICIT_ATTRIBUTE('order',#1291,#1291,3,#2,$,.F.);
#1297=ENTITY_DEFINITION('map_or_view_partition',$,(),.F.,.F.,$,());
#1298=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1297)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1299=EXPLICIT_ATTRIBUTE('parent',#1297,#1297,0,#1092,$,.F.);
#1300=EXPLICIT_ATTRIBUTE('name',#1297,#1297,1,#1088,$,.F.);
#1301=INVERSE_ATTRIBUTE('source_parameters',#1297,#1297,0,#1374,$,#1294,#1928,$,
     .F.);
#1302=ENTITY_DEFINITION('map_partition',$,(#1297),.F.,.T.,$,(#1297));
#1303=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1302)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1304=EXPLICIT_ATTRIBUTE('parent',#1302,#1302,$,#1285,#1299,.F.);
#1305=ENTITY_DEFINITION('named_type',$,(#1153),.F.,.F.,$,(#1153));
#1306=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1305)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1307=EXPLICIT_ATTRIBUTE('short_name',#1305,#1305,0,#7,$,.T.);
#1308=INVERSE_ATTRIBUTE('where_rules',#1305,#1305,0,#1439,$,#1442,#1931,$,.F.);
#1309=ENTITY_DEFINITION('non_extensible_select_type',$,(#1366),.F.,.T.,$,(#1366));
#1310=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1309)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1311=EXPLICIT_ATTRIBUTE('local_selections',#1309,#1309,$,#1857,#1368,.F.);
#1312=ENTITY_DEFINITION('number_type',$,(#1372),.F.,.T.,$,(#1372));
#1313=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1312)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1314=ENTITY_DEFINITION('oneof_subtype_expression',$,(#1391),.F.,.T.,$,(#1391));
#1315=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1314)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1316=ENTITY_DEFINITION('parameter',$,(),.F.,.T.,$,());
#1317=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1316)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1318=EXPLICIT_ATTRIBUTE('name',#1316,#1316,0,#1088,$,.F.);
#1319=EXPLICIT_ATTRIBUTE('parameter_type',#1316,#1316,1,#1153,$,.F.);
#1320=EXPLICIT_ATTRIBUTE('var_type',#1316,#1316,2,#6,$,.F.);
#1321=EXPLICIT_ATTRIBUTE('type_labels',#1316,#1316,3,#1858,$,.T.);
#1322=ENTITY_DEFINITION('population_dependent_bound',$,(#1143),.F.,.T.,$,(#1143));
#1323=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1322)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1324=EXPLICIT_ATTRIBUTE('schema_name',#1322,#1322,0,#7,$,.F.);
#1325=EXPLICIT_ATTRIBUTE('entity_name',#1322,#1322,1,#7,$,.F.);
#1326=EXPLICIT_ATTRIBUTE('method_name',#1322,#1322,2,#7,$,.F.);
#1327=DERIVED_ATTRIBUTE('bound_value',#1322,#1322,0,#2,#1145);
#1328=ENTITY_DEFINITION('procedure_declaration',$,(#1109),.F.,.T.,$,(#1109));
#1329=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1328)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1330=ENTITY_DEFINITION('procedure_definition',$,(#1111),.F.,.T.,$,(#1111));
#1331=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1330)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1332=ENTITY_DEFINITION('real_type',$,(#1372),.F.,.T.,$,(#1372));
#1333=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1332)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1334=EXPLICIT_ATTRIBUTE('precision',#1332,#1332,0,#1143,$,.T.);
#1335=ENTITY_DEFINITION('referenced_declaration',$,(#1258),.F.,.T.,$,(#1258));
#1336=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1335)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1337=ENTITY_DEFINITION('reference_from_specification',$,(#1261),.F.,.T.,$,(#1261));
#1338=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1337)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1339=EXPLICIT_ATTRIBUTE('items',#1337,#1337,$,#1859,#1265,.T.);
#1340=ENTITY_DEFINITION('reference_from_specification_as',$,(#1337),.F.,.F.,$,(#1337));
#1341=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1340)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1342=EXPLICIT_ATTRIBUTE('current_schema',#1340,#1340,$,#1357,#1264,.F.);
#1343=EXPLICIT_ATTRIBUTE('alias_name',#1340,#1340,0,#1088,$,.T.);
#1344=ENTITY_DEFINITION('reference_from_specification_as_source',$,(#1340),.F.,.T.,
     $,(#1340));
#1345=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1344)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1346=ENTITY_DEFINITION('reference_from_specification_as_target',$,(#1340),.F.,.T.,
     $,(#1340));
#1347=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1346)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1348=ENTITY_DEFINITION('rule_declaration',$,(#1158),.F.,.T.,$,(#1158));
#1349=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1348)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1350=ENTITY_DEFINITION('schema_definition',$,(#1239),.F.,.T.,$,(#1239));
#1351=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1350)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1352=INVERSE_ATTRIBUTE('entity_declarations',#1350,#1350,0,#1190,$,#1161,#1938,
     $,.F.);
#1353=INVERSE_ATTRIBUTE('type_declarations',#1350,#1350,1,#1401,$,#1161,#1939,$,
     .F.);
#1354=INVERSE_ATTRIBUTE('rule_declarations',#1350,#1350,2,#1348,$,#1161,#1940,$,
     .F.);
#1355=INVERSE_ATTRIBUTE('algorithm_declarations',#1350,#1350,3,#1109,$,#1161,#1941,
     $,.F.);
#1356=INVERSE_ATTRIBUTE('external_schemas',#1350,#1350,4,#1228,$,#1231,#1942,$,.F.);
#1357=ENTITY_DEFINITION('schema_map_definition',$,(#1239),.F.,.T.,$,(#1239));
#1358=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1357)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1359=INVERSE_ATTRIBUTE('view_declarations',#1357,#1357,0,#1423,$,#1425,#1943,$,
     .F.);
#1360=INVERSE_ATTRIBUTE('map_declarations',#1357,#1357,1,#1281,$,#1283,#1944,$,.F.);
#1361=INVERSE_ATTRIBUTE('source_schema_specifications',#1357,#1357,2,#1344,$,#1342,
     #1945,$,.F.);
#1362=INVERSE_ATTRIBUTE('target_schema_specifications',#1357,#1357,3,#1346,$,#1342,
     #1946,$,.F.);
#1363=ENTITY_DEFINITION('schema_view_definition',$,(#1239),.F.,.T.,$,(#1239));
#1364=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1363)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1365=INVERSE_ATTRIBUTE('view_declarations',#1363,#1363,0,#1423,$,#1425,#1947,$,
     .F.);
#1366=ENTITY_DEFINITION('select_type',$,(#1153),.F.,.F.,$,(#1153));
#1367=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1366)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1368=EXPLICIT_ATTRIBUTE('local_selections',#1366,#1366,0,#1860,$,.T.);
#1369=DERIVED_ATTRIBUTE('selections',#1366,#1366,0,#1861,$);
#1370=ENTITY_DEFINITION('set_type',$,(#1414),.F.,.T.,$,(#1414));
#1371=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1370)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1372=ENTITY_DEFINITION('simple_type',$,(#1153),.F.,.F.,$,(#1153));
#1373=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1372)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1374=ENTITY_DEFINITION('source_parameter',$,(#1291),.F.,.T.,$,(#1291));
#1375=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1374)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1376=EXPLICIT_ATTRIBUTE('name',#1374,#1374,$,#1088,#1293,.F.);
#1377=EXPLICIT_ATTRIBUTE('extent',#1374,#1374,$,#1202,#1295,.F.);
#1378=ENTITY_DEFINITION('string_type',$,(#1372),.F.,.T.,$,(#1372));
#1379=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1378)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1380=EXPLICIT_ATTRIBUTE('width',#1378,#1378,0,#1143,$,.T.);
#1381=EXPLICIT_ATTRIBUTE('fixed_width',#1378,#1378,1,#6,$,.F.);
#1382=ENTITY_DEFINITION('sub_supertype_constraint',$,(),.F.,.T.,$,());
#1383=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1382)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1384=EXPLICIT_ATTRIBUTE('name',#1382,#1382,0,#1088,$,.T.);
#1385=EXPLICIT_ATTRIBUTE('super_type',#1382,#1382,1,#1193,$,.F.);
#1386=EXPLICIT_ATTRIBUTE('generic_supertype',#1382,#1382,2,#1202,$,.F.);
#1387=EXPLICIT_ATTRIBUTE('total_cover',#1382,#1382,3,#1862,$,.T.);
#1388=EXPLICIT_ATTRIBUTE('constraint',#1382,#1382,4,#1391,$,.T.);
#1389=ENTITY_DEFINITION('subtype_constraint_declaration',$,(#1158),.F.,.T.,$,(#1158));
#1390=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1389)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1391=ENTITY_DEFINITION('subtype_expression',$,(),.F.,.F.,$,());
#1392=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1391)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1393=EXPLICIT_ATTRIBUTE('operands',#1391,#1391,0,#1863,$,.F.);
#1394=EXPLICIT_ATTRIBUTE('generic_operands',#1391,#1391,1,#1864,$,.F.);
#1395=ENTITY_DEFINITION('target_parameter',$,(),.F.,.T.,$,());
#1396=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1395)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1397=EXPLICIT_ATTRIBUTE('name',#1395,#1395,0,#1088,$,.F.);
#1398=EXPLICIT_ATTRIBUTE('parent',#1395,#1395,1,#1285,$,.F.);
#1399=EXPLICIT_ATTRIBUTE('extent',#1395,#1395,2,#1193,$,.F.);
#1400=EXPLICIT_ATTRIBUTE('order',#1395,#1395,3,#2,$,.F.);
#1401=ENTITY_DEFINITION('type_declaration',$,(#1156),.F.,.T.,$,(#1156));
#1402=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1401)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1403=EXPLICIT_ATTRIBUTE('definition',#1401,#1401,$,#1163,#1162,.F.);
#1404=ENTITY_DEFINITION('uniqueness_rule',$,(),.F.,.T.,$,());
#1405=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1404)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1406=EXPLICIT_ATTRIBUTE('label',#1404,#1404,0,#1088,$,.T.);
#1407=EXPLICIT_ATTRIBUTE('attributes',#1404,#1404,1,#1865,$,.F.);
#1408=EXPLICIT_ATTRIBUTE('parent_entity',#1404,#1404,2,#1193,$,.F.);
#1409=ENTITY_DEFINITION('used_declaration',$,(#1258),.F.,.T.,$,(#1258));
#1410=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1409)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1411=ENTITY_DEFINITION('use_from_specification',$,(#1261),.F.,.T.,$,(#1261));
#1412=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1411)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1413=EXPLICIT_ATTRIBUTE('items',#1411,#1411,$,#1866,#1265,.T.);
#1414=ENTITY_DEFINITION('variable_size_aggregation_type',$,(#1106),.F.,.F.,$,(#1106));
#1415=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1414)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1416=EXPLICIT_ATTRIBUTE('lower_bound',#1414,#1414,0,#1143,$,.T.);
#1417=EXPLICIT_ATTRIBUTE('upper_bound',#1414,#1414,1,#1143,$,.T.);
#1418=ENTITY_DEFINITION('view_attribute',$,(#1129),.F.,.T.,$,(#1129));
#1419=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1418)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1420=EXPLICIT_ATTRIBUTE('domain',#1418,#1418,0,#1074,$,.F.);
#1421=EXPLICIT_ATTRIBUTE('optional_flag',#1418,#1418,1,#6,$,.F.);
#1422=EXPLICIT_ATTRIBUTE('parent',#1418,#1418,$,#1252,#1133,.F.);
#1423=ENTITY_DEFINITION('view_declaration',$,(#1156),.F.,.T.,$,(#1156));
#1424=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1423)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1425=EXPLICIT_ATTRIBUTE('parent',#1423,#1423,$,#1094,#1161,.F.);
#1426=EXPLICIT_ATTRIBUTE('definition',#1423,#1423,$,#1427,#1162,.F.);
#1427=ENTITY_DEFINITION('view_definition',$,(#1202),.F.,.F.,$,(#1202));
#1428=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1427)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1429=EXPLICIT_ATTRIBUTE('generic_supertypes',#1427,#1427,$,#1867,#1204,.F.);
#1430=INVERSE_ATTRIBUTE('partitions',#1427,#1427,0,#1431,$,#1433,#1968,$,.F.);
#1431=ENTITY_DEFINITION('view_partition',$,(#1297),.F.,.T.,$,(#1297));
#1432=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1431)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1433=EXPLICIT_ATTRIBUTE('parent',#1431,#1431,$,#1427,#1299,.F.);
#1434=INVERSE_ATTRIBUTE('attribute',#1431,#1431,0,#1435,$,#1438,#1969,$,.F.);
#1435=ENTITY_DEFINITION('view_partition_attribute',$,(),.F.,.T.,$,());
#1436=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1435)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1437=EXPLICIT_ATTRIBUTE('parent_view_attribute',#1435,#1435,0,#1418,$,.F.);
#1438=EXPLICIT_ATTRIBUTE('related_partition',#1435,#1435,1,#1431,$,.F.);
#1439=ENTITY_DEFINITION('where_rule',$,(),.F.,.T.,$,());
#1440=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#1439)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1441=EXPLICIT_ATTRIBUTE('label',#1439,#1439,0,#1088,$,.T.);
#1442=EXPLICIT_ATTRIBUTE('parent_item',#1439,#1439,1,#1098,$,.F.);
#1443=EXPLICIT_ATTRIBUTE('order',#1439,#1439,2,#2,$,.F.);
#1827=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_base_type',(#1372,#1106,#1305,#1316));
#1828=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_constructed_type',(#1207,#1366));
#1829=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_declaration_type',(#1305,#1243,#1111,#1148,
     #1285,#1382));
#1830=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_documentation_object',(#1350,#1148,#1305,
     #1129,#1111,#1243,#1439));
#1831=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_subtype_expression',(#1193,#1391));
#1832=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_view_or_subtype_expression',
     (#1202,#1391));
#1833=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_explicit_or_derived',(#1211,#1179));
#1834=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_map_or_view_definition_select',(#1285,
     #1427));
#1835=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_schema_map_or_view_definition',(#1363,
     #1357));
#1836=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_view_definition_or_simple_type',
     (#1202,#1372));
#1837=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_type_or_rule',(#1305,#1243));
#1838=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_underlying_type',(#1372,#1106,#1163,#1076));
#1849=LIST_TYPE('_LIST_0_parameter',#1316,#1882,$,.F.);
#1850=LIST_TYPE('_LIST_1_STRING',#7,#1885,$,.F.);
#1851=LIST_TYPE('_LIST_0_UNIQUE_entity_definition',#1193,#1899,$,.T.);
#1852=LIST_TYPE('_LIST_0_UNIQUE_entity_or_view_definition',#1202,#1905,$,.T.);
#1853=LIST_TYPE('_LIST_0_UNIQUE_express_id',#1088,#1908,$,.T.);
#1854=LIST_TYPE('_LIST_0_UNIQUE_express_id',#1088,#1909,$,.T.);
#1855=LIST_TYPE('_LIST_1_entity_definition',#1193,#1917,$,.F.);
#1856=SET_TYPE('_SET_1_interfaced_declaration',#1258,#1921,$);
#1857=SET_TYPE('_SET_1_named_type',#1305,#1932,$);
#1858=LIST_TYPE('_LIST_1_express_id',#1088,#1933,$,.F.);
#1859=SET_TYPE('_SET_1_referenced_declaration',#1335,#1935,$);
#1860=SET_TYPE('_SET_1_named_type',#1305,#1951,$);
#1861=SET_TYPE('_SET_1_named_type',#1305,#1952,$);
#1862=SET_TYPE('_SET_0_entity_definition',#1193,#1956,$);
#1863=SET_TYPE('_SET_1_entity_or_subtype_expression',#1082,#1959,$);
#1864=SET_TYPE('_SET_1_entity_or_view_or_subtype_expression',#1084,#1960,$);
#1865=LIST_TYPE('_LIST_1_attribute',#1129,#1961,$,.F.);
#1866=SET_TYPE('_SET_1_used_declaration',#1409,#1962,$);
#1867=LIST_TYPE('_LIST_0_UNIQUE_view_definition',#1427,#1967,$,.T.);
#1876=ONEOF_SUBTYPE_EXPRESSION((#1414,#1123),(#1414,#1123));
#1877=SUB_SUPERTYPE_CONSTRAINT($,#1106,#1106,$,#1876);
#1878=ONEOF_SUBTYPE_EXPRESSION((#1233,#1328),(#1233,#1328));
#1879=SUB_SUPERTYPE_CONSTRAINT($,#1109,#1109,$,#1878);
#1880=ONEOF_SUBTYPE_EXPRESSION((#1235,#1330),(#1235,#1330));
#1881=SUB_SUPERTYPE_CONSTRAINT($,#1111,#1111,$,#1880);
#1882=INTEGER_BOUND(0);
#1883=ONEOF_SUBTYPE_EXPRESSION((#1183,#1216),(#1183,#1216));
#1884=SUB_SUPERTYPE_CONSTRAINT($,#1119,#1119,$,#1883);
#1885=INTEGER_BOUND(1);
#1886=ONEOF_SUBTYPE_EXPRESSION((#1179,#1211,#1266,#1418),(#1179,#1211,#1266,#1418));
#1887=SUB_SUPERTYPE_CONSTRAINT($,#1129,#1129,$,#1886);
#1888=ONEOF_SUBTYPE_EXPRESSION((#1254,#1322),(#1254,#1322));
#1889=SUB_SUPERTYPE_CONSTRAINT($,#1143,#1143,$,#1888);
#1890=ONEOF_SUBTYPE_EXPRESSION((#1305,#1207,#1366,#1372,#1106),(#1305,#1207,#1366,
     #1372,#1106));
#1891=SUB_SUPERTYPE_CONSTRAINT($,#1153,#1153,$,#1890);
#1892=ONEOF_SUBTYPE_EXPRESSION((#1190,#1401,#1423),(#1190,#1401,#1423));
#1893=SUB_SUPERTYPE_CONSTRAINT($,#1156,#1156,$,#1892);
#1894=ONEOF_SUBTYPE_EXPRESSION((#1258,#1277),(#1258,#1277));
#1895=ONEOF_SUBTYPE_EXPRESSION((#1156,#1348,#1109,#1146,#1281,#1389),(#1156,#1348,
     #1109,#1146,#1281,#1389));
#1896=AND_SUBTYPE_EXPRESSION((#1894,#1895),(#1894,#1895));
#1897=SUB_SUPERTYPE_CONSTRAINT($,#1158,#1158,$,#1896);
#1898=INTEGER_BOUND(0);
#1899=INTEGER_BOUND(0);
#1900=INTEGER_BOUND(0);
#1901=INTEGER_BOUND(0);
#1902=INTEGER_BOUND(0);
#1903=ONEOF_SUBTYPE_EXPRESSION((#1193,#1427),(#1193,#1427));
#1904=SUB_SUPERTYPE_CONSTRAINT($,#1202,#1202,$,#1903);
#1905=INTEGER_BOUND(0);
#1906=ANDOR_SUBTYPE_EXPRESSION((#1224,#1218),(#1224,#1218));
#1907=SUB_SUPERTYPE_CONSTRAINT($,#1207,#1207,$,#1906);
#1908=INTEGER_BOUND(0);
#1909=INTEGER_BOUND(0);
#1911=WHERE_RULE('wr1',#1207,$);
#1913=INTEGER_BOUND(1);
#1914=ONEOF_SUBTYPE_EXPRESSION((#1350,#1363,#1357),(#1350,#1363,#1357));
#1915=SUB_SUPERTYPE_CONSTRAINT($,#1239,#1239,$,#1914);
#1916=UNIQUENESS_RULE('ur1',(#1242),#1239);
#1917=INTEGER_BOUND(1);
#1918=INTEGER_BOUND(1);
#1919=ONEOF_SUBTYPE_EXPRESSION((#1250,#1409,#1335),(#1250,#1409,#1335));
#1920=SUB_SUPERTYPE_CONSTRAINT($,#1258,#1258,$,#1919);
#1921=INTEGER_BOUND(1);
#1922=INTEGER_BOUND(1);
#1923=INTEGER_BOUND(0);
#1924=ONEOF_SUBTYPE_EXPRESSION((#1248,#1374),(#1248,#1374));
#1925=SUB_SUPERTYPE_CONSTRAINT($,#1291,#1291,$,#1924);
#1926=ONEOF_SUBTYPE_EXPRESSION((#1302,#1168,#1431),(#1302,#1168,#1431));
#1927=SUB_SUPERTYPE_CONSTRAINT($,#1297,#1297,$,#1926);
#1928=INTEGER_BOUND(0);
#1929=ONEOF_SUBTYPE_EXPRESSION((#1163,#1202),(#1163,#1202));
#1930=SUB_SUPERTYPE_CONSTRAINT($,#1305,#1305,$,#1929);
#1931=INTEGER_BOUND(0);
#1932=INTEGER_BOUND(1);
#1933=INTEGER_BOUND(1);
#1935=INTEGER_BOUND(1);
#1936=ONEOF_SUBTYPE_EXPRESSION((#1344,#1346),(#1344,#1346));
#1937=SUB_SUPERTYPE_CONSTRAINT($,#1340,#1340,$,#1936);
#1938=INTEGER_BOUND(0);
#1939=INTEGER_BOUND(0);
#1940=INTEGER_BOUND(0);
#1941=INTEGER_BOUND(0);
#1942=INTEGER_BOUND(1);
#1943=INTEGER_BOUND(0);
#1944=INTEGER_BOUND(0);
#1945=INTEGER_BOUND(1);
#1946=INTEGER_BOUND(1);
#1947=INTEGER_BOUND(0);
#1948=ONEOF_SUBTYPE_EXPRESSION((#1309,#1226),(#1309,#1226));
#1949=ANDOR_SUBTYPE_EXPRESSION((#1948,#1205,#1221),(#1948,#1205,#1221));
#1950=SUB_SUPERTYPE_CONSTRAINT($,#1366,#1366,$,#1949);
#1951=INTEGER_BOUND(1);
#1952=INTEGER_BOUND(1);
#1954=ONEOF_SUBTYPE_EXPRESSION((#1256,#1312,#1332,#1141,#1279,#1137,#1378),(#1256,
     #1312,#1332,#1141,#1279,#1137,#1378));
#1955=SUB_SUPERTYPE_CONSTRAINT($,#1372,#1372,$,#1954);
#1956=INTEGER_BOUND(0);
#1957=ONEOF_SUBTYPE_EXPRESSION((#1115,#1117,#1314),(#1115,#1117,#1314));
#1958=SUB_SUPERTYPE_CONSTRAINT($,#1391,#1391,$,#1957);
#1959=INTEGER_BOUND(1);
#1960=INTEGER_BOUND(1);
#1961=INTEGER_BOUND(1);
#1962=INTEGER_BOUND(1);
#1963=ONEOF_SUBTYPE_EXPRESSION((#1135,#1370,#1274),(#1135,#1370,#1274));
#1964=SUB_SUPERTYPE_CONSTRAINT($,#1414,#1414,$,#1963);
#1965=ONEOF_SUBTYPE_EXPRESSION((#1252,#1176),(#1252,#1176));
#1966=SUB_SUPERTYPE_CONSTRAINT($,#1427,#1427,$,#1965);
#1967=INTEGER_BOUND(0);
#1968=INTEGER_BOUND(1);
#1969=INTEGER_BOUND(0);
#2016=ENTITY_DEFINITION('constant_declaration+implicit_declaration',$,(#1146,#1250),
     .T.,.T.,.T.,(#1146,#1250));
#2017=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2016)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2019=ENTITY_DEFINITION('constant_declaration+local_declaration',$,(#1146,#1277),
     .T.,.T.,.T.,(#1146,#1277));
#2020=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2019)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2022=ENTITY_DEFINITION('constant_declaration+referenced_declaration',$,(#1146,#1335),
     .T.,.T.,.T.,(#1146,#1335));
#2023=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2022)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2025=ENTITY_DEFINITION('data_type_declaration+implicit_declaration',$,(#1156,#1250),
     .T.,.T.,.T.,(#1156,#1250));
#2026=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2025)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2028=ENTITY_DEFINITION('data_type_declaration+local_declaration',$,(#1156,#1277),
     .T.,.T.,.T.,(#1156,#1277));
#2029=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2028)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2031=ENTITY_DEFINITION('entity_declaration+implicit_declaration',$,(#1190,#1250),
     .T.,.T.,.T.,(#1190,#1250));
#2032=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2031)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2034=ENTITY_DEFINITION('entity_declaration+local_declaration',$,(#1190,#1277),.T.,
     .T.,.T.,(#1190,#1277));
#2035=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2034)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2037=ENTITY_DEFINITION('entity_declaration+referenced_declaration',$,(#1190,#1335),
     .T.,.T.,.T.,(#1190,#1335));
#2038=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2037)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2040=ENTITY_DEFINITION('entity_declaration+used_declaration',$,(#1190,#1409),.T.,
     .T.,.T.,(#1190,#1409));
#2041=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2040)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2043=ENTITY_DEFINITION('entity_select_type+extended_select_type+extensible_select_type',
     $,(#1205,#1221,#1226),.T.,.T.,.T.,(#1205,#1221,#1226));
#2044=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2043)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2046=ENTITY_DEFINITION('entity_select_type+extended_select_type+non_extensible_select_type',
     $,(#1205,#1221,#1309),.T.,.T.,.T.,(#1205,#1221,#1309));
#2047=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2046)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2049=ENTITY_DEFINITION('entity_select_type+extensible_select_type',$,(#1205,#1226),
     .T.,.T.,.T.,(#1205,#1226));
#2050=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2049)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2052=ENTITY_DEFINITION('entity_select_type+non_extensible_select_type',$,(#1205,
     #1309),.T.,.T.,.T.,(#1205,#1309));
#2053=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2052)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2055=ENTITY_DEFINITION('extended_enumeration_type+extensible_enumeration_type',
     $,(#1218,#1224),.T.,.T.,.T.,(#1218,#1224));
#2056=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2055)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2058=ENTITY_DEFINITION('extended_select_type+extensible_select_type',$,(#1221,#1226),
     .T.,.T.,.T.,(#1221,#1226));
#2059=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2058)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2061=ENTITY_DEFINITION('extended_select_type+non_extensible_select_type',$,(#1221,
     #1309),.T.,.T.,.T.,(#1221,#1309));
#2062=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2061)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2064=ENTITY_DEFINITION('function_declaration+implicit_declaration',$,(#1233,#1250),
     .T.,.T.,.T.,(#1233,#1250));
#2065=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2064)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2067=ENTITY_DEFINITION('function_declaration+local_declaration',$,(#1233,#1277),
     .T.,.T.,.T.,(#1233,#1277));
#2068=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2067)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2070=ENTITY_DEFINITION('function_declaration+referenced_declaration',$,(#1233,#1335),
     .T.,.T.,.T.,(#1233,#1335));
#2071=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2070)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2073=ENTITY_DEFINITION('implicit_declaration+map_declaration',$,(#1250,#1281),.T.,
     .T.,.T.,(#1250,#1281));
#2074=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2073)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2076=ENTITY_DEFINITION('implicit_declaration+procedure_declaration',$,(#1250,#1328),
     .T.,.T.,.T.,(#1250,#1328));
#2077=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2076)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2079=ENTITY_DEFINITION('implicit_declaration+rule_declaration',$,(#1250,#1348),
     .T.,.T.,.T.,(#1250,#1348));
#2080=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2079)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2082=ENTITY_DEFINITION('implicit_declaration+subtype_constraint_declaration',$,
     (#1250,#1389),.T.,.T.,.T.,(#1250,#1389));
#2083=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2082)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2085=ENTITY_DEFINITION('implicit_declaration+type_declaration',$,(#1250,#1401),
     .T.,.T.,.T.,(#1250,#1401));
#2086=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2085)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2088=ENTITY_DEFINITION('implicit_declaration+view_declaration',$,(#1250,#1423),
     .T.,.T.,.T.,(#1250,#1423));
#2089=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2088)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2091=ENTITY_DEFINITION('local_declaration+map_declaration',$,(#1277,#1281),.T.,
     .T.,.T.,(#1277,#1281));
#2092=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2091)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2094=ENTITY_DEFINITION('local_declaration+procedure_declaration',$,(#1277,#1328),
     .T.,.T.,.T.,(#1277,#1328));
#2095=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2094)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2097=ENTITY_DEFINITION('local_declaration+rule_declaration',$,(#1277,#1348),.T.,
     .T.,.T.,(#1277,#1348));
#2098=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2097)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2100=ENTITY_DEFINITION('local_declaration+subtype_constraint_declaration',$,(#1277,
     #1389),.T.,.T.,.T.,(#1277,#1389));
#2101=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2100)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2103=ENTITY_DEFINITION('local_declaration+type_declaration',$,(#1277,#1401),.T.,
     .T.,.T.,(#1277,#1401));
#2104=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2103)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2106=ENTITY_DEFINITION('local_declaration+view_declaration',$,(#1277,#1423),.T.,
     .T.,.T.,(#1277,#1423));
#2107=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2106)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2109=ENTITY_DEFINITION('map_declaration+referenced_declaration',$,(#1281,#1335),
     .T.,.T.,.T.,(#1281,#1335));
#2110=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2109)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2112=ENTITY_DEFINITION('map_declaration+used_declaration',$,(#1281,#1409),.T.,.T.,
     .T.,(#1281,#1409));
#2113=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2112)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2115=ENTITY_DEFINITION('procedure_declaration+referenced_declaration',$,(#1328,
     #1335),.T.,.T.,.T.,(#1328,#1335));
#2116=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2115)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2118=ENTITY_DEFINITION('referenced_declaration+type_declaration',$,(#1335,#1401),
     .T.,.T.,.T.,(#1335,#1401));
#2119=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2118)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2121=ENTITY_DEFINITION('referenced_declaration+view_declaration',$,(#1335,#1423),
     .T.,.T.,.T.,(#1335,#1423));
#2122=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2121)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2124=ENTITY_DEFINITION('type_declaration+used_declaration',$,(#1401,#1409),.T.,
     .T.,.T.,(#1401,#1409));
#2125=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2124)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#2127=ENTITY_DEFINITION('used_declaration+view_declaration',$,(#1409,#1423),.T.,
     .T.,.T.,(#1409,#1423));
#2128=(DATA_TYPE_DECLARATION()DECLARATION(#1073,#1073,#2127)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
ENDSEC;
DATA('MAPPING_SCHEMA_DICTIONARY_DATA',('EXTENDED_DICTIONARY_SCHEMA'));
#1444=SCHEMA_DEFINITION('MAPPING_SCHEMA',$);
#1446=DEFINED_TYPE('attribute_mapping_path_select',$,#1839);
#1447=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1446)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1449=DEFINED_TYPE('entity_or_attribute',$,#1840);
#1450=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1449)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1452=DEFINED_TYPE('attribute_mapping_domain_select',$,#1841);
#1453=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1452)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1454=ENTITY_DEFINITION('entity_mapping',$,(),.F.,.T.,$,());
#1455=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1454)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1457=EXPLICIT_ATTRIBUTE('source',#1454,#1454,0,#1193,$,.F.);
#1459=EXPLICIT_ATTRIBUTE('target',#1454,#1454,1,#1449,$,.F.);
#1461=EXPLICIT_ATTRIBUTE('constraints',#1454,#1454,2,#1496,$,.T.);
#1463=EXPLICIT_ATTRIBUTE('entry_point',#1454,#1454,3,#6,$,.F.);
#1465=EXPLICIT_ATTRIBUTE('strong_users',#1454,#1454,4,#6,$,.F.);
#1467=ENTITY_DEFINITION('schema_mapping',$,(),.F.,.T.,$,());
#1468=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1467)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1470=EXPLICIT_ATTRIBUTE('source',#1467,#1467,0,#1350,$,.F.);
#1472=EXPLICIT_ATTRIBUTE('target',#1467,#1467,1,#1350,$,.F.);
#1474=EXPLICIT_ATTRIBUTE('uofs',#1467,#1467,2,#1868,$,.F.);
#1476=EXPLICIT_ATTRIBUTE('id',#1467,#1467,3,#7,$,.F.);
#1478=EXPLICIT_ATTRIBUTE('components',#1467,#1467,4,#1869,$,.T.);
#1480=ENTITY_DEFINITION('uof_mapping',$,(),.F.,.T.,$,());
#1481=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1480)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1483=EXPLICIT_ATTRIBUTE('name',#1480,#1480,0,#7,$,.F.);
#1485=EXPLICIT_ATTRIBUTE('mappings',#1480,#1480,1,#1870,$,.F.);
#1487=DEFINED_TYPE('aggregate_member_constraint_select',$,#1842);
#1488=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1487)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1490=DEFINED_TYPE('attribute_select',$,#1843);
#1491=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1490)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1493=DEFINED_TYPE('attribute_value_constraint_select',$,#1844);
#1494=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1493)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1496=DEFINED_TYPE('constraint_select',$,#1845);
#1497=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1496)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1499=DEFINED_TYPE('inverse_attribute_constraint_select',$,#1846);
#1500=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1499)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1502=DEFINED_TYPE('path_constraint_select',$,#1847);
#1503=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1502)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1505=DEFINED_TYPE('select_constraint_select',$,#1848);
#1506=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1505)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#1508=ENTITY_DEFINITION('aggregate_member_constraint',$,(#1536),.F.,.T.,$,(#1536));
#1509=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1508)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1511=EXPLICIT_ATTRIBUTE('member',#1508,#1508,0,#2,$,.T.);
#1513=EXPLICIT_ATTRIBUTE('attribute',#1508,#1508,1,#1487,$,.F.);
#1515=ENTITY_DEFINITION('and_constraint_relationship',$,(#1580),.F.,.T.,$,(#1580));
#1516=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1515)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1518=ENTITY_DEFINITION('attribute_value_constraint',$,(#1536),.F.,.T.,$,(#1536));
#1519=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1518)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1521=EXPLICIT_ATTRIBUTE('attribute',#1518,#1518,0,#1493,$,.F.);
#1523=ENTITY_DEFINITION('boolean_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1524=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1523)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1526=EXPLICIT_ATTRIBUTE('constraint_value',#1523,#1523,0,#6,$,.F.);
#1528=ENTITY_DEFINITION('constraint',$,(),.F.,.F.,$,());
#1529=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1528)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1531=ENTITY_DEFINITION('negation_constraint',$,(#1528),.F.,.T.,$,(#1528));
#1532=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1531)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1534=EXPLICIT_ATTRIBUTE('constraints',#1531,#1531,0,#1496,$,.F.);
#1536=ENTITY_DEFINITION('constraint_attribute',$,(#1528),.F.,.F.,$,(#1528));
#1537=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1536)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1539=ENTITY_DEFINITION('constraint_relationship',$,(#1528),.F.,.F.,$,(#1528));
#1540=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1539)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1542=EXPLICIT_ATTRIBUTE('element2',#1539,#1539,0,#1496,$,.F.);
#1544=ENTITY_DEFINITION('entity_constraint',$,(#1536),.F.,.T.,$,(#1536));
#1545=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1544)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1547=EXPLICIT_ATTRIBUTE('domain',#1544,#1544,0,#1193,$,.F.);
#1549=EXPLICIT_ATTRIBUTE('attribute',#1544,#1544,1,#1490,$,.F.);
#1551=ENTITY_DEFINITION('enumeration_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1552=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1551)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1554=EXPLICIT_ATTRIBUTE('constraint_value',#1551,#1551,0,#1088,$,.F.);
#1556=ENTITY_DEFINITION('exact_entity_constraint',$,(#1544),.F.,.T.,$,(#1544));
#1557=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1556)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1559=ENTITY_DEFINITION('instance_equal',$,(#1580),.F.,.T.,$,(#1580));
#1560=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1559)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1562=ENTITY_DEFINITION('integer_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1563=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1562)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1565=EXPLICIT_ATTRIBUTE('constraint_value',#1562,#1562,0,#2,$,.F.);
#1567=ENTITY_DEFINITION('inverse_attribute_constraint',$,(#1528),.F.,.T.,$,(#1528));
#1568=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1567)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1570=EXPLICIT_ATTRIBUTE('inverted_attribute',#1567,#1567,0,#1499,$,.F.);
#1572=ENTITY_DEFINITION('logical_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1573=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1572)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1575=EXPLICIT_ATTRIBUTE('constraint_value',#1572,#1572,0,#5,$,.F.);
#1577=ENTITY_DEFINITION('non_optional_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1578=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1577)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1580=ENTITY_DEFINITION('instance_constraint',$,(#1539),.F.,.F.,$,(#1539));
#1581=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1580)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1583=EXPLICIT_ATTRIBUTE('element1',#1580,#1580,0,#1496,$,.F.);
#1585=ENTITY_DEFINITION('or_constraint_relationship',$,(#1580),.F.,.T.,$,(#1580));
#1586=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1585)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1588=ENTITY_DEFINITION('path_constraint',$,(#1539),.F.,.T.,$,(#1539));
#1589=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1588)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1591=EXPLICIT_ATTRIBUTE('element1',#1588,#1588,0,#1502,$,.F.);
#1593=ENTITY_DEFINITION('end_of_path_constraint',$,(#1528),.F.,.T.,$,(#1528));
#1594=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1593)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1596=EXPLICIT_ATTRIBUTE('constraints',#1593,#1593,0,#1496,$,.F.);
#1598=ENTITY_DEFINITION('real_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1599=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1598)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1601=EXPLICIT_ATTRIBUTE('constraint_value',#1598,#1598,0,#3,$,.F.);
#1603=ENTITY_DEFINITION('select_constraint',$,(#1536),.F.,.T.,$,(#1536));
#1604=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1603)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1606=EXPLICIT_ATTRIBUTE('data_type',#1603,#1603,0,#1871,$,.F.);
#1608=EXPLICIT_ATTRIBUTE('attribute',#1603,#1603,1,#1505,$,.F.);
#1610=ENTITY_DEFINITION('string_constraint',$,(#1518),.F.,.T.,$,(#1518));
#1611=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1610)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1613=EXPLICIT_ATTRIBUTE('constraint_value',#1610,#1610,0,#7,$,.F.);
#1615=ENTITY_DEFINITION('aggregate_size_constraint',$,(#1536),.F.,.T.,$,(#1536));
#1616=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1615)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1618=EXPLICIT_ATTRIBUTE('size',#1615,#1615,0,#2,$,.F.);
#1620=EXPLICIT_ATTRIBUTE('attribute',#1615,#1615,1,#1487,$,.F.);
#1622=ENTITY_DEFINITION('conformance_class_mapping',$,(#1467),.F.,.T.,$,(#1467));
#1623=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1622)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1625=ENTITY_DEFINITION('module_mapping',$,(#1467),.F.,.T.,$,(#1467));
#1626=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1625)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1628=ENTITY_DEFINITION('application_protocol_mapping',$,(#1467),.F.,.T.,$,(#1467));
#1629=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1628)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1631=ENTITY_DEFINITION('attribute_mapping',$,(#1638),.F.,.T.,$,(#1638));
#1632=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1631)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1634=EXPLICIT_ATTRIBUTE('path',#1631,#1631,0,#1872,$,.T.);
#1635=EXPLICIT_ATTRIBUTE('domain',#1631,#1631,1,#1452,$,.T.);
#1637=DERIVED_ATTRIBUTE('target',#1631,#1631,0,#1074,$);
#1638=ENTITY_DEFINITION('generic_attribute_mapping',$,(),.F.,.F.,$,());
#1639=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1638)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1641=EXPLICIT_ATTRIBUTE('parent_entity',#1638,#1638,0,#1454,$,.F.);
#1643=EXPLICIT_ATTRIBUTE('source',#1638,#1638,1,#1129,$,.F.);
#1645=EXPLICIT_ATTRIBUTE('constraints',#1638,#1638,2,#1496,$,.T.);
#1647=EXPLICIT_ATTRIBUTE('data_type',#1638,#1638,3,#1873,$,.T.);
#1649=EXPLICIT_ATTRIBUTE('strong',#1638,#1638,4,#6,$,.F.);
#1651=ENTITY_DEFINITION('attribute_mapping_boolean_value',$,(#1681),.F.,.T.,$,(#1681));
#1652=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1651)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1654=EXPLICIT_ATTRIBUTE('mapped_value',#1651,#1651,0,#6,$,.F.);
#1656=ENTITY_DEFINITION('attribute_mapping_enumeration_value',$,(#1681),.F.,.T.,
     $,(#1681));
#1657=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1656)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1659=EXPLICIT_ATTRIBUTE('mapped_value',#1656,#1656,0,#7,$,.F.);
#1661=ENTITY_DEFINITION('attribute_mapping_int_value',$,(#1681),.F.,.T.,$,(#1681));
#1662=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1661)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1664=EXPLICIT_ATTRIBUTE('mapped_value',#1661,#1661,0,#2,$,.F.);
#1666=ENTITY_DEFINITION('attribute_mapping_logical_value',$,(#1681),.F.,.T.,$,(#1681));
#1667=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1666)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1669=EXPLICIT_ATTRIBUTE('mapped_value',#1666,#1666,0,#5,$,.F.);
#1671=ENTITY_DEFINITION('attribute_mapping_real_value',$,(#1681),.F.,.T.,$,(#1681));
#1672=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1671)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1674=EXPLICIT_ATTRIBUTE('mapped_value',#1671,#1671,0,#3,$,.F.);
#1676=ENTITY_DEFINITION('attribute_mapping_string_value',$,(#1681),.F.,.T.,$,(#1681));
#1677=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1676)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1679=EXPLICIT_ATTRIBUTE('mapped_value',#1676,#1676,0,#7,$,.F.);
#1681=ENTITY_DEFINITION('attribute_mapping_value',$,(#1638),.F.,.F.,$,(#1638));
#1682=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1681)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1684=ENTITY_DEFINITION('entity_mapping_relationship',$,(),.F.,.F.,$,());
#1685=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1684)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1687=EXPLICIT_ATTRIBUTE('relating',#1684,#1684,0,#1454,$,.F.);
#1689=EXPLICIT_ATTRIBUTE('related',#1684,#1684,1,#1454,$,.F.);
#1691=EXPLICIT_ATTRIBUTE('constraints',#1684,#1684,2,#1496,$,.T.);
#1693=EXPLICIT_ATTRIBUTE('path',#1684,#1684,3,#1874,$,.T.);
#1695=ENTITY_DEFINITION('sub_supertype_mapping',$,(#1684),.F.,.T.,$,(#1684));
#1696=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1695)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1698=ENTITY_DEFINITION('derived_variant_entity_mapping',$,(#1684),.F.,.T.,$,(#1684));
#1699=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1698)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1701=ENTITY_DEFINITION('type_constraint',$,(#1528),.F.,.T.,$,(#1528));
#1702=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1701)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1704=EXPLICIT_ATTRIBUTE('domain',#1701,#1701,0,#1193,$,.F.);
#1706=EXPLICIT_ATTRIBUTE('constraints',#1701,#1701,1,#1496,$,.T.);
#1708=ENTITY_DEFINITION('exact_type_constraint',$,(#1701),.F.,.T.,$,(#1701));
#1709=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1708)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1711=ENTITY_DEFINITION('intersection_constraint',$,(#1528),.F.,.T.,$,(#1528));
#1712=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1711)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1714=EXPLICIT_ATTRIBUTE('subpaths',#1711,#1711,0,#1875,$,.F.);
#1716=REFERENCE_FROM_SPECIFICATION(#1073,#1444,$);
#1717=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1102)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1718=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1106)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1719=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1109)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1720=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1111)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1721=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1115)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1722=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1117)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1723=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1119)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1724=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1123)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1725=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1129)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1726=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1135)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1727=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1137)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1728=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1141)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1729=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1143)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1730=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1146)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1731=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1148)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1732=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1153)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1733=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1156)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1734=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1158)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1735=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1163)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1736=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1166)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1737=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1168)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1738=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1172)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1739=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1176)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1740=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1179)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1741=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1183)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1742=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1185)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1743=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1190)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1744=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1193)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1745=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1202)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1746=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1205)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1747=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1207)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1748=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1211)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1749=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1216)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1750=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1218)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1751=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1221)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1752=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1224)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1753=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1226)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1754=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1228)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1755=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1233)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1756=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1235)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1757=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1239)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1758=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1243)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1759=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1248)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1760=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1250)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1761=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1252)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1762=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1254)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1763=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1256)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1764=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1258)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1765=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1261)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1766=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1266)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1767=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1274)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1768=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1277)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1769=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1279)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1770=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1281)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1771=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1285)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1772=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1291)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1773=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1297)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1774=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1302)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1775=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1305)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1776=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1309)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1777=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1312)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1778=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1314)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1779=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1316)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1780=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1322)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1781=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1328)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1782=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1330)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1783=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1332)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1784=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1335)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1785=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1337)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1786=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1340)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1787=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1344)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1788=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1346)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1789=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1348)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1790=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1350)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1791=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1357)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1792=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1363)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1793=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1366)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1794=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1370)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1795=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1372)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1796=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1374)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1797=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1378)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1798=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1382)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1799=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1389)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1800=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1391)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1801=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1395)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1802=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1401)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1803=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1404)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1804=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1409)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1805=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1411)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1806=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1414)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1807=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1418)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1808=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1423)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1809=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1427)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1810=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1431)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1811=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1435)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1812=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1439)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1813=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1074)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1814=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1076)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1815=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1078)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1816=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1080)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1817=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1082)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1818=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1084)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1819=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1086)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1820=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1088)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1821=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1090)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1822=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1092)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1823=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1094)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1824=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1096)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1825=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1098)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1826=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#1100)
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION()TYPE_DECLARATION());
#1839=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_mapping_path_select',(#1588,
     #1567,#1603,#1544,#1508,#1711,#1129));
#1840=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_attribute',(#1193,#1129));
#1841=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_mapping_domain_select',(#1305,
     #1454));
#1842=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_aggregate_member_constraint_select',(#1129,
     #1567,#1508,#1544,#1603));
#1843=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_select',(#1129,#1567,#1508));
#1844=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_value_constraint_select',(#1129,
     #1508,#1603));
#1845=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_constraint_select',(#1536,#1539,#1567,
     #1129,#1593,#1711,#1701,#1531));
#1846=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_inverse_attribute_constraint_select',
     (#1129,#1544,#1508,#1603));
#1847=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_path_constraint_select',(#1508,#1567,#1544,
     #1711,#1129));
#1848=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_select_constraint_select',(#1129,#1508));
#1868=SET_TYPE('_SET_1_uof_mapping',#1480,#1972,$);
#1869=SET_TYPE('_SET_1_schema_mapping',#1467,#1973,$);
#1870=SET_TYPE('_SET_1_entity_mapping',#1454,#1974,$);
#1871=LIST_TYPE('_LIST_1_defined_type',#1163,#1999,$,.F.);
#1872=LIST_TYPE('_LIST_1_attribute_mapping_path_select',#1446,#2003,$,.F.);
#1873=LIST_TYPE('_LIST_1_named_type',#1305,#2007,$,.F.);
#1874=LIST_TYPE('_LIST_1_attribute_mapping_path_select',#1446,#2012,$,.F.);
#1875=SET_TYPE('_SET_2_constraint_select',#1496,#2015,$);
#1970=ONEOF_SUBTYPE_EXPRESSION((#1625,#1622,#1628),(#1625,#1622,#1628));
#1971=SUB_SUPERTYPE_CONSTRAINT($,#1467,#1467,$,#1970);
#1972=INTEGER_BOUND(1);
#1973=INTEGER_BOUND(1);
#1974=INTEGER_BOUND(1);
#1975=UNIQUENESS_RULE('ur1',(#1513,#1511),#1508);
#1976=UNIQUENESS_RULE('ur1',(#1583,#1542),#1515);
#1977=ONEOF_SUBTYPE_EXPRESSION((#1523,#1562,#1577,#1610,#1598,#1551,#1572),(#1523,
     #1562,#1577,#1610,#1598,#1551,#1572));
#1978=SUB_SUPERTYPE_CONSTRAINT($,#1518,#1518,$,#1977);
#1979=UNIQUENESS_RULE('ur1',(#1521),#1518);
#1980=UNIQUENESS_RULE('ur1',(#1521,#1526),#1523);
#1981=ONEOF_SUBTYPE_EXPRESSION((#1536,#1539,#1567,#1701,#1711,#1531,#1593),(#1536,
     #1539,#1567,#1701,#1711,#1531,#1593));
#1982=SUB_SUPERTYPE_CONSTRAINT($,#1528,#1528,$,#1981);
#1983=ONEOF_SUBTYPE_EXPRESSION((#1518,#1603,#1508,#1544),(#1518,#1603,#1508,#1544));
#1984=SUB_SUPERTYPE_CONSTRAINT($,#1536,#1536,$,#1983);
#1985=ONEOF_SUBTYPE_EXPRESSION((#1588,#1580),(#1588,#1580));
#1986=SUB_SUPERTYPE_CONSTRAINT($,#1539,#1539,$,#1985);
#1987=SUB_SUPERTYPE_CONSTRAINT($,#1544,#1544,$,#1988);
#1988=ANDOR_SUBTYPE_EXPRESSION((#1556),(#1556));
#1989=UNIQUENESS_RULE('ur1',(#1549,#1547),#1544);
#1990=UNIQUENESS_RULE('ur1',(#1521,#1554),#1551);
#1991=UNIQUENESS_RULE('ur1',(#1521,#1565),#1562);
#1992=UNIQUENESS_RULE('ur1',(#1570),#1567);
#1993=UNIQUENESS_RULE('ur1',(#1521,#1575),#1572);
#1994=ONEOF_SUBTYPE_EXPRESSION((#1515,#1585,#1559),(#1515,#1585,#1559));
#1995=SUB_SUPERTYPE_CONSTRAINT($,#1580,#1580,$,#1994);
#1996=UNIQUENESS_RULE('ur1',(#1583,#1542),#1585);
#1997=UNIQUENESS_RULE('ur1',(#1591,#1542),#1588);
#1998=UNIQUENESS_RULE('ur1',(#1521,#1601),#1598);
#1999=INTEGER_BOUND(1);
#2000=UNIQUENESS_RULE('ur1',(#1608,#1606),#1603);
#2001=UNIQUENESS_RULE('ur1',(#1521,#1613),#1610);
#2002=UNIQUENESS_RULE('ur1',(#1620,#1618),#1615);
#2003=INTEGER_BOUND(1);
#2005=ONEOF_SUBTYPE_EXPRESSION((#1631,#1681),(#1631,#1681));
#2006=SUB_SUPERTYPE_CONSTRAINT($,#1638,#1638,$,#2005);
#2007=INTEGER_BOUND(1);
#2008=ONEOF_SUBTYPE_EXPRESSION((#1671,#1656,#1666,#1661,#1651,#1676),(#1671,#1656,
     #1666,#1661,#1651,#1676));
#2009=SUB_SUPERTYPE_CONSTRAINT($,#1681,#1681,$,#2008);
#2010=ONEOF_SUBTYPE_EXPRESSION((#1695,#1698),(#1695,#1698));
#2011=SUB_SUPERTYPE_CONSTRAINT($,#1684,#1684,$,#2010);
#2012=INTEGER_BOUND(1);
#2013=SUB_SUPERTYPE_CONSTRAINT($,#1701,#1701,$,#2014);
#2014=ANDOR_SUBTYPE_EXPRESSION((#1708),(#1708));
#2015=INTEGER_BOUND(2);
#2018=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2016)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2021=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2019)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2024=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2022)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2027=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2025)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2030=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2028)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2033=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2031)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2036=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2034)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2039=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2037)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2042=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2040)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2045=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2043)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2048=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2046)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2051=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2049)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2054=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2052)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2057=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2055)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2060=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2058)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2063=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2061)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2066=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2064)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2069=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2067)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2072=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2070)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2075=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2073)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2078=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2076)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2081=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2079)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2084=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2082)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2087=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2085)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2090=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2088)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2093=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2091)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2096=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2094)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2099=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2097)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2102=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2100)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2105=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2103)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2108=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2106)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2111=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2109)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2114=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2112)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2117=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2115)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2120=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2118)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2123=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2121)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2126=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2124)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#2129=(DATA_TYPE_DECLARATION()DECLARATION(#1444,#1444,#2127)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
ENDSEC;
DATA('SDAI_DICTIONARY_SCHEMA_DICTIONARY_DATA',('EXTENDED_DICTIONARY_SCHEMA'));
#1=SCHEMA_DEFINITION('SDAI_DICTIONARY_SCHEMA',$);
#2=INTEGER_TYPE('_INTEGER');
#3=REAL_TYPE('_REAL',$);
#4=NUMBER_TYPE('_NUMBER');
#5=LOGICAL_TYPE('_LOGICAL');
#6=BOOLEAN_TYPE('_BOOLEAN');
#7=STRING_TYPE('_STRING',$,$);
#8=BINARY_TYPE('_BINARY',$,$);
#9=DATA_TYPE('_GENERIC');
#10=DATA_TYPE('_ENTITY');
#11=LIST_TYPE('_GENERALLIST_0_GENERIC',#9,#12,$,.F.);
#12=INTEGER_BOUND(0);
#13=SET_TYPE('_GENERALSET_0_GENERIC',#9,#12,$);
#14=SET_TYPE('_GENERALSET_0_STRING',#7,#12,$);
#15=BAG_TYPE('_GENERALBAG_0_GENERIC',#9,#12,$);
#16=AGGREGATION_TYPE('_AGGREGATE_GENERIC',#9);
#17=DEFINED_TYPE('base_type',$,#770);
#18=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#17)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#19=DEFINED_TYPE('constructed_type',$,#771);
#20=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#19)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#21=DEFINED_TYPE('declaration_type',$,#772);
#22=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#21)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#23=DEFINED_TYPE('documentation_object',$,#773);
#24=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#23)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#25=DEFINED_TYPE('entity_or_subtype_expression',$,#774);
#26=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#25)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#27=DEFINED_TYPE('entity_or_view_or_subtype_expression',$,#775);
#28=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#27)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#29=DEFINED_TYPE('explicit_or_derived',$,#776);
#30=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#29)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#31=DEFINED_TYPE('express_id',$,#7);
#32=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#31)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#33=DEFINED_TYPE('info_object_id',$,#7);
#34=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#33)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#35=DEFINED_TYPE('map_or_view_definition_select',$,#777);
#36=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#35)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#37=DEFINED_TYPE('schema_map_or_view_definition',$,#778);
#38=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#37)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#39=DEFINED_TYPE('entity_or_view_definition_or_simple_type',$,#779);
#40=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#39)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#41=DEFINED_TYPE('type_or_rule',$,#780);
#42=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#41)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#43=DEFINED_TYPE('underlying_type',$,#781);
#44=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#43)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#45=ENTITY_DEFINITION('aggregate_target_parameter',$,(#338),.F.,.T.,$,(#338));
#46=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#45)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#47=EXPLICIT_ATTRIBUTE('lower_bound',#45,#45,0,#86,$,.T.);
#48=EXPLICIT_ATTRIBUTE('upper_bound',#45,#45,1,#86,$,.T.);
#49=ENTITY_DEFINITION('aggregation_type',$,(#96),.F.,.T.,$,(#96));
#50=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#49)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#51=EXPLICIT_ATTRIBUTE('element_type',#49,#49,0,#96,$,.F.);
#52=ENTITY_DEFINITION('algorithm_declaration',$,(#101),.F.,.F.,$,(#101));
#53=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#52)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#54=ENTITY_DEFINITION('algorithm_definition',$,(),.F.,.F.,$,());
#55=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#54)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#56=EXPLICIT_ATTRIBUTE('name',#54,#54,0,#31,$,.F.);
#57=EXPLICIT_ATTRIBUTE('parameters',#54,#54,1,#792,$,.F.);
#58=ENTITY_DEFINITION('andor_subtype_expression',$,(#334),.F.,.T.,$,(#334));
#59=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#58)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#60=ENTITY_DEFINITION('and_subtype_expression',$,(#334),.F.,.T.,$,(#334));
#61=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#60)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#62=ENTITY_DEFINITION('annotation',$,(),.F.,.F.,$,());
#63=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#62)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#64=EXPLICIT_ATTRIBUTE('target',#62,#62,0,#23,$,.F.);
#65=EXPLICIT_ATTRIBUTE('values',#62,#62,1,#793,$,.F.);
#66=ENTITY_DEFINITION('array_type',$,(#49),.F.,.T.,$,(#49));
#67=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#66)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#68=EXPLICIT_ATTRIBUTE('lower_index',#66,#66,0,#86,$,.T.);
#69=EXPLICIT_ATTRIBUTE('upper_index',#66,#66,1,#86,$,.T.);
#70=EXPLICIT_ATTRIBUTE('unique_flag',#66,#66,2,#6,$,.F.);
#71=EXPLICIT_ATTRIBUTE('optional_flag',#66,#66,3,#6,$,.F.);
#72=ENTITY_DEFINITION('attribute',$,(),.F.,.F.,$,());
#73=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#72)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#74=EXPLICIT_ATTRIBUTE('name',#72,#72,0,#31,$,.F.);
#75=EXPLICIT_ATTRIBUTE('parent_entity',#72,#72,1,#136,$,.F.);
#76=EXPLICIT_ATTRIBUTE('parent',#72,#72,2,#145,$,.F.);
#77=EXPLICIT_ATTRIBUTE('order',#72,#72,3,#2,$,.T.);
#78=ENTITY_DEFINITION('bag_type',$,(#357),.F.,.T.,$,(#357));
#79=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#78)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#80=ENTITY_DEFINITION('binary_type',$,(#315),.F.,.T.,$,(#315));
#81=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#80)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#82=EXPLICIT_ATTRIBUTE('width',#80,#80,0,#86,$,.T.);
#83=EXPLICIT_ATTRIBUTE('fixed_width',#80,#80,1,#6,$,.F.);
#84=ENTITY_DEFINITION('boolean_type',$,(#315),.F.,.T.,$,(#315));
#85=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#84)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#86=ENTITY_DEFINITION('bound',$,(),.F.,.F.,$,());
#87=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#86)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#88=EXPLICIT_ATTRIBUTE('bound_value',#86,#86,0,#2,$,.F.);
#89=ENTITY_DEFINITION('constant_declaration',$,(#101),.F.,.T.,$,(#101));
#90=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#89)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#91=ENTITY_DEFINITION('constant_definition',$,(),.F.,.T.,$,());
#92=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#91)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#93=EXPLICIT_ATTRIBUTE('name',#91,#91,0,#31,$,.F.);
#94=EXPLICIT_ATTRIBUTE('domain',#91,#91,1,#17,$,.F.);
#95=EXPLICIT_ATTRIBUTE('constant_value',#91,#91,2,#17,$,.F.);
#96=ENTITY_DEFINITION('data_type',$,(),.F.,.T.,$,());
#97=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#96)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#98=EXPLICIT_ATTRIBUTE('name',#96,#96,0,#31,$,.F.);
#99=ENTITY_DEFINITION('data_type_declaration',$,(#101),.F.,.T.,$,(#101));
#100=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#99)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#101=ENTITY_DEFINITION('declaration',$,(),.F.,.F.,$,());
#102=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#101)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#103=EXPLICIT_ATTRIBUTE('parent_schema',#101,#101,0,#293,$,.F.);
#104=EXPLICIT_ATTRIBUTE('parent',#101,#101,1,#182,$,.F.);
#105=EXPLICIT_ATTRIBUTE('definition',#101,#101,2,#21,$,.F.);
#106=ENTITY_DEFINITION('defined_type',$,(#248),.F.,.T.,$,(#248));
#107=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#106)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#108=EXPLICIT_ATTRIBUTE('domain',#106,#106,0,#43,$,.F.);
#109=ENTITY_DEFINITION('dependent_map_definition',$,(#228),.F.,.T.,$,(#228));
#110=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#109)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#111=ENTITY_DEFINITION('dependent_map_partition',$,(#240),.F.,.T.,$,(#240));
#112=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#111)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#113=EXPLICIT_ATTRIBUTE('parent',#111,#111,$,#109,#242,.F.);
#114=INVERSE_ATTRIBUTE('source_parameters',#111,#111,$,#115,#244,#237,#841,$,.F.);
#115=ENTITY_DEFINITION('dependent_source_parameter',$,(#317),.F.,.T.,$,(#317));
#116=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#115)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#117=EXPLICIT_ATTRIBUTE('name',#115,#115,$,#31,#236,.F.);
#118=EXPLICIT_ATTRIBUTE('extent',#115,#115,$,#39,#238,.F.);
#119=ENTITY_DEFINITION('dependent_view_definition',$,(#370),.F.,.T.,$,(#370));
#120=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#119)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#121=EXPLICIT_ATTRIBUTE('domain',#119,#119,0,#17,$,.F.);
#122=ENTITY_DEFINITION('derived_attribute',$,(#72),.F.,.T.,$,(#72));
#123=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#122)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#124=EXPLICIT_ATTRIBUTE('domain',#122,#122,0,#17,$,.F.);
#125=EXPLICIT_ATTRIBUTE('redeclaring',#122,#122,1,#29,$,.T.);
#126=ENTITY_DEFINITION('documentation',$,(#62),.F.,.T.,$,(#62));
#127=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#126)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#128=ENTITY_DEFINITION('domain_equivalent_type',$,(),.F.,.T.,$,());
#129=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#128)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#130=EXPLICIT_ATTRIBUTE('external_type',#128,#128,0,#248,$,.F.);
#131=EXPLICIT_ATTRIBUTE('native_type',#128,#128,1,#248,$,.F.);
#132=EXPLICIT_ATTRIBUTE('owner',#128,#128,2,#171,$,.F.);
#133=ENTITY_DEFINITION('entity_declaration',$,(#99),.F.,.T.,$,(#99));
#134=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#133)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#135=EXPLICIT_ATTRIBUTE('definition',#133,#133,$,#136,#105,.F.);
#136=ENTITY_DEFINITION('entity_definition',$,(#145),.F.,.T.,$,(#145));
#137=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#136)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#138=EXPLICIT_ATTRIBUTE('complex',#136,#136,0,#6,$,.F.);
#139=EXPLICIT_ATTRIBUTE('instantiable',#136,#136,1,#6,$,.F.);
#140=EXPLICIT_ATTRIBUTE('independent',#136,#136,2,#6,$,.F.);
#141=EXPLICIT_ATTRIBUTE('supertypes',#136,#136,3,#794,$,.F.);
#142=INVERSE_ATTRIBUTE('attributes',#136,#136,0,#72,$,#76,#843,$,.F.);
#143=INVERSE_ATTRIBUTE('uniqueness_rules',#136,#136,1,#347,$,#351,#844,$,.F.);
#144=INVERSE_ATTRIBUTE('global_rules',#136,#136,2,#186,$,#189,#845,$,.F.);
#145=ENTITY_DEFINITION('entity_or_view_definition',$,(#248),.F.,.F.,$,(#248));
#146=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#145)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#147=EXPLICIT_ATTRIBUTE('generic_supertypes',#145,#145,0,#795,$,.F.);
#148=ENTITY_DEFINITION('entity_select_type',$,(#309),.F.,.T.,$,(#309));
#149=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#148)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#150=ENTITY_DEFINITION('enumeration_type',$,(#96),.F.,.T.,$,(#96));
#151=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#150)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#152=EXPLICIT_ATTRIBUTE('local_elements',#150,#150,0,#796,$,.T.);
#153=DERIVED_ATTRIBUTE('elements',#150,#150,0,#797,$);
#154=ENTITY_DEFINITION('explicit_attribute',$,(#72),.F.,.T.,$,(#72));
#155=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#154)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#156=EXPLICIT_ATTRIBUTE('domain',#154,#154,0,#17,$,.F.);
#157=EXPLICIT_ATTRIBUTE('redeclaring',#154,#154,1,#154,$,.T.);
#158=EXPLICIT_ATTRIBUTE('optional_flag',#154,#154,2,#6,$,.F.);
#159=ENTITY_DEFINITION('express_code',$,(#62),.F.,.T.,$,(#62));
#160=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#159)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#161=ENTITY_DEFINITION('extended_enumeration_type',$,(#150),.F.,.T.,$,(#150));
#162=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#161)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#163=EXPLICIT_ATTRIBUTE('is_based_on',#161,#161,0,#167,$,.F.);
#164=ENTITY_DEFINITION('extended_select_type',$,(#309),.F.,.T.,$,(#309));
#165=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#164)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#166=EXPLICIT_ATTRIBUTE('is_based_on',#164,#164,0,#169,$,.F.);
#167=ENTITY_DEFINITION('extensible_enumeration_type',$,(#150),.F.,.T.,$,(#150));
#168=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#167)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#169=ENTITY_DEFINITION('extensible_select_type',$,(#309),.F.,.T.,$,(#309));
#170=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#169)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#171=ENTITY_DEFINITION('external_schema',$,(),.F.,.T.,$,());
#172=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#171)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#173=EXPLICIT_ATTRIBUTE('definition',#171,#171,0,#293,$,.F.);
#174=EXPLICIT_ATTRIBUTE('native_schema',#171,#171,1,#293,$,.F.);
#175=INVERSE_ATTRIBUTE('for_types',#171,#171,0,#128,$,#132,#856,$,.F.);
#176=ENTITY_DEFINITION('function_declaration',$,(#52),.F.,.T.,$,(#52));
#177=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#176)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#178=ENTITY_DEFINITION('function_definition',$,(#54),.F.,.T.,$,(#54));
#179=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#178)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#180=EXPLICIT_ATTRIBUTE('return_type',#178,#178,0,#96,$,.F.);
#181=EXPLICIT_ATTRIBUTE('return_type_label',#178,#178,1,#31,$,.T.);
#182=ENTITY_DEFINITION('generic_schema_definition',$,(),.F.,.F.,$,());
#183=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#182)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#184=EXPLICIT_ATTRIBUTE('name',#182,#182,0,#31,$,.F.);
#185=EXPLICIT_ATTRIBUTE('identification',#182,#182,1,#33,$,.T.);
#186=ENTITY_DEFINITION('global_rule',$,(),.F.,.T.,$,());
#187=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#186)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#188=EXPLICIT_ATTRIBUTE('name',#186,#186,0,#31,$,.F.);
#189=EXPLICIT_ATTRIBUTE('entities',#186,#186,1,#798,$,.F.);
#190=INVERSE_ATTRIBUTE('where_rules',#186,#186,0,#382,$,#385,#861,$,.F.);
#191=ENTITY_DEFINITION('identified_by_parameter',$,(#234),.F.,.T.,$,(#234));
#192=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#191)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#193=ENTITY_DEFINITION('implicit_declaration',$,(#201),.F.,.T.,$,(#201));
#194=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#193)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#195=ENTITY_DEFINITION('independent_view_definition',$,(#370),.F.,.T.,$,(#370));
#196=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#195)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#197=ENTITY_DEFINITION('integer_bound',$,(#86),.F.,.T.,$,(#86));
#198=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#197)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#199=ENTITY_DEFINITION('integer_type',$,(#315),.F.,.T.,$,(#315));
#200=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#199)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#201=ENTITY_DEFINITION('interfaced_declaration',$,(#101),.F.,.F.,$,(#101));
#202=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#201)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#203=EXPLICIT_ATTRIBUTE('alias_name',#201,#201,0,#31,$,.T.);
#204=ENTITY_DEFINITION('interface_specification',$,(),.F.,.T.,$,());
#205=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#204)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#206=EXPLICIT_ATTRIBUTE('foreign_schema',#204,#204,0,#182,$,.F.);
#207=EXPLICIT_ATTRIBUTE('current_schema',#204,#204,1,#182,$,.F.);
#208=EXPLICIT_ATTRIBUTE('items',#204,#204,2,#799,$,.T.);
#209=ENTITY_DEFINITION('inverse_attribute',$,(#72),.F.,.T.,$,(#72));
#210=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#209)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#211=EXPLICIT_ATTRIBUTE('domain',#209,#209,0,#136,$,.F.);
#212=EXPLICIT_ATTRIBUTE('redeclaring',#209,#209,1,#209,$,.T.);
#213=EXPLICIT_ATTRIBUTE('inverted_attr',#209,#209,2,#154,$,.F.);
#214=EXPLICIT_ATTRIBUTE('min_cardinality',#209,#209,3,#86,$,.T.);
#215=EXPLICIT_ATTRIBUTE('max_cardinality',#209,#209,4,#86,$,.T.);
#216=EXPLICIT_ATTRIBUTE('duplicates',#209,#209,5,#6,$,.F.);
#217=ENTITY_DEFINITION('list_type',$,(#357),.F.,.T.,$,(#357));
#218=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#217)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#219=EXPLICIT_ATTRIBUTE('unique_flag',#217,#217,0,#6,$,.F.);
#220=ENTITY_DEFINITION('local_declaration',$,(#101),.F.,.T.,$,(#101));
#221=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#220)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#222=ENTITY_DEFINITION('logical_type',$,(#315),.F.,.T.,$,(#315));
#223=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#222)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#224=ENTITY_DEFINITION('map_declaration',$,(#99),.F.,.T.,$,(#99));
#225=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#224)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#226=EXPLICIT_ATTRIBUTE('parent',#224,#224,$,#300,#104,.F.);
#227=EXPLICIT_ATTRIBUTE('definition',#224,#224,$,#228,#105,.F.);
#228=ENTITY_DEFINITION('map_definition',$,(),.F.,.T.,$,());
#229=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#228)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#230=EXPLICIT_ATTRIBUTE('name',#228,#228,0,#31,$,.F.);
#231=EXPLICIT_ATTRIBUTE('super_type',#228,#228,1,#228,$,.F.);
#232=INVERSE_ATTRIBUTE('partitions',#228,#228,0,#245,$,#247,#865,$,.F.);
#233=INVERSE_ATTRIBUTE('target_parameters',#228,#228,1,#338,$,#341,#866,$,.F.);
#234=ENTITY_DEFINITION('map_or_view_input_parameter',$,(),.F.,.F.,$,());
#235=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#234)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#236=EXPLICIT_ATTRIBUTE('name',#234,#234,0,#31,$,.T.);
#237=EXPLICIT_ATTRIBUTE('parent',#234,#234,1,#240,$,.F.);
#238=EXPLICIT_ATTRIBUTE('extent',#234,#234,2,#96,$,.T.);
#239=EXPLICIT_ATTRIBUTE('order',#234,#234,3,#2,$,.F.);
#240=ENTITY_DEFINITION('map_or_view_partition',$,(),.F.,.F.,$,());
#241=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#240)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#242=EXPLICIT_ATTRIBUTE('parent',#240,#240,0,#35,$,.F.);
#243=EXPLICIT_ATTRIBUTE('name',#240,#240,1,#31,$,.F.);
#244=INVERSE_ATTRIBUTE('source_parameters',#240,#240,0,#317,$,#237,#871,$,.F.);
#245=ENTITY_DEFINITION('map_partition',$,(#240),.F.,.T.,$,(#240));
#246=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#245)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#247=EXPLICIT_ATTRIBUTE('parent',#245,#245,$,#228,#242,.F.);
#248=ENTITY_DEFINITION('named_type',$,(#96),.F.,.F.,$,(#96));
#249=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#248)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#250=EXPLICIT_ATTRIBUTE('short_name',#248,#248,0,#7,$,.T.);
#251=INVERSE_ATTRIBUTE('where_rules',#248,#248,0,#382,$,#385,#874,$,.F.);
#252=ENTITY_DEFINITION('non_extensible_select_type',$,(#309),.F.,.T.,$,(#309));
#253=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#252)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#254=EXPLICIT_ATTRIBUTE('local_selections',#252,#252,$,#800,#311,.F.);
#255=ENTITY_DEFINITION('number_type',$,(#315),.F.,.T.,$,(#315));
#256=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#255)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#257=ENTITY_DEFINITION('oneof_subtype_expression',$,(#334),.F.,.T.,$,(#334));
#258=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#257)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#259=ENTITY_DEFINITION('parameter',$,(),.F.,.T.,$,());
#260=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#259)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#261=EXPLICIT_ATTRIBUTE('name',#259,#259,0,#31,$,.F.);
#262=EXPLICIT_ATTRIBUTE('parameter_type',#259,#259,1,#96,$,.F.);
#263=EXPLICIT_ATTRIBUTE('var_type',#259,#259,2,#6,$,.F.);
#264=EXPLICIT_ATTRIBUTE('type_labels',#259,#259,3,#801,$,.T.);
#265=ENTITY_DEFINITION('population_dependent_bound',$,(#86),.F.,.T.,$,(#86));
#266=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#265)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#267=EXPLICIT_ATTRIBUTE('schema_name',#265,#265,0,#7,$,.F.);
#268=EXPLICIT_ATTRIBUTE('entity_name',#265,#265,1,#7,$,.F.);
#269=EXPLICIT_ATTRIBUTE('method_name',#265,#265,2,#7,$,.F.);
#270=DERIVED_ATTRIBUTE('bound_value',#265,#265,0,#2,#88);
#271=ENTITY_DEFINITION('procedure_declaration',$,(#52),.F.,.T.,$,(#52));
#272=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#271)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#273=ENTITY_DEFINITION('procedure_definition',$,(#54),.F.,.T.,$,(#54));
#274=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#273)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#275=ENTITY_DEFINITION('real_type',$,(#315),.F.,.T.,$,(#315));
#276=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#275)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#277=EXPLICIT_ATTRIBUTE('precision',#275,#275,0,#86,$,.T.);
#278=ENTITY_DEFINITION('referenced_declaration',$,(#201),.F.,.T.,$,(#201));
#279=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#278)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#280=ENTITY_DEFINITION('reference_from_specification',$,(#204),.F.,.T.,$,(#204));
#281=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#280)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#282=EXPLICIT_ATTRIBUTE('items',#280,#280,$,#802,#208,.T.);
#283=ENTITY_DEFINITION('reference_from_specification_as',$,(#280),.F.,.F.,$,(#280));
#284=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#283)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#285=EXPLICIT_ATTRIBUTE('current_schema',#283,#283,$,#300,#207,.F.);
#286=EXPLICIT_ATTRIBUTE('alias_name',#283,#283,0,#31,$,.T.);
#287=ENTITY_DEFINITION('reference_from_specification_as_source',$,(#283),.F.,.T.,
     $,(#283));
#288=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#287)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#289=ENTITY_DEFINITION('reference_from_specification_as_target',$,(#283),.F.,.T.,
     $,(#283));
#290=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#289)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#291=ENTITY_DEFINITION('rule_declaration',$,(#101),.F.,.T.,$,(#101));
#292=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#291)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#293=ENTITY_DEFINITION('schema_definition',$,(#182),.F.,.T.,$,(#182));
#294=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#293)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#295=INVERSE_ATTRIBUTE('entity_declarations',#293,#293,0,#133,$,#104,#881,$,.F.);
#296=INVERSE_ATTRIBUTE('type_declarations',#293,#293,1,#344,$,#104,#882,$,.F.);
#297=INVERSE_ATTRIBUTE('rule_declarations',#293,#293,2,#291,$,#104,#883,$,.F.);
#298=INVERSE_ATTRIBUTE('algorithm_declarations',#293,#293,3,#52,$,#104,#884,$,.F.);
#299=INVERSE_ATTRIBUTE('external_schemas',#293,#293,4,#171,$,#174,#885,$,.F.);
#300=ENTITY_DEFINITION('schema_map_definition',$,(#182),.F.,.T.,$,(#182));
#301=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#300)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#302=INVERSE_ATTRIBUTE('view_declarations',#300,#300,0,#366,$,#368,#886,$,.F.);
#303=INVERSE_ATTRIBUTE('map_declarations',#300,#300,1,#224,$,#226,#887,$,.F.);
#304=INVERSE_ATTRIBUTE('source_schema_specifications',#300,#300,2,#287,$,#285,#888,
     $,.F.);
#305=INVERSE_ATTRIBUTE('target_schema_specifications',#300,#300,3,#289,$,#285,#889,
     $,.F.);
#306=ENTITY_DEFINITION('schema_view_definition',$,(#182),.F.,.T.,$,(#182));
#307=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#306)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#308=INVERSE_ATTRIBUTE('view_declarations',#306,#306,0,#366,$,#368,#890,$,.F.);
#309=ENTITY_DEFINITION('select_type',$,(#96),.F.,.F.,$,(#96));
#310=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#309)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#311=EXPLICIT_ATTRIBUTE('local_selections',#309,#309,0,#803,$,.T.);
#312=DERIVED_ATTRIBUTE('selections',#309,#309,0,#804,$);
#313=ENTITY_DEFINITION('set_type',$,(#357),.F.,.T.,$,(#357));
#314=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#313)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#315=ENTITY_DEFINITION('simple_type',$,(#96),.F.,.F.,$,(#96));
#316=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#315)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#317=ENTITY_DEFINITION('source_parameter',$,(#234),.F.,.T.,$,(#234));
#318=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#317)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#319=EXPLICIT_ATTRIBUTE('name',#317,#317,$,#31,#236,.F.);
#320=EXPLICIT_ATTRIBUTE('extent',#317,#317,$,#145,#238,.F.);
#321=ENTITY_DEFINITION('string_type',$,(#315),.F.,.T.,$,(#315));
#322=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#321)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#323=EXPLICIT_ATTRIBUTE('width',#321,#321,0,#86,$,.T.);
#324=EXPLICIT_ATTRIBUTE('fixed_width',#321,#321,1,#6,$,.F.);
#325=ENTITY_DEFINITION('sub_supertype_constraint',$,(),.F.,.T.,$,());
#326=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#325)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#327=EXPLICIT_ATTRIBUTE('name',#325,#325,0,#31,$,.T.);
#328=EXPLICIT_ATTRIBUTE('super_type',#325,#325,1,#136,$,.F.);
#329=EXPLICIT_ATTRIBUTE('generic_supertype',#325,#325,2,#145,$,.F.);
#330=EXPLICIT_ATTRIBUTE('total_cover',#325,#325,3,#805,$,.T.);
#331=EXPLICIT_ATTRIBUTE('constraint',#325,#325,4,#334,$,.T.);
#332=ENTITY_DEFINITION('subtype_constraint_declaration',$,(#101),.F.,.T.,$,(#101));
#333=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#332)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#334=ENTITY_DEFINITION('subtype_expression',$,(),.F.,.F.,$,());
#335=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#334)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#336=EXPLICIT_ATTRIBUTE('operands',#334,#334,0,#806,$,.F.);
#337=EXPLICIT_ATTRIBUTE('generic_operands',#334,#334,1,#807,$,.F.);
#338=ENTITY_DEFINITION('target_parameter',$,(),.F.,.T.,$,());
#339=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#338)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#340=EXPLICIT_ATTRIBUTE('name',#338,#338,0,#31,$,.F.);
#341=EXPLICIT_ATTRIBUTE('parent',#338,#338,1,#228,$,.F.);
#342=EXPLICIT_ATTRIBUTE('extent',#338,#338,2,#136,$,.F.);
#343=EXPLICIT_ATTRIBUTE('order',#338,#338,3,#2,$,.F.);
#344=ENTITY_DEFINITION('type_declaration',$,(#99),.F.,.T.,$,(#99));
#345=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#344)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#346=EXPLICIT_ATTRIBUTE('definition',#344,#344,$,#106,#105,.F.);
#347=ENTITY_DEFINITION('uniqueness_rule',$,(),.F.,.T.,$,());
#348=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#347)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#349=EXPLICIT_ATTRIBUTE('label',#347,#347,0,#31,$,.T.);
#350=EXPLICIT_ATTRIBUTE('attributes',#347,#347,1,#808,$,.F.);
#351=EXPLICIT_ATTRIBUTE('parent_entity',#347,#347,2,#136,$,.F.);
#352=ENTITY_DEFINITION('used_declaration',$,(#201),.F.,.T.,$,(#201));
#353=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#352)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#354=ENTITY_DEFINITION('use_from_specification',$,(#204),.F.,.T.,$,(#204));
#355=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#354)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#356=EXPLICIT_ATTRIBUTE('items',#354,#354,$,#809,#208,.T.);
#357=ENTITY_DEFINITION('variable_size_aggregation_type',$,(#49),.F.,.F.,$,(#49));
#358=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#357)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#359=EXPLICIT_ATTRIBUTE('lower_bound',#357,#357,0,#86,$,.T.);
#360=EXPLICIT_ATTRIBUTE('upper_bound',#357,#357,1,#86,$,.T.);
#361=ENTITY_DEFINITION('view_attribute',$,(#72),.F.,.T.,$,(#72));
#362=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#361)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#363=EXPLICIT_ATTRIBUTE('domain',#361,#361,0,#17,$,.F.);
#364=EXPLICIT_ATTRIBUTE('optional_flag',#361,#361,1,#6,$,.F.);
#365=EXPLICIT_ATTRIBUTE('parent',#361,#361,$,#195,#76,.F.);
#366=ENTITY_DEFINITION('view_declaration',$,(#99),.F.,.T.,$,(#99));
#367=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#366)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#368=EXPLICIT_ATTRIBUTE('parent',#366,#366,$,#37,#104,.F.);
#369=EXPLICIT_ATTRIBUTE('definition',#366,#366,$,#370,#105,.F.);
#370=ENTITY_DEFINITION('view_definition',$,(#145),.F.,.F.,$,(#145));
#371=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#370)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#372=EXPLICIT_ATTRIBUTE('generic_supertypes',#370,#370,$,#810,#147,.F.);
#373=INVERSE_ATTRIBUTE('partitions',#370,#370,0,#374,$,#376,#911,$,.F.);
#374=ENTITY_DEFINITION('view_partition',$,(#240),.F.,.T.,$,(#240));
#375=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#374)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#376=EXPLICIT_ATTRIBUTE('parent',#374,#374,$,#370,#242,.F.);
#377=INVERSE_ATTRIBUTE('attribute',#374,#374,0,#378,$,#381,#912,$,.F.);
#378=ENTITY_DEFINITION('view_partition_attribute',$,(),.F.,.T.,$,());
#379=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#378)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#380=EXPLICIT_ATTRIBUTE('parent_view_attribute',#378,#378,0,#361,$,.F.);
#381=EXPLICIT_ATTRIBUTE('related_partition',#378,#378,1,#374,$,.F.);
#382=ENTITY_DEFINITION('where_rule',$,(),.F.,.T.,$,());
#383=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#382)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#384=EXPLICIT_ATTRIBUTE('label',#382,#382,0,#31,$,.T.);
#385=EXPLICIT_ATTRIBUTE('parent_item',#382,#382,1,#41,$,.F.);
#386=EXPLICIT_ATTRIBUTE('order',#382,#382,2,#2,$,.F.);
#770=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_base_type',(#315,#49,#248,#259));
#771=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_constructed_type',(#150,#309));
#772=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_declaration_type',(#248,#186,#54,#91,#228,
     #325));
#773=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_documentation_object',(#293,#91,#248,#72,
     #54,#186,#382));
#774=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_subtype_expression',(#136,#334));
#775=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_view_or_subtype_expression',
     (#145,#334));
#776=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_explicit_or_derived',(#154,#122));
#777=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_map_or_view_definition_select',(#228,#370));
#778=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_schema_map_or_view_definition',(#306,#300));
#779=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_view_definition_or_simple_type',
     (#145,#315));
#780=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_type_or_rule',(#248,#186));
#781=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_underlying_type',(#315,#49,#106,#19));
#792=LIST_TYPE('_LIST_0_parameter',#259,#825,$,.F.);
#793=LIST_TYPE('_LIST_1_STRING',#7,#828,$,.F.);
#794=LIST_TYPE('_LIST_0_UNIQUE_entity_definition',#136,#842,$,.T.);
#795=LIST_TYPE('_LIST_0_UNIQUE_entity_or_view_definition',#145,#848,$,.T.);
#796=LIST_TYPE('_LIST_0_UNIQUE_express_id',#31,#851,$,.T.);
#797=LIST_TYPE('_LIST_0_UNIQUE_express_id',#31,#852,$,.T.);
#798=LIST_TYPE('_LIST_1_entity_definition',#136,#860,$,.F.);
#799=SET_TYPE('_SET_1_interfaced_declaration',#201,#864,$);
#800=SET_TYPE('_SET_1_named_type',#248,#875,$);
#801=LIST_TYPE('_LIST_1_express_id',#31,#876,$,.F.);
#802=SET_TYPE('_SET_1_referenced_declaration',#278,#878,$);
#803=SET_TYPE('_SET_1_named_type',#248,#894,$);
#804=SET_TYPE('_SET_1_named_type',#248,#895,$);
#805=SET_TYPE('_SET_0_entity_definition',#136,#899,$);
#806=SET_TYPE('_SET_1_entity_or_subtype_expression',#25,#902,$);
#807=SET_TYPE('_SET_1_entity_or_view_or_subtype_expression',#27,#903,$);
#808=LIST_TYPE('_LIST_1_attribute',#72,#904,$,.F.);
#809=SET_TYPE('_SET_1_used_declaration',#352,#905,$);
#810=LIST_TYPE('_LIST_0_UNIQUE_view_definition',#370,#910,$,.T.);
#819=ONEOF_SUBTYPE_EXPRESSION((#357,#66),(#357,#66));
#820=SUB_SUPERTYPE_CONSTRAINT($,#49,#49,$,#819);
#821=ONEOF_SUBTYPE_EXPRESSION((#176,#271),(#176,#271));
#822=SUB_SUPERTYPE_CONSTRAINT($,#52,#52,$,#821);
#823=ONEOF_SUBTYPE_EXPRESSION((#178,#273),(#178,#273));
#824=SUB_SUPERTYPE_CONSTRAINT($,#54,#54,$,#823);
#825=INTEGER_BOUND(0);
#826=ONEOF_SUBTYPE_EXPRESSION((#126,#159),(#126,#159));
#827=SUB_SUPERTYPE_CONSTRAINT($,#62,#62,$,#826);
#828=INTEGER_BOUND(1);
#829=ONEOF_SUBTYPE_EXPRESSION((#122,#154,#209,#361),(#122,#154,#209,#361));
#830=SUB_SUPERTYPE_CONSTRAINT($,#72,#72,$,#829);
#831=ONEOF_SUBTYPE_EXPRESSION((#197,#265),(#197,#265));
#832=SUB_SUPERTYPE_CONSTRAINT($,#86,#86,$,#831);
#833=ONEOF_SUBTYPE_EXPRESSION((#248,#150,#309,#315,#49),(#248,#150,#309,#315,#49));
#834=SUB_SUPERTYPE_CONSTRAINT($,#96,#96,$,#833);
#835=ONEOF_SUBTYPE_EXPRESSION((#133,#344,#366),(#133,#344,#366));
#836=SUB_SUPERTYPE_CONSTRAINT($,#99,#99,$,#835);
#837=ONEOF_SUBTYPE_EXPRESSION((#201,#220),(#201,#220));
#838=ONEOF_SUBTYPE_EXPRESSION((#99,#291,#52,#89,#224,#332),(#99,#291,#52,#89,#224,
     #332));
#839=AND_SUBTYPE_EXPRESSION((#837,#838),(#837,#838));
#840=SUB_SUPERTYPE_CONSTRAINT($,#101,#101,$,#839);
#841=INTEGER_BOUND(0);
#842=INTEGER_BOUND(0);
#843=INTEGER_BOUND(0);
#844=INTEGER_BOUND(0);
#845=INTEGER_BOUND(0);
#846=ONEOF_SUBTYPE_EXPRESSION((#136,#370),(#136,#370));
#847=SUB_SUPERTYPE_CONSTRAINT($,#145,#145,$,#846);
#848=INTEGER_BOUND(0);
#849=ANDOR_SUBTYPE_EXPRESSION((#167,#161),(#167,#161));
#850=SUB_SUPERTYPE_CONSTRAINT($,#150,#150,$,#849);
#851=INTEGER_BOUND(0);
#852=INTEGER_BOUND(0);
#854=WHERE_RULE('wr1',#150,$);
#856=INTEGER_BOUND(1);
#857=ONEOF_SUBTYPE_EXPRESSION((#293,#306,#300),(#293,#306,#300));
#858=SUB_SUPERTYPE_CONSTRAINT($,#182,#182,$,#857);
#859=UNIQUENESS_RULE('ur1',(#185),#182);
#860=INTEGER_BOUND(1);
#861=INTEGER_BOUND(1);
#862=ONEOF_SUBTYPE_EXPRESSION((#193,#352,#278),(#193,#352,#278));
#863=SUB_SUPERTYPE_CONSTRAINT($,#201,#201,$,#862);
#864=INTEGER_BOUND(1);
#865=INTEGER_BOUND(1);
#866=INTEGER_BOUND(0);
#867=ONEOF_SUBTYPE_EXPRESSION((#191,#317),(#191,#317));
#868=SUB_SUPERTYPE_CONSTRAINT($,#234,#234,$,#867);
#869=ONEOF_SUBTYPE_EXPRESSION((#245,#111,#374),(#245,#111,#374));
#870=SUB_SUPERTYPE_CONSTRAINT($,#240,#240,$,#869);
#871=INTEGER_BOUND(0);
#872=ONEOF_SUBTYPE_EXPRESSION((#106,#145),(#106,#145));
#873=SUB_SUPERTYPE_CONSTRAINT($,#248,#248,$,#872);
#874=INTEGER_BOUND(0);
#875=INTEGER_BOUND(1);
#876=INTEGER_BOUND(1);
#878=INTEGER_BOUND(1);
#879=ONEOF_SUBTYPE_EXPRESSION((#287,#289),(#287,#289));
#880=SUB_SUPERTYPE_CONSTRAINT($,#283,#283,$,#879);
#881=INTEGER_BOUND(0);
#882=INTEGER_BOUND(0);
#883=INTEGER_BOUND(0);
#884=INTEGER_BOUND(0);
#885=INTEGER_BOUND(1);
#886=INTEGER_BOUND(0);
#887=INTEGER_BOUND(0);
#888=INTEGER_BOUND(1);
#889=INTEGER_BOUND(1);
#890=INTEGER_BOUND(0);
#891=ONEOF_SUBTYPE_EXPRESSION((#252,#169),(#252,#169));
#892=ANDOR_SUBTYPE_EXPRESSION((#891,#148,#164),(#891,#148,#164));
#893=SUB_SUPERTYPE_CONSTRAINT($,#309,#309,$,#892);
#894=INTEGER_BOUND(1);
#895=INTEGER_BOUND(1);
#897=ONEOF_SUBTYPE_EXPRESSION((#199,#255,#275,#84,#222,#80,#321),(#199,#255,#275,
     #84,#222,#80,#321));
#898=SUB_SUPERTYPE_CONSTRAINT($,#315,#315,$,#897);
#899=INTEGER_BOUND(0);
#900=ONEOF_SUBTYPE_EXPRESSION((#58,#60,#257),(#58,#60,#257));
#901=SUB_SUPERTYPE_CONSTRAINT($,#334,#334,$,#900);
#902=INTEGER_BOUND(1);
#903=INTEGER_BOUND(1);
#904=INTEGER_BOUND(1);
#905=INTEGER_BOUND(1);
#906=ONEOF_SUBTYPE_EXPRESSION((#78,#313,#217),(#78,#313,#217));
#907=SUB_SUPERTYPE_CONSTRAINT($,#357,#357,$,#906);
#908=ONEOF_SUBTYPE_EXPRESSION((#195,#119),(#195,#119));
#909=SUB_SUPERTYPE_CONSTRAINT($,#370,#370,$,#908);
#910=INTEGER_BOUND(0);
#911=INTEGER_BOUND(1);
#912=INTEGER_BOUND(0);
#959=ENTITY_DEFINITION('constant_declaration+implicit_declaration',$,(#89,#193),
     .T.,.T.,.T.,(#89,#193));
#960=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#959)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#962=ENTITY_DEFINITION('constant_declaration+local_declaration',$,(#89,#220),.T.,
     .T.,.T.,(#89,#220));
#963=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#962)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#965=ENTITY_DEFINITION('constant_declaration+referenced_declaration',$,(#89,#278),
     .T.,.T.,.T.,(#89,#278));
#966=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#965)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#968=ENTITY_DEFINITION('data_type_declaration+implicit_declaration',$,(#99,#193),
     .T.,.T.,.T.,(#99,#193));
#969=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#968)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#971=ENTITY_DEFINITION('data_type_declaration+local_declaration',$,(#99,#220),.T.,
     .T.,.T.,(#99,#220));
#972=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#971)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#974=ENTITY_DEFINITION('entity_declaration+implicit_declaration',$,(#133,#193),.T.,
     .T.,.T.,(#133,#193));
#975=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#974)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#977=ENTITY_DEFINITION('entity_declaration+local_declaration',$,(#133,#220),.T.,
     .T.,.T.,(#133,#220));
#978=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#977)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#980=ENTITY_DEFINITION('entity_declaration+referenced_declaration',$,(#133,#278),
     .T.,.T.,.T.,(#133,#278));
#981=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#980)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#983=ENTITY_DEFINITION('entity_declaration+used_declaration',$,(#133,#352),.T.,.T.,
     .T.,(#133,#352));
#984=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#983)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#986=ENTITY_DEFINITION('entity_select_type+extended_select_type+extensible_select_type',
     $,(#148,#164,#169),.T.,.T.,.T.,(#148,#164,#169));
#987=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#986)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#989=ENTITY_DEFINITION('entity_select_type+extended_select_type+non_extensible_select_type',
     $,(#148,#164,#252),.T.,.T.,.T.,(#148,#164,#252));
#990=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#989)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#992=ENTITY_DEFINITION('entity_select_type+extensible_select_type',$,(#148,#169),
     .T.,.T.,.T.,(#148,#169));
#993=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#992)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#995=ENTITY_DEFINITION('entity_select_type+non_extensible_select_type',$,(#148,#252),
     .T.,.T.,.T.,(#148,#252));
#996=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#995)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#998=ENTITY_DEFINITION('extended_enumeration_type+extensible_enumeration_type',$,
     (#161,#167),.T.,.T.,.T.,(#161,#167));
#999=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#998)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1001=ENTITY_DEFINITION('extended_select_type+extensible_select_type',$,(#164,#169),
     .T.,.T.,.T.,(#164,#169));
#1002=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1001)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1004=ENTITY_DEFINITION('extended_select_type+non_extensible_select_type',$,(#164,
     #252),.T.,.T.,.T.,(#164,#252));
#1005=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1004)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1007=ENTITY_DEFINITION('function_declaration+implicit_declaration',$,(#176,#193),
     .T.,.T.,.T.,(#176,#193));
#1008=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1007)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1010=ENTITY_DEFINITION('function_declaration+local_declaration',$,(#176,#220),.T.,
     .T.,.T.,(#176,#220));
#1011=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1010)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1013=ENTITY_DEFINITION('function_declaration+referenced_declaration',$,(#176,#278),
     .T.,.T.,.T.,(#176,#278));
#1014=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1013)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1016=ENTITY_DEFINITION('implicit_declaration+map_declaration',$,(#193,#224),.T.,
     .T.,.T.,(#193,#224));
#1017=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1016)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1019=ENTITY_DEFINITION('implicit_declaration+procedure_declaration',$,(#193,#271),
     .T.,.T.,.T.,(#193,#271));
#1020=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1019)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1022=ENTITY_DEFINITION('implicit_declaration+rule_declaration',$,(#193,#291),.T.,
     .T.,.T.,(#193,#291));
#1023=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1022)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1025=ENTITY_DEFINITION('implicit_declaration+subtype_constraint_declaration',$,
     (#193,#332),.T.,.T.,.T.,(#193,#332));
#1026=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1025)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1028=ENTITY_DEFINITION('implicit_declaration+type_declaration',$,(#193,#344),.T.,
     .T.,.T.,(#193,#344));
#1029=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1028)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1031=ENTITY_DEFINITION('implicit_declaration+view_declaration',$,(#193,#366),.T.,
     .T.,.T.,(#193,#366));
#1032=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1031)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1034=ENTITY_DEFINITION('local_declaration+map_declaration',$,(#220,#224),.T.,.T.,
     .T.,(#220,#224));
#1035=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1034)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1037=ENTITY_DEFINITION('local_declaration+procedure_declaration',$,(#220,#271),
     .T.,.T.,.T.,(#220,#271));
#1038=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1037)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1040=ENTITY_DEFINITION('local_declaration+rule_declaration',$,(#220,#291),.T.,.T.,
     .T.,(#220,#291));
#1041=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1040)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1043=ENTITY_DEFINITION('local_declaration+subtype_constraint_declaration',$,(#220,
     #332),.T.,.T.,.T.,(#220,#332));
#1044=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1043)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1046=ENTITY_DEFINITION('local_declaration+type_declaration',$,(#220,#344),.T.,.T.,
     .T.,(#220,#344));
#1047=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1046)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1049=ENTITY_DEFINITION('local_declaration+view_declaration',$,(#220,#366),.T.,.T.,
     .T.,(#220,#366));
#1050=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1049)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1052=ENTITY_DEFINITION('map_declaration+referenced_declaration',$,(#224,#278),.T.,
     .T.,.T.,(#224,#278));
#1053=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1052)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1055=ENTITY_DEFINITION('map_declaration+used_declaration',$,(#224,#352),.T.,.T.,
     .T.,(#224,#352));
#1056=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1055)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1058=ENTITY_DEFINITION('procedure_declaration+referenced_declaration',$,(#271,#278),
     .T.,.T.,.T.,(#271,#278));
#1059=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1058)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1061=ENTITY_DEFINITION('referenced_declaration+type_declaration',$,(#278,#344),
     .T.,.T.,.T.,(#278,#344));
#1062=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1061)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1064=ENTITY_DEFINITION('referenced_declaration+view_declaration',$,(#278,#366),
     .T.,.T.,.T.,(#278,#366));
#1065=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1064)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1067=ENTITY_DEFINITION('type_declaration+used_declaration',$,(#344,#352),.T.,.T.,
     .T.,(#344,#352));
#1068=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1067)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#1070=ENTITY_DEFINITION('used_declaration+view_declaration',$,(#352,#366),.T.,.T.,
     .T.,(#352,#366));
#1071=(DATA_TYPE_DECLARATION()DECLARATION(#1,#1,#1070)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
ENDSEC;
DATA('SDAI_MAPPING_SCHEMA_DICTIONARY_DATA',('EXTENDED_DICTIONARY_SCHEMA'));
#387=SCHEMA_DEFINITION('SDAI_MAPPING_SCHEMA',$);
#389=DEFINED_TYPE('attribute_mapping_path_select',$,#782);
#390=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#389)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#392=DEFINED_TYPE('entity_or_attribute',$,#783);
#393=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#392)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#395=DEFINED_TYPE('attribute_mapping_domain_select',$,#784);
#396=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#395)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#397=ENTITY_DEFINITION('entity_mapping',$,(),.F.,.T.,$,());
#398=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#397)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#400=EXPLICIT_ATTRIBUTE('source',#397,#397,0,#136,$,.F.);
#402=EXPLICIT_ATTRIBUTE('target',#397,#397,1,#392,$,.F.);
#404=EXPLICIT_ATTRIBUTE('constraints',#397,#397,2,#439,$,.T.);
#406=EXPLICIT_ATTRIBUTE('entry_point',#397,#397,3,#6,$,.F.);
#408=EXPLICIT_ATTRIBUTE('strong_users',#397,#397,4,#6,$,.F.);
#410=ENTITY_DEFINITION('schema_mapping',$,(),.F.,.T.,$,());
#411=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#410)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#413=EXPLICIT_ATTRIBUTE('source',#410,#410,0,#293,$,.F.);
#415=EXPLICIT_ATTRIBUTE('target',#410,#410,1,#293,$,.F.);
#417=EXPLICIT_ATTRIBUTE('uofs',#410,#410,2,#811,$,.F.);
#419=EXPLICIT_ATTRIBUTE('id',#410,#410,3,#7,$,.F.);
#421=EXPLICIT_ATTRIBUTE('components',#410,#410,4,#812,$,.T.);
#423=ENTITY_DEFINITION('uof_mapping',$,(),.F.,.T.,$,());
#424=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#423)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#426=EXPLICIT_ATTRIBUTE('name',#423,#423,0,#7,$,.F.);
#428=EXPLICIT_ATTRIBUTE('mappings',#423,#423,1,#813,$,.F.);
#430=DEFINED_TYPE('aggregate_member_constraint_select',$,#785);
#431=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#430)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#433=DEFINED_TYPE('attribute_select',$,#786);
#434=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#433)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#436=DEFINED_TYPE('attribute_value_constraint_select',$,#787);
#437=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#436)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#439=DEFINED_TYPE('constraint_select',$,#788);
#440=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#439)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#442=DEFINED_TYPE('inverse_attribute_constraint_select',$,#789);
#443=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#442)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#445=DEFINED_TYPE('path_constraint_select',$,#790);
#446=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#445)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#448=DEFINED_TYPE('select_constraint_select',$,#791);
#449=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#448)LOCAL_DECLARATION()
     TYPE_DECLARATION());
#451=ENTITY_DEFINITION('aggregate_member_constraint',$,(#479),.F.,.T.,$,(#479));
#452=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#451)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#454=EXPLICIT_ATTRIBUTE('member',#451,#451,0,#2,$,.T.);
#456=EXPLICIT_ATTRIBUTE('attribute',#451,#451,1,#430,$,.F.);
#458=ENTITY_DEFINITION('and_constraint_relationship',$,(#523),.F.,.T.,$,(#523));
#459=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#458)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#461=ENTITY_DEFINITION('attribute_value_constraint',$,(#479),.F.,.T.,$,(#479));
#462=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#461)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#464=EXPLICIT_ATTRIBUTE('attribute',#461,#461,0,#436,$,.F.);
#466=ENTITY_DEFINITION('boolean_constraint',$,(#461),.F.,.T.,$,(#461));
#467=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#466)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#469=EXPLICIT_ATTRIBUTE('constraint_value',#466,#466,0,#6,$,.F.);
#471=ENTITY_DEFINITION('constraint',$,(),.F.,.F.,$,());
#472=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#471)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#474=ENTITY_DEFINITION('negation_constraint',$,(#471),.F.,.T.,$,(#471));
#475=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#474)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#477=EXPLICIT_ATTRIBUTE('constraints',#474,#474,0,#439,$,.F.);
#479=ENTITY_DEFINITION('constraint_attribute',$,(#471),.F.,.F.,$,(#471));
#480=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#479)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#482=ENTITY_DEFINITION('constraint_relationship',$,(#471),.F.,.F.,$,(#471));
#483=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#482)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#485=EXPLICIT_ATTRIBUTE('element2',#482,#482,0,#439,$,.F.);
#487=ENTITY_DEFINITION('entity_constraint',$,(#479),.F.,.T.,$,(#479));
#488=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#487)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#490=EXPLICIT_ATTRIBUTE('domain',#487,#487,0,#136,$,.F.);
#492=EXPLICIT_ATTRIBUTE('attribute',#487,#487,1,#433,$,.F.);
#494=ENTITY_DEFINITION('enumeration_constraint',$,(#461),.F.,.T.,$,(#461));
#495=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#494)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#497=EXPLICIT_ATTRIBUTE('constraint_value',#494,#494,0,#31,$,.F.);
#499=ENTITY_DEFINITION('exact_entity_constraint',$,(#487),.F.,.T.,$,(#487));
#500=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#499)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#502=ENTITY_DEFINITION('instance_equal',$,(#523),.F.,.T.,$,(#523));
#503=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#502)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#505=ENTITY_DEFINITION('integer_constraint',$,(#461),.F.,.T.,$,(#461));
#506=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#505)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#508=EXPLICIT_ATTRIBUTE('constraint_value',#505,#505,0,#2,$,.F.);
#510=ENTITY_DEFINITION('inverse_attribute_constraint',$,(#471),.F.,.T.,$,(#471));
#511=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#510)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#513=EXPLICIT_ATTRIBUTE('inverted_attribute',#510,#510,0,#442,$,.F.);
#515=ENTITY_DEFINITION('logical_constraint',$,(#461),.F.,.T.,$,(#461));
#516=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#515)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#518=EXPLICIT_ATTRIBUTE('constraint_value',#515,#515,0,#5,$,.F.);
#520=ENTITY_DEFINITION('non_optional_constraint',$,(#461),.F.,.T.,$,(#461));
#521=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#520)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#523=ENTITY_DEFINITION('instance_constraint',$,(#482),.F.,.F.,$,(#482));
#524=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#523)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#526=EXPLICIT_ATTRIBUTE('element1',#523,#523,0,#439,$,.F.);
#528=ENTITY_DEFINITION('or_constraint_relationship',$,(#523),.F.,.T.,$,(#523));
#529=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#528)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#531=ENTITY_DEFINITION('path_constraint',$,(#482),.F.,.T.,$,(#482));
#532=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#531)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#534=EXPLICIT_ATTRIBUTE('element1',#531,#531,0,#445,$,.F.);
#536=ENTITY_DEFINITION('end_of_path_constraint',$,(#471),.F.,.T.,$,(#471));
#537=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#536)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#539=EXPLICIT_ATTRIBUTE('constraints',#536,#536,0,#439,$,.F.);
#541=ENTITY_DEFINITION('real_constraint',$,(#461),.F.,.T.,$,(#461));
#542=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#541)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#544=EXPLICIT_ATTRIBUTE('constraint_value',#541,#541,0,#3,$,.F.);
#546=ENTITY_DEFINITION('select_constraint',$,(#479),.F.,.T.,$,(#479));
#547=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#546)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#549=EXPLICIT_ATTRIBUTE('data_type',#546,#546,0,#814,$,.F.);
#551=EXPLICIT_ATTRIBUTE('attribute',#546,#546,1,#448,$,.F.);
#553=ENTITY_DEFINITION('string_constraint',$,(#461),.F.,.T.,$,(#461));
#554=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#553)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#556=EXPLICIT_ATTRIBUTE('constraint_value',#553,#553,0,#7,$,.F.);
#558=ENTITY_DEFINITION('aggregate_size_constraint',$,(#479),.F.,.T.,$,(#479));
#559=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#558)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#561=EXPLICIT_ATTRIBUTE('size',#558,#558,0,#2,$,.F.);
#563=EXPLICIT_ATTRIBUTE('attribute',#558,#558,1,#430,$,.F.);
#565=ENTITY_DEFINITION('conformance_class_mapping',$,(#410),.F.,.T.,$,(#410));
#566=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#565)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#568=ENTITY_DEFINITION('module_mapping',$,(#410),.F.,.T.,$,(#410));
#569=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#568)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#571=ENTITY_DEFINITION('application_protocol_mapping',$,(#410),.F.,.T.,$,(#410));
#572=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#571)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#574=ENTITY_DEFINITION('attribute_mapping',$,(#581),.F.,.T.,$,(#581));
#575=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#574)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#577=EXPLICIT_ATTRIBUTE('path',#574,#574,0,#815,$,.T.);
#578=EXPLICIT_ATTRIBUTE('domain',#574,#574,1,#395,$,.T.);
#580=DERIVED_ATTRIBUTE('target',#574,#574,0,#17,$);
#581=ENTITY_DEFINITION('generic_attribute_mapping',$,(),.F.,.F.,$,());
#582=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#581)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#584=EXPLICIT_ATTRIBUTE('parent_entity',#581,#581,0,#397,$,.F.);
#586=EXPLICIT_ATTRIBUTE('source',#581,#581,1,#72,$,.F.);
#588=EXPLICIT_ATTRIBUTE('constraints',#581,#581,2,#439,$,.T.);
#590=EXPLICIT_ATTRIBUTE('data_type',#581,#581,3,#816,$,.T.);
#592=EXPLICIT_ATTRIBUTE('strong',#581,#581,4,#6,$,.F.);
#594=ENTITY_DEFINITION('attribute_mapping_boolean_value',$,(#624),.F.,.T.,$,(#624));
#595=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#594)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#597=EXPLICIT_ATTRIBUTE('mapped_value',#594,#594,0,#6,$,.F.);
#599=ENTITY_DEFINITION('attribute_mapping_enumeration_value',$,(#624),.F.,.T.,$,
     (#624));
#600=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#599)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#602=EXPLICIT_ATTRIBUTE('mapped_value',#599,#599,0,#7,$,.F.);
#604=ENTITY_DEFINITION('attribute_mapping_int_value',$,(#624),.F.,.T.,$,(#624));
#605=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#604)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#607=EXPLICIT_ATTRIBUTE('mapped_value',#604,#604,0,#2,$,.F.);
#609=ENTITY_DEFINITION('attribute_mapping_logical_value',$,(#624),.F.,.T.,$,(#624));
#610=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#609)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#612=EXPLICIT_ATTRIBUTE('mapped_value',#609,#609,0,#5,$,.F.);
#614=ENTITY_DEFINITION('attribute_mapping_real_value',$,(#624),.F.,.T.,$,(#624));
#615=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#614)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#617=EXPLICIT_ATTRIBUTE('mapped_value',#614,#614,0,#3,$,.F.);
#619=ENTITY_DEFINITION('attribute_mapping_string_value',$,(#624),.F.,.T.,$,(#624));
#620=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#619)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#622=EXPLICIT_ATTRIBUTE('mapped_value',#619,#619,0,#7,$,.F.);
#624=ENTITY_DEFINITION('attribute_mapping_value',$,(#581),.F.,.F.,$,(#581));
#625=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#624)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#627=ENTITY_DEFINITION('entity_mapping_relationship',$,(),.F.,.F.,$,());
#628=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#627)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#630=EXPLICIT_ATTRIBUTE('relating',#627,#627,0,#397,$,.F.);
#632=EXPLICIT_ATTRIBUTE('related',#627,#627,1,#397,$,.F.);
#634=EXPLICIT_ATTRIBUTE('constraints',#627,#627,2,#439,$,.T.);
#636=EXPLICIT_ATTRIBUTE('path',#627,#627,3,#817,$,.T.);
#638=ENTITY_DEFINITION('sub_supertype_mapping',$,(#627),.F.,.T.,$,(#627));
#639=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#638)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#641=ENTITY_DEFINITION('derived_variant_entity_mapping',$,(#627),.F.,.T.,$,(#627));
#642=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#641)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#644=ENTITY_DEFINITION('type_constraint',$,(#471),.F.,.T.,$,(#471));
#645=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#644)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#647=EXPLICIT_ATTRIBUTE('domain',#644,#644,0,#136,$,.F.);
#649=EXPLICIT_ATTRIBUTE('constraints',#644,#644,1,#439,$,.T.);
#651=ENTITY_DEFINITION('exact_type_constraint',$,(#644),.F.,.T.,$,(#644));
#652=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#651)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#654=ENTITY_DEFINITION('intersection_constraint',$,(#471),.F.,.T.,$,(#471));
#655=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#654)ENTITY_DECLARATION()
     LOCAL_DECLARATION());
#657=EXPLICIT_ATTRIBUTE('subpaths',#654,#654,0,#818,$,.F.);
#659=REFERENCE_FROM_SPECIFICATION(#1,#387,$);
#660=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#45)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#661=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#49)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#662=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#52)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#663=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#54)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#664=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#58)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#665=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#60)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#666=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#62)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#667=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#66)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#668=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#72)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#669=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#78)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#670=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#80)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#671=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#84)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#672=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#86)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#673=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#89)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#674=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#91)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#675=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#96)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#676=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#99)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#677=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#101)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#678=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#106)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#679=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#109)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#680=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#111)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#681=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#115)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#682=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#119)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#683=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#122)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#684=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#126)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#685=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#128)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#686=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#133)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#687=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#136)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#688=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#145)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#689=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#148)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#690=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#150)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#691=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#154)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#692=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#159)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#693=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#161)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#694=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#164)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#695=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#167)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#696=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#169)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#697=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#171)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#698=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#176)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#699=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#178)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#700=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#182)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#701=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#186)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#702=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#191)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#703=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#193)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#704=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#195)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#705=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#197)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#706=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#199)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#707=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#201)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#708=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#204)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#709=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#209)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#710=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#217)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#711=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#220)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#712=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#222)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#713=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#224)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#714=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#228)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#715=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#234)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#716=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#240)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#717=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#245)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#718=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#248)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#719=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#252)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#720=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#255)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#721=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#257)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#722=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#259)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#723=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#265)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#724=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#271)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#725=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#273)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#726=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#275)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#727=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#278)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#728=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#280)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#729=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#283)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#730=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#287)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#731=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#289)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#732=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#291)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#733=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#293)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#734=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#300)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#735=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#306)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#736=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#309)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#737=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#313)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#738=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#315)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#739=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#317)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#740=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#321)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#741=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#325)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#742=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#332)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#743=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#334)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#744=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#338)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#745=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#344)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#746=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#347)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#747=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#352)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#748=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#354)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#749=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#357)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#750=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#361)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#751=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#366)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#752=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#370)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#753=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#374)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#754=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#378)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#755=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#382)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#756=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#17)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#757=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#19)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#758=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#21)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#759=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#23)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#760=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#25)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#761=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#27)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#762=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#29)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#763=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#31)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#764=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#33)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#765=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#35)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#766=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#37)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#767=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#39)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#768=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#41)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#769=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#43)INTERFACED_DECLARATION($)
     REFERENCED_DECLARATION()TYPE_DECLARATION());
#782=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_mapping_path_select',(#531,#510,
     #546,#487,#451,#654,#72));
#783=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_entity_or_attribute',(#136,#72));
#784=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_mapping_domain_select',(#248,
     #397));
#785=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_aggregate_member_constraint_select',(#72,
     #510,#451,#487,#546));
#786=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_select',(#72,#510,#451));
#787=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_attribute_value_constraint_select',(#72,
     #451,#546));
#788=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_constraint_select',(#479,#482,#510,#72,
     #536,#654,#644,#474));
#789=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_inverse_attribute_constraint_select',(#72,
     #487,#451,#546));
#790=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_path_constraint_select',(#451,#510,#487,
     #654,#72));
#791=NON_EXTENSIBLE_SELECT_TYPE('_SELECT_select_constraint_select',(#72,#451));
#811=SET_TYPE('_SET_1_uof_mapping',#423,#915,$);
#812=SET_TYPE('_SET_1_schema_mapping',#410,#916,$);
#813=SET_TYPE('_SET_1_entity_mapping',#397,#917,$);
#814=LIST_TYPE('_LIST_1_defined_type',#106,#942,$,.F.);
#815=LIST_TYPE('_LIST_1_attribute_mapping_path_select',#389,#946,$,.F.);
#816=LIST_TYPE('_LIST_1_named_type',#248,#950,$,.F.);
#817=LIST_TYPE('_LIST_1_attribute_mapping_path_select',#389,#955,$,.F.);
#818=SET_TYPE('_SET_2_constraint_select',#439,#958,$);
#913=ONEOF_SUBTYPE_EXPRESSION((#568,#565,#571),(#568,#565,#571));
#914=SUB_SUPERTYPE_CONSTRAINT($,#410,#410,$,#913);
#915=INTEGER_BOUND(1);
#916=INTEGER_BOUND(1);
#917=INTEGER_BOUND(1);
#918=UNIQUENESS_RULE('ur1',(#456,#454),#451);
#919=UNIQUENESS_RULE('ur1',(#526,#485),#458);
#920=ONEOF_SUBTYPE_EXPRESSION((#466,#505,#520,#553,#541,#494,#515),(#466,#505,#520,
     #553,#541,#494,#515));
#921=SUB_SUPERTYPE_CONSTRAINT($,#461,#461,$,#920);
#922=UNIQUENESS_RULE('ur1',(#464),#461);
#923=UNIQUENESS_RULE('ur1',(#464,#469),#466);
#924=ONEOF_SUBTYPE_EXPRESSION((#479,#482,#510,#644,#654,#474,#536),(#479,#482,#510,
     #644,#654,#474,#536));
#925=SUB_SUPERTYPE_CONSTRAINT($,#471,#471,$,#924);
#926=ONEOF_SUBTYPE_EXPRESSION((#461,#546,#451,#487),(#461,#546,#451,#487));
#927=SUB_SUPERTYPE_CONSTRAINT($,#479,#479,$,#926);
#928=ONEOF_SUBTYPE_EXPRESSION((#531,#523),(#531,#523));
#929=SUB_SUPERTYPE_CONSTRAINT($,#482,#482,$,#928);
#930=SUB_SUPERTYPE_CONSTRAINT($,#487,#487,$,#931);
#931=ANDOR_SUBTYPE_EXPRESSION((#499),(#499));
#932=UNIQUENESS_RULE('ur1',(#492,#490),#487);
#933=UNIQUENESS_RULE('ur1',(#464,#497),#494);
#934=UNIQUENESS_RULE('ur1',(#464,#508),#505);
#935=UNIQUENESS_RULE('ur1',(#513),#510);
#936=UNIQUENESS_RULE('ur1',(#464,#518),#515);
#937=ONEOF_SUBTYPE_EXPRESSION((#458,#528,#502),(#458,#528,#502));
#938=SUB_SUPERTYPE_CONSTRAINT($,#523,#523,$,#937);
#939=UNIQUENESS_RULE('ur1',(#526,#485),#528);
#940=UNIQUENESS_RULE('ur1',(#534,#485),#531);
#941=UNIQUENESS_RULE('ur1',(#464,#544),#541);
#942=INTEGER_BOUND(1);
#943=UNIQUENESS_RULE('ur1',(#551,#549),#546);
#944=UNIQUENESS_RULE('ur1',(#464,#556),#553);
#945=UNIQUENESS_RULE('ur1',(#563,#561),#558);
#946=INTEGER_BOUND(1);
#948=ONEOF_SUBTYPE_EXPRESSION((#574,#624),(#574,#624));
#949=SUB_SUPERTYPE_CONSTRAINT($,#581,#581,$,#948);
#950=INTEGER_BOUND(1);
#951=ONEOF_SUBTYPE_EXPRESSION((#614,#599,#609,#604,#594,#619),(#614,#599,#609,#604,
     #594,#619));
#952=SUB_SUPERTYPE_CONSTRAINT($,#624,#624,$,#951);
#953=ONEOF_SUBTYPE_EXPRESSION((#638,#641),(#638,#641));
#954=SUB_SUPERTYPE_CONSTRAINT($,#627,#627,$,#953);
#955=INTEGER_BOUND(1);
#956=SUB_SUPERTYPE_CONSTRAINT($,#644,#644,$,#957);
#957=ANDOR_SUBTYPE_EXPRESSION((#651),(#651));
#958=INTEGER_BOUND(2);
#961=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#959)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#964=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#962)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#967=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#965)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#970=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#968)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#973=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#971)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#976=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#974)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#979=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#977)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#982=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#980)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#985=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#983)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#988=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#986)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#991=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#989)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#994=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#992)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#997=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#995)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1000=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#998)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1003=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1001)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1006=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1004)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1009=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1007)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1012=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1010)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1015=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1013)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1018=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1016)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1021=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1019)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1024=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1022)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1027=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1025)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1030=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1028)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1033=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1031)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1036=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1034)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1039=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1037)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1042=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1040)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1045=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1043)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1048=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1046)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1051=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1049)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1054=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1052)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1057=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1055)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1060=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1058)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1063=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1061)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1066=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1064)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1069=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1067)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
#1072=(DATA_TYPE_DECLARATION()DECLARATION(#387,#387,#1070)ENTITY_DECLARATION()
     INTERFACED_DECLARATION($)REFERENCED_DECLARATION());
ENDSEC;
DATA('_DOCUMENTATION_MAPPING_SCHEMA',('EXTENDED_DICTIONARY_SCHEMA'));
#1445=DOCUMENTATION(#1444,('\X\0AThe sdai_mapping_schema defines a model mapping between a source express-schema and a target express-schema.\X\0AIt is suitable for the ARM (source) to AIM (target) mapping used in STEP Application Protocolls.\X\0AIt includes schema to schema mapping\X\0Aentity to entity mapping\X\0Aattribute to attribute mapping\X\0Aconstraints of various kinds and variations of the above.\X\0A'));
#1448=DOCUMENTATION(#1446,(' \X\0A\X\09An attribute_mapping_path_select type specifies the elements that may be in attribute mapping path.\X\0A'));
#1451=DOCUMENTATION(#1449,('\X\0A\X\09An entity_or_attribute type defines selection between attribute or entity definitions. It is used as target for entity mapping.\X\0A'));
#1456=DOCUMENTATION(#1454,('\X\0AEntity_mapping defines how a source entity is mapped to a target entity or target attribute.\X\0AFor one source entity there may be zero, one or several alternative entity_mappings.\X\0A'));
#1458=DOCUMENTATION(#1457,('\X\0A\X\09The source entity to be mapped.\X\0A\X\09'));
#1460=DOCUMENTATION(#1459,('\X\0A\X\09The target entity or attribute to which the source entity is mapped.\X\0A\X\09'));
#1462=DOCUMENTATION(#1461,('\X\0A\X\09This entity_mapping may require additional constraints to be valid.\X\0A\X\09 The root of a constraint tree is given here.\X\0AThe constraints are restrictions that must be met for target to be a valid mapping.\X\0A\X\09'));
#1464=DOCUMENTATION(#1463,('\X\0A\X\09Defines if the entity is an entry point for wave algorithm.\X\0A\X\09'));
#1466=DOCUMENTATION(#1465,('\X\0A\X\09Defines if the entity mapping is valid only when there is at least one ARM user of this entity.\X\0A\X\09'));
#1469=DOCUMENTATION(#1467,('\X\0AA schema mapping relates a source EXPRESS schema with a target EXPRESS schema.\X\0A'));
#1471=DOCUMENTATION(#1470,('\X\0A\X\09A source is a schema of source entities and attributes definitions.\X\0A\X\09'));
#1473=DOCUMENTATION(#1472,('\X\0A\X\09A target is a schema of target entities and attributes definitions.\X\0A\X\09'));
#1475=DOCUMENTATION(#1474,('\X\0A\X\09An uofs is a collection of mappings of units of functionality.\X\0A\X\09'));
#1477=DOCUMENTATION(#1476,('\X\0A\X\09An id is identifier of mapping. It may be used to store name, version number or any other useful information about mapping.\X\0A\X\09'));
#1479=DOCUMENTATION(#1478,('\X\0A\X\09The components is the set of schema mappings which are included into this schema.\X\0A\X\09Since v25.\X\0A\X\09'));
#1482=DOCUMENTATION(#1480,('\X\0AAn uof_mapping gropes mappings by units of functionality.\X\0AMaybe to add short names of UOFs. e.g. "S1" = product_identification\X\0A'));
#1484=DOCUMENTATION(#1483,('\X\0A\X\09A name is name of unit of functionality.\X\0A\X\09'));
#1486=DOCUMENTATION(#1485,('\X\0A\X\09The mappings are a collection of mappings of source entities.\X\0A\X\09An entity_mapping may participate in more than one uof_mapping.\X\0A\X\09'));
#1489=DOCUMENTATION(#1487,('\X\0AAn aggregate_member_consttraint_select type specifies elements that may be constrained by aggregate_member_constraint.\X\0A'));
#1492=DOCUMENTATION(#1490,('\X\0AAn attribute_select type specifies elements that may be of entity type.\X\0A'));
#1495=DOCUMENTATION(#1493,('\X\0AAn attribute_value_constraint_select type specifies elements that may be constraint to some simple value (e.g. to some string value).\X\0A'));
#1498=DOCUMENTATION(#1496,('\X\0AThe constraint_select is the top element to build higher level constraints from lower level concstraints, to represent the resulting constraints for a attribute_mapping_alternative or the constraint for an entity_mapping_alternative.\X\0A'));
#1501=DOCUMENTATION(#1499,('\X\0AAn inverse_attribute_constraint specifies elements that may be as attribute in inverse_attribute_constraint. \X\0A'));
#1504=DOCUMENTATION(#1502,('\X\0AA path_constraint_select type specifies elements that may be as element1 in path_constraint. They all defines how to make step from one entity instance to other.\X\0A'));
#1507=DOCUMENTATION(#1505,('\X\0AA select_constraint_select type specifies elements that may be constrained to some defined type.\X\0A'));
#1510=DOCUMENTATION(#1508,('\X\0AAn aggregate_member_constraint is a constraint that constraint aggregates. It selects one specific or arbitrary element from aggregate. The attribute must point to an attribute of type aggregate.\X\0A'));
#1512=DOCUMENTATION(#1511,('\X\0A\X\09If set, defines element in aggregate that must meet requirement, e.g. [1], only valid for LIST and ARRAY but misused by APs.\X\0A\X\09If unset, there shall be at least one member. Notation [i]\X\0A\X\09'));
#1514=DOCUMENTATION(#1513,('\X\0A\X\09An attribute must be of aggregate type. One element of is this aggregate is selected using aggregate_member_constraint.\X\0A\X\09'));
#1517=DOCUMENTATION(#1515,('\X\0AAn and_constraint_relationship is relationship of two constraints and both these constraints must be met to fulfil and_constraint_relationship.\X\0A'));
#1520=DOCUMENTATION(#1518,('\X\0AAn attirubute_value_constraint is constraint that is used to restrict attributes or elements of aggregates to some specific simple value.\X\0A'));
#1522=DOCUMENTATION(#1521,('\X\0A\X\09An attribute is definition of attribute or aggregate that is constraint to some value.\X\0A\X\09'));
#1525=DOCUMENTATION(#1523,('\X\0AA booleant_constraint specifies a constraint on boolean value. Attribute must point to attribute definition or aggregate or select element (in this case select element that is defined type) that is of type boolean.\X\0A'));
#1527=DOCUMENTATION(#1526,('\X\0A\X\09A constraint_value is value to which the attribute is constraint.\X\0A\X\09'));
#1530=DOCUMENTATION(#1528,(' Abstract supertype for all constraints except attribute because it is taken from dictionary '));
#1533=DOCUMENTATION(#1531,('\X\0ANEGATION_CONSTRAINT is used to specify that result of constraint has to be taken negated.\X\0AIt can be used only in the addition constraint but never in the main path.\X\0A'));
#1535=DOCUMENTATION(#1534,('\X\0A\X\09constraints result of whose has to negated.\X\0A\X\09'));
#1538=DOCUMENTATION(#1536,('\X\0AThe constraint_attribute further constrains an Express-attribute, an inverse_attribute_constraint or another constraint_attribute.\X\0A'));
#1541=DOCUMENTATION(#1539,('\X\0AA constraint_relationship defines pair of constraints. It does not specify the meaning of relationship nor a direction to go.\X\0A'));
#1543=DOCUMENTATION(#1542,('\X\0A\X\09An element2 is a second constraint that is related by this constraint relationship.\X\0A\X\09'));
#1546=DOCUMENTATION(#1544,('\X\0AAn entity_constraint specifies a constraint on entity type. The attribute must point to an attribute or constraint definition that is of an entity type. This constraint restricts to subtypes or select types (maybe to complex types).\X\0A'));
#1548=DOCUMENTATION(#1547,('\X\0A\X\09A domain defines an entity type. The value of constraint attribute (it also may be element of aggregate) must by of this type.\X\0A\X\09'));
#1550=DOCUMENTATION(#1549,('\X\0A\X\09An attribute is a definition of attribute that is constraint to some entity type.\X\0A\X\09'));
#1553=DOCUMENTATION(#1551,('\X\0AAn enumeration_constraint specifies a constraint on enumeration value. Attribute must point to attribute that is of type enumeration.\X\0A'));
#1555=DOCUMENTATION(#1554,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#1558=DOCUMENTATION(#1556,('\X\0AAn exact_entity_constraint is entity constraint that constraints the attribute to be of some specific entity type, excluding subtypes of it.\X\0A'));
#1561=DOCUMENTATION(#1559,('\X\0AAn instance_equal is instance_constraint that requires to constraints to end with the same instance.\X\0A'));
#1564=DOCUMENTATION(#1562,('\X\0AAn integer_constraint specifies a constraint on integer value. Attribute must point to attribute that is of type integer.\X\0A'));
#1566=DOCUMENTATION(#1565,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#1569=DOCUMENTATION(#1567,('\X\0AAn inverse_attribute_constraint defines a needed inverse attribute that is missing in the target schema.\X\0AThis is needed to travel reverse to attribute definition.\X\0A\X\0A\X\09NOTE 1 - In the case that the AIM express already contains the proper inverse attribute this should be used.\X\0A'));
#1571=DOCUMENTATION(#1570,('\X\0A\X\09An inverted_attribute is a definition of attribute that is inverted.\X\0A\X\09'));
#1574=DOCUMENTATION(#1572,('\X\0AA logical_constraint specifies a constraint on logical value. Attribute must point to attribute that is of type logical.\X\0A'));
#1576=DOCUMENTATION(#1575,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#1579=DOCUMENTATION(#1577,('\X\0AA non_optional_constraint restricts optional attribute of entity to be non-optional.\X\0A'));
#1582=DOCUMENTATION(#1580,('\X\0AAn instances_constraint is a consraint_relationship that defined constraints on instances of one type.\X\0A'));
#1584=DOCUMENTATION(#1583,('\X\0A\X\09An element1 is first constraint that is related by this constraint relationship.\X\0A\X\09'));
#1587=DOCUMENTATION(#1585,('\X\0AAn or_constraint_relationship is an instance_constraint where it is enough, that requirements of at least one constraint are meet.\X\0A'));
#1590=DOCUMENTATION(#1588,('\X\0AA path_constraint is a constraint_relationship that does following: requires make step using element1 and meet requirements of element2. The element1 shall be a constraint on an attribute of an entity-type. The element2 defines a constraint on the entity reached by following element1.\X\0A'));
#1592=DOCUMENTATION(#1591,('\X\0A\X\09An element1 is attribute or other element that allows to make step from one entity instance to instance of other entity.\X\0A\X\09'));
#1595=DOCUMENTATION(#1593,('\X\0AEnd_of_path_constraint is intended as a replacement for\X\0Aattribute_constraint.path list. It allows to identify end of the main path\X\0Acondition. See comments at attribute_constraint.path<br>\X\0AEnd_of_path_constraint is used as value of path_constraint.element2 or at the top of\X\0Aconstraint tree.<br>\X\0AIntroduced in version 31.1.\X\0A'));
#1597=DOCUMENTATION(#1596,('\X\0A\X\09The remaining part of constraint tree which doesn''t belong to the main path.\X\0A\X\09'));
#1600=DOCUMENTATION(#1598,('\X\0AA real_constraint specifies a constraint on real value. Attribute must point to attribute that is of type real.\X\0A'));
#1602=DOCUMENTATION(#1601,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#1605=DOCUMENTATION(#1603,('\X\0AA select_constraint specifies a constraint on select type. Attribute must point to attribute that is of select type.\X\0A\X\0AComplex instances may exist with logical_, boolean_, string_, enumeration_, integer_ and real_constraint.\X\0A'));
#1607=DOCUMENTATION(#1606,('\X\0A\X\09A data_type defines a path to go throw select.\X\0A\X\09'));
#1609=DOCUMENTATION(#1608,('\X\0A\X\09An attribute is definition of attribute or other element that is of select type and is constraint to some specific selection.\X\0A\X\09'));
#1612=DOCUMENTATION(#1610,('\X\0AA String_constraint specifies a constraint on string value. Attribute must point to attribute that is of type string.\X\0A'));
#1614=DOCUMENTATION(#1613,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#1617=DOCUMENTATION(#1615,('\X\0AAn aggregate_member_constraint is a constraint that constraint how many elements may be in aggregate. It selects one specific or arbitrary element from aggregate. The attribute must point to an attribute of type aggregate.\X\0ASince v25.\X\0AThis constraint may introduce some changes in selects where valind constraints for other constraints are listed.\X\0A'));
#1619=DOCUMENTATION(#1618,('\X\0A\X\09Defines size of aggregate.\X\0A\X\09'));
#1621=DOCUMENTATION(#1620,('\X\0A\X\09An attribute must be of aggregate type. One element of is this aggregate is selected using aggregate_member_constraint.\X\0A\X\09'));
#1624=DOCUMENTATION(#1622,('\X\0AA conformance_class_mapping is a schema_mapping that defines only the mappings of entities that are required by some conformance class.\X\0A'));
#1627=DOCUMENTATION(#1625,('\X\0AA module_mapping is a schema_mapping that defines only the mappings of entities that are defined in some module.\X\0A'));
#1630=DOCUMENTATION(#1628,('\X\0AA application_protocol_mapping is a schema_mapping that defines all the mappings of entities that are defined by this application protocol.\X\0A'));
#1633=DOCUMENTATION(#1631,('\X\0AAn attribute_mapping is a generic_attribute_mapping for the case when the target is an EXPRESS data type.\X\0A'));
#1636=DOCUMENTATION(#1635,('\X\0A\X\09A domain identifies the data type of the source attribute in the case it is a named_type. \X\0A\X\09If the source attribute leads to entity data types the corresponding entity_mapping is given here.\X\0A\X\09If the source attribute is a select type of one or several defined types, \X\0A\X\09the particular defined type this attribute mapping belongs to is specified here.\X\0A\X\09In other cases this attribute is UNSET.\X\0A\X\09'));
#1640=DOCUMENTATION(#1638,('\X\0AA generic_attribute_mapping specifies one of possible more alternatives\X\0Ahow an entity attribute on the source side maps to the target side.\X\0AA generic_attribute_mapping is either a attribute_mapping_value if it\X\0Amaps to a specific value or an attribute_mapping if it maps to some\X\0AEXPRESS data type.\X\0A\X\0AFor each source attribute one or several alternative\X\0Ageneric_attribute_mapping for a given entity_mapping shall be available.\X\0AIn the case that the source entity of the parent_entity is a subtype\X\0Aof one or several entities, generic_attribute_mapping shall be available\X\0Afor all inherited attributes. If an inherited attribute is redeclared in\X\0Athe subtype generic_attribute_mapping shall reflect changes in the mapping.\X\0A\X\0AGeneric_attribute_mappings shall be available for explicit source\X\0Aattributes. For derived and inverse attributes it is optional and depends\X\0Aon specific application.\X\0A'));
#1642=DOCUMENTATION(#1641,('\X\0A\X\09Specifies for which alternative entity_mapping this mapping of attribute exist.\X\0A\X\09source:  The entity attribute of the source side.\X\0A\X\09'));
#1644=DOCUMENTATION(#1643,('\X\0A\X\09A source is a definition of source attribute.\X\0A\X\09'));
#1646=DOCUMENTATION(#1645,('\X\0A\X\09If the attribute mapping is restricted in some way, the root constraint is defined here.\X\0A\X\09In addition the constraints includes the REFERENCE PATH as well as the target data type.\X\0A\X\09It can be unset only in case of IDENTICAL MAPPING if there are no further constraints.\X\0A\X\09(See guidelines for the development of mapping specifications, ISO TC 184/SC4 N1029)\X\0A\X\09'));
#1648=DOCUMENTATION(#1647,('\X\0A\X\09In the case that the target is of a select data type and the target value is not an entity\X\0A\X\09the select path is defined here.\X\0A\X\09The select path lists all defined types which are not select types,\X\0A\X\09needed to characterize a simple type.\X\0A\X\09The usage is the same as for select_type in dictionary schema (ISO 10303-22)\X\0A\X\09and correspond to the encoding of values of select data types in ISO\X\0A\X\0910303-21 and -27 (late and early binding attribute access).\X\0A\X\09'));
#1650=DOCUMENTATION(#1649,('\X\0A\X\09If TRUE the constraints of this generic_attribute_mapping\X\0A\X\09shall be fulfilled in addition to the constraints of the parent\X\0A\X\09entity_mapping.\X\0A\X\09'));
#1653=DOCUMENTATION(#1651,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#1655=DOCUMENTATION(#1654,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#1658=DOCUMENTATION(#1656,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#1660=DOCUMENTATION(#1659,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified. \X\0A\X\09\X\09It is an Express id of enumeration item.\X\0A\X\09'));
#1663=DOCUMENTATION(#1661,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#1665=DOCUMENTATION(#1664,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#1668=DOCUMENTATION(#1666,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#1670=DOCUMENTATION(#1669,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#1673=DOCUMENTATION(#1671,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#1675=DOCUMENTATION(#1674,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#1678=DOCUMENTATION(#1676,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#1680=DOCUMENTATION(#1679,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#1683=DOCUMENTATION(#1681,('\X\0AA mapping of attribute to some specific simple value.\X\0A'));
#1686=DOCUMENTATION(#1684,('\X\0ADefines relationships between entity mappings.\X\0A'));
#1688=DOCUMENTATION(#1687,('\X\0A\X\09Master entity mapping.\X\0A\X\09'));
#1690=DOCUMENTATION(#1689,('\X\0A\X\09Dependant entity mapping.\X\0A\X\09'));
#1692=DOCUMENTATION(#1691,('\X\0A\X\09Optional constraints can define the path to walk from relating mapping to related mapping.\X\0A\X\09'));
#1694=DOCUMENTATION(#1693,('\X\0A\X\09Optional path to walk from relating mapping to related mapping.<br>\X\0A\X\09OBSOLETE SINCE VERSION 30.1 - will be removed soon\X\0A\X\09'));
#1697=DOCUMENTATION(#1695,('\X\0ARelationship between two entity mappings.\X\0AThese entities must have the same sub-supertype relationship in source schema.\X\0AIf path defined in constraints is empty, then subtype mapping constraints must include \X\0Aall constraints from supertype mapping (i.e. to be the same or more restrictive).\X\0A<br>\X\0ARelating is supertype (more restrictive mapping), related is subtype (mapping of more general entity).\X\0A'));
#1700=DOCUMENTATION(#1698,('\X\0ADefines path from one entity mapping (relating) to other entity mapping (related).\X\0AThe latter is considered to be derived variant of relating entity mapping.\X\0AIt is used in attribute mappings when attribute mapping path points only to relating entity mapping.\X\0A'));
#1703=DOCUMENTATION(#1701,('\X\0ATYPE_CONSTRAINT requires that starting AIM instance is of type defined in domain attribute.\X\0A'));
#1705=DOCUMENTATION(#1704,(' Required type of AIM instance. '));
#1707=DOCUMENTATION(#1706,(' The remaining constraints in a similar way as path.element2 attribute. '));
#1710=DOCUMENTATION(#1708,('\X\0AEXACT_TYPE_CONSTRAINT requires that starting AIM instance is of specific type but not it''s subtype.\X\0A'));
#1713=DOCUMENTATION(#1711,('\X\0AINTERSECTION_CONSTRAINT allows to get only common (intersecting) instances \X\0Afrom subpaths specified by this instance. This can be used in particularly when\X\0Aseveral AND paths point to same instance. It effectively outdates \X\0Ainstance_equal entity.\X\0AIntroduced in version 31.0.\X\0A'));
#1715=DOCUMENTATION(#1714,('\X\0A\X\09Subpaths to be intersected.\X\0A\X\09'));
ENDSEC;
DATA('_DOCUMENTATION_SDAI_MAPPING_SCHEMA',('EXTENDED_DICTIONARY_SCHEMA'));
#388=DOCUMENTATION(#387,('\X\0AThe sdai_mapping_schema defines a model mapping between a source express-schema and a target express-schema.\X\0AIt is suitable for the ARM (source) to AIM (target) mapping used in STEP Application Protocolls.\X\0AIt includes schema to schema mapping\X\0Aentity to entity mapping\X\0Aattribute to attribute mapping\X\0Aconstraints of various kinds and variations of the above.\X\0A'));
#391=DOCUMENTATION(#389,(' \X\0A\X\09An attribute_mapping_path_select type specifies the elements that may be in attribute mapping path.\X\0A'));
#394=DOCUMENTATION(#392,('\X\0A\X\09An entity_or_attribute type defines selection between attribute or entity definitions. It is used as target for entity mapping.\X\0A'));
#399=DOCUMENTATION(#397,('\X\0AEntity_mapping defines how a source entity is mapped to a target entity or target attribute.\X\0AFor one source entity there may be zero, one or several alternative entity_mappings.\X\0A'));
#401=DOCUMENTATION(#400,('\X\0A\X\09The source entity to be mapped.\X\0A\X\09'));
#403=DOCUMENTATION(#402,('\X\0A\X\09The target entity or attribute to which the source entity is mapped.\X\0A\X\09'));
#405=DOCUMENTATION(#404,('\X\0A\X\09This entity_mapping may require additional constraints to be valid.\X\0A\X\09 The root of a constraint tree is given here.\X\0AThe constraints are restrictions that must be met for target to be a valid mapping.\X\0A\X\09'));
#407=DOCUMENTATION(#406,('\X\0A\X\09Defines if the entity is an entry point for wave algorithm.\X\0A\X\09'));
#409=DOCUMENTATION(#408,('\X\0A\X\09Defines if the entity mapping is valid only when there is at least one ARM user of this entity.\X\0A\X\09'));
#412=DOCUMENTATION(#410,('\X\0AA schema mapping relates a source EXPRESS schema with a target EXPRESS schema.\X\0A'));
#414=DOCUMENTATION(#413,('\X\0A\X\09A source is a schema of source entities and attributes definitions.\X\0A\X\09'));
#416=DOCUMENTATION(#415,('\X\0A\X\09A target is a schema of target entities and attributes definitions.\X\0A\X\09'));
#418=DOCUMENTATION(#417,('\X\0A\X\09An uofs is a collection of mappings of units of functionality.\X\0A\X\09'));
#420=DOCUMENTATION(#419,('\X\0A\X\09An id is identifier of mapping. It may be used to store name, version number or any other useful information about mapping.\X\0A\X\09'));
#422=DOCUMENTATION(#421,('\X\0A\X\09The components is the set of schema mappings which are included into this schema.\X\0A\X\09Since v25.\X\0A\X\09'));
#425=DOCUMENTATION(#423,('\X\0AAn uof_mapping gropes mappings by units of functionality.\X\0AMaybe to add short names of UOFs. e.g. "S1" = product_identification\X\0A'));
#427=DOCUMENTATION(#426,('\X\0A\X\09A name is name of unit of functionality.\X\0A\X\09'));
#429=DOCUMENTATION(#428,('\X\0A\X\09The mappings are a collection of mappings of source entities.\X\0A\X\09An entity_mapping may participate in more than one uof_mapping.\X\0A\X\09'));
#432=DOCUMENTATION(#430,('\X\0AAn aggregate_member_consttraint_select type specifies elements that may be constrained by aggregate_member_constraint.\X\0A'));
#435=DOCUMENTATION(#433,('\X\0AAn attribute_select type specifies elements that may be of entity type.\X\0A'));
#438=DOCUMENTATION(#436,('\X\0AAn attribute_value_constraint_select type specifies elements that may be constraint to some simple value (e.g. to some string value).\X\0A'));
#441=DOCUMENTATION(#439,('\X\0AThe constraint_select is the top element to build higher level constraints from lower level concstraints, to represent the resulting constraints for a attribute_mapping_alternative or the constraint for an entity_mapping_alternative.\X\0A'));
#444=DOCUMENTATION(#442,('\X\0AAn inverse_attribute_constraint specifies elements that may be as attribute in inverse_attribute_constraint. \X\0A'));
#447=DOCUMENTATION(#445,('\X\0AA path_constraint_select type specifies elements that may be as element1 in path_constraint. They all defines how to make step from one entity instance to other.\X\0A'));
#450=DOCUMENTATION(#448,('\X\0AA select_constraint_select type specifies elements that may be constrained to some defined type.\X\0A'));
#453=DOCUMENTATION(#451,('\X\0AAn aggregate_member_constraint is a constraint that constraint aggregates. It selects one specific or arbitrary element from aggregate. The attribute must point to an attribute of type aggregate.\X\0A'));
#455=DOCUMENTATION(#454,('\X\0A\X\09If set, defines element in aggregate that must meet requirement, e.g. [1], only valid for LIST and ARRAY but misused by APs.\X\0A\X\09If unset, there shall be at least one member. Notation [i]\X\0A\X\09'));
#457=DOCUMENTATION(#456,('\X\0A\X\09An attribute must be of aggregate type. One element of is this aggregate is selected using aggregate_member_constraint.\X\0A\X\09'));
#460=DOCUMENTATION(#458,('\X\0AAn and_constraint_relationship is relationship of two constraints and both these constraints must be met to fulfil and_constraint_relationship.\X\0A'));
#463=DOCUMENTATION(#461,('\X\0AAn attirubute_value_constraint is constraint that is used to restrict attributes or elements of aggregates to some specific simple value.\X\0A'));
#465=DOCUMENTATION(#464,('\X\0A\X\09An attribute is definition of attribute or aggregate that is constraint to some value.\X\0A\X\09'));
#468=DOCUMENTATION(#466,('\X\0AA booleant_constraint specifies a constraint on boolean value. Attribute must point to attribute definition or aggregate or select element (in this case select element that is defined type) that is of type boolean.\X\0A'));
#470=DOCUMENTATION(#469,('\X\0A\X\09A constraint_value is value to which the attribute is constraint.\X\0A\X\09'));
#473=DOCUMENTATION(#471,(' Abstract supertype for all constraints except attribute because it is taken from dictionary '));
#476=DOCUMENTATION(#474,('\X\0ANEGATION_CONSTRAINT is used to specify that result of constraint has to be taken negated.\X\0AIt can be used only in the addition constraint but never in the main path.\X\0A'));
#478=DOCUMENTATION(#477,('\X\0A\X\09constraints result of whose has to negated.\X\0A\X\09'));
#481=DOCUMENTATION(#479,('\X\0AThe constraint_attribute further constrains an Express-attribute, an inverse_attribute_constraint or another constraint_attribute.\X\0A'));
#484=DOCUMENTATION(#482,('\X\0AA constraint_relationship defines pair of constraints. It does not specify the meaning of relationship nor a direction to go.\X\0A'));
#486=DOCUMENTATION(#485,('\X\0A\X\09An element2 is a second constraint that is related by this constraint relationship.\X\0A\X\09'));
#489=DOCUMENTATION(#487,('\X\0AAn entity_constraint specifies a constraint on entity type. The attribute must point to an attribute or constraint definition that is of an entity type. This constraint restricts to subtypes or select types (maybe to complex types).\X\0A'));
#491=DOCUMENTATION(#490,('\X\0A\X\09A domain defines an entity type. The value of constraint attribute (it also may be element of aggregate) must by of this type.\X\0A\X\09'));
#493=DOCUMENTATION(#492,('\X\0A\X\09An attribute is a definition of attribute that is constraint to some entity type.\X\0A\X\09'));
#496=DOCUMENTATION(#494,('\X\0AAn enumeration_constraint specifies a constraint on enumeration value. Attribute must point to attribute that is of type enumeration.\X\0A'));
#498=DOCUMENTATION(#497,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#501=DOCUMENTATION(#499,('\X\0AAn exact_entity_constraint is entity constraint that constraints the attribute to be of some specific entity type, excluding subtypes of it.\X\0A'));
#504=DOCUMENTATION(#502,('\X\0AAn instance_equal is instance_constraint that requires to constraints to end with the same instance.\X\0A'));
#507=DOCUMENTATION(#505,('\X\0AAn integer_constraint specifies a constraint on integer value. Attribute must point to attribute that is of type integer.\X\0A'));
#509=DOCUMENTATION(#508,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#512=DOCUMENTATION(#510,('\X\0AAn inverse_attribute_constraint defines a needed inverse attribute that is missing in the target schema.\X\0AThis is needed to travel reverse to attribute definition.\X\0A\X\0A\X\09NOTE 1 - In the case that the AIM express already contains the proper inverse attribute this should be used.\X\0A'));
#514=DOCUMENTATION(#513,('\X\0A\X\09An inverted_attribute is a definition of attribute that is inverted.\X\0A\X\09'));
#517=DOCUMENTATION(#515,('\X\0AA logical_constraint specifies a constraint on logical value. Attribute must point to attribute that is of type logical.\X\0A'));
#519=DOCUMENTATION(#518,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#522=DOCUMENTATION(#520,('\X\0AA non_optional_constraint restricts optional attribute of entity to be non-optional.\X\0A'));
#525=DOCUMENTATION(#523,('\X\0AAn instances_constraint is a consraint_relationship that defined constraints on instances of one type.\X\0A'));
#527=DOCUMENTATION(#526,('\X\0A\X\09An element1 is first constraint that is related by this constraint relationship.\X\0A\X\09'));
#530=DOCUMENTATION(#528,('\X\0AAn or_constraint_relationship is an instance_constraint where it is enough, that requirements of at least one constraint are meet.\X\0A'));
#533=DOCUMENTATION(#531,('\X\0AA path_constraint is a constraint_relationship that does following: requires make step using element1 and meet requirements of element2. The element1 shall be a constraint on an attribute of an entity-type. The element2 defines a constraint on the entity reached by following element1.\X\0A'));
#535=DOCUMENTATION(#534,('\X\0A\X\09An element1 is attribute or other element that allows to make step from one entity instance to instance of other entity.\X\0A\X\09'));
#538=DOCUMENTATION(#536,('\X\0AEnd_of_path_constraint is intended as a replacement for\X\0Aattribute_constraint.path list. It allows to identify end of the main path\X\0Acondition. See comments at attribute_constraint.path<br>\X\0AEnd_of_path_constraint is used as value of path_constraint.element2 or at the top of\X\0Aconstraint tree.<br>\X\0AIntroduced in version 31.1.\X\0A'));
#540=DOCUMENTATION(#539,('\X\0A\X\09The remaining part of constraint tree which doesn''t belong to the main path.\X\0A\X\09'));
#543=DOCUMENTATION(#541,('\X\0AA real_constraint specifies a constraint on real value. Attribute must point to attribute that is of type real.\X\0A'));
#545=DOCUMENTATION(#544,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#548=DOCUMENTATION(#546,('\X\0AA select_constraint specifies a constraint on select type. Attribute must point to attribute that is of select type.\X\0A\X\0AComplex instances may exist with logical_, boolean_, string_, enumeration_, integer_ and real_constraint.\X\0A'));
#550=DOCUMENTATION(#549,('\X\0A\X\09A data_type defines a path to go throw select.\X\0A\X\09'));
#552=DOCUMENTATION(#551,('\X\0A\X\09An attribute is definition of attribute or other element that is of select type and is constraint to some specific selection.\X\0A\X\09'));
#555=DOCUMENTATION(#553,('\X\0AA String_constraint specifies a constraint on string value. Attribute must point to attribute that is of type string.\X\0A'));
#557=DOCUMENTATION(#556,('\X\0A\X\09A constraint_value defines a constant to which constraint attribute must be equal.\X\0A\X\09'));
#560=DOCUMENTATION(#558,('\X\0AAn aggregate_member_constraint is a constraint that constraint how many elements may be in aggregate. It selects one specific or arbitrary element from aggregate. The attribute must point to an attribute of type aggregate.\X\0ASince v25.\X\0AThis constraint may introduce some changes in selects where valind constraints for other constraints are listed.\X\0A'));
#562=DOCUMENTATION(#561,('\X\0A\X\09Defines size of aggregate.\X\0A\X\09'));
#564=DOCUMENTATION(#563,('\X\0A\X\09An attribute must be of aggregate type. One element of is this aggregate is selected using aggregate_member_constraint.\X\0A\X\09'));
#567=DOCUMENTATION(#565,('\X\0AA conformance_class_mapping is a schema_mapping that defines only the mappings of entities that are required by some conformance class.\X\0A'));
#570=DOCUMENTATION(#568,('\X\0AA module_mapping is a schema_mapping that defines only the mappings of entities that are defined in some module.\X\0A'));
#573=DOCUMENTATION(#571,('\X\0AA application_protocol_mapping is a schema_mapping that defines all the mappings of entities that are defined by this application protocol.\X\0A'));
#576=DOCUMENTATION(#574,('\X\0AAn attribute_mapping is a generic_attribute_mapping for the case when the target is an EXPRESS data type.\X\0A'));
#579=DOCUMENTATION(#578,('\X\0A\X\09A domain identifies the data type of the source attribute in the case it is a named_type. \X\0A\X\09If the source attribute leads to entity data types the corresponding entity_mapping is given here.\X\0A\X\09If the source attribute is a select type of one or several defined types, \X\0A\X\09the particular defined type this attribute mapping belongs to is specified here.\X\0A\X\09In other cases this attribute is UNSET.\X\0A\X\09'));
#583=DOCUMENTATION(#581,('\X\0AA generic_attribute_mapping specifies one of possible more alternatives\X\0Ahow an entity attribute on the source side maps to the target side.\X\0AA generic_attribute_mapping is either a attribute_mapping_value if it\X\0Amaps to a specific value or an attribute_mapping if it maps to some\X\0AEXPRESS data type.\X\0A\X\0AFor each source attribute one or several alternative\X\0Ageneric_attribute_mapping for a given entity_mapping shall be available.\X\0AIn the case that the source entity of the parent_entity is a subtype\X\0Aof one or several entities, generic_attribute_mapping shall be available\X\0Afor all inherited attributes. If an inherited attribute is redeclared in\X\0Athe subtype generic_attribute_mapping shall reflect changes in the mapping.\X\0A\X\0AGeneric_attribute_mappings shall be available for explicit source\X\0Aattributes. For derived and inverse attributes it is optional and depends\X\0Aon specific application.\X\0A'));
#585=DOCUMENTATION(#584,('\X\0A\X\09Specifies for which alternative entity_mapping this mapping of attribute exist.\X\0A\X\09source:  The entity attribute of the source side.\X\0A\X\09'));
#587=DOCUMENTATION(#586,('\X\0A\X\09A source is a definition of source attribute.\X\0A\X\09'));
#589=DOCUMENTATION(#588,('\X\0A\X\09If the attribute mapping is restricted in some way, the root constraint is defined here.\X\0A\X\09In addition the constraints includes the REFERENCE PATH as well as the target data type.\X\0A\X\09It can be unset only in case of IDENTICAL MAPPING if there are no further constraints.\X\0A\X\09(See guidelines for the development of mapping specifications, ISO TC 184/SC4 N1029)\X\0A\X\09'));
#591=DOCUMENTATION(#590,('\X\0A\X\09In the case that the target is of a select data type and the target value is not an entity\X\0A\X\09the select path is defined here.\X\0A\X\09The select path lists all defined types which are not select types,\X\0A\X\09needed to characterize a simple type.\X\0A\X\09The usage is the same as for select_type in dictionary schema (ISO 10303-22)\X\0A\X\09and correspond to the encoding of values of select data types in ISO\X\0A\X\0910303-21 and -27 (late and early binding attribute access).\X\0A\X\09'));
#593=DOCUMENTATION(#592,('\X\0A\X\09If TRUE the constraints of this generic_attribute_mapping\X\0A\X\09shall be fulfilled in addition to the constraints of the parent\X\0A\X\09entity_mapping.\X\0A\X\09'));
#596=DOCUMENTATION(#594,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#598=DOCUMENTATION(#597,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#601=DOCUMENTATION(#599,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#603=DOCUMENTATION(#602,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified. \X\0A\X\09\X\09It is an Express id of enumeration item.\X\0A\X\09'));
#606=DOCUMENTATION(#604,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#608=DOCUMENTATION(#607,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#611=DOCUMENTATION(#609,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#613=DOCUMENTATION(#612,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#616=DOCUMENTATION(#614,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#618=DOCUMENTATION(#617,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#621=DOCUMENTATION(#619,('\X\0A\X\09An attribute mapping to specify the mapping for the specific value of attribute.\X\0A'));
#623=DOCUMENTATION(#622,('\X\0A\X\09\X\09The value of source attribute for which the mapping is specified.\X\0A\X\09'));
#626=DOCUMENTATION(#624,('\X\0AA mapping of attribute to some specific simple value.\X\0A'));
#629=DOCUMENTATION(#627,('\X\0ADefines relationships between entity mappings.\X\0A'));
#631=DOCUMENTATION(#630,('\X\0A\X\09Master entity mapping.\X\0A\X\09'));
#633=DOCUMENTATION(#632,('\X\0A\X\09Dependant entity mapping.\X\0A\X\09'));
#635=DOCUMENTATION(#634,('\X\0A\X\09Optional constraints can define the path to walk from relating mapping to related mapping.\X\0A\X\09'));
#637=DOCUMENTATION(#636,('\X\0A\X\09Optional path to walk from relating mapping to related mapping.<br>\X\0A\X\09OBSOLETE SINCE VERSION 30.1 - will be removed soon\X\0A\X\09'));
#640=DOCUMENTATION(#638,('\X\0ARelationship between two entity mappings.\X\0AThese entities must have the same sub-supertype relationship in source schema.\X\0AIf path defined in constraints is empty, then subtype mapping constraints must include \X\0Aall constraints from supertype mapping (i.e. to be the same or more restrictive).\X\0A<br>\X\0ARelating is supertype (more restrictive mapping), related is subtype (mapping of more general entity).\X\0A'));
#643=DOCUMENTATION(#641,('\X\0ADefines path from one entity mapping (relating) to other entity mapping (related).\X\0AThe latter is considered to be derived variant of relating entity mapping.\X\0AIt is used in attribute mappings when attribute mapping path points only to relating entity mapping.\X\0A'));
#646=DOCUMENTATION(#644,('\X\0ATYPE_CONSTRAINT requires that starting AIM instance is of type defined in domain attribute.\X\0A'));
#648=DOCUMENTATION(#647,(' Required type of AIM instance. '));
#650=DOCUMENTATION(#649,(' The remaining constraints in a similar way as path.element2 attribute. '));
#653=DOCUMENTATION(#651,('\X\0AEXACT_TYPE_CONSTRAINT requires that starting AIM instance is of specific type but not it''s subtype.\X\0A'));
#656=DOCUMENTATION(#654,('\X\0AINTERSECTION_CONSTRAINT allows to get only common (intersecting) instances \X\0Afrom subpaths specified by this instance. This can be used in particularly when\X\0Aseveral AND paths point to same instance. It effectively outdates \X\0Ainstance_equal entity.\X\0AIntroduced in version 31.0.\X\0A'));
#658=DOCUMENTATION(#657,('\X\0A\X\09Subpaths to be intersected.\X\0A\X\09'));
ENDSEC;
DATA('_EXPRESS_EXTENDED_DICTIONARY_SCHEMA',('EXTENDED_DICTIONARY_SCHEMA'));
#1910=EXPRESS_CODE(#1210,('local_elements '));
#1912=EXPRESS_CODE(#1911,('( sizeof ( local_elements ) > 0 ) or ( ''extended_dictionary_schema.extensible_enumeration_type'' in typeof ( self ) ) '));
#1934=EXPRESS_CODE(#1327,('0 '));
#1953=EXPRESS_CODE(#1369,('local_selections '));
ENDSEC;
DATA('_EXPRESS_MAPPING_SCHEMA',('EXTENDED_DICTIONARY_SCHEMA'));
#2004=EXPRESS_CODE(#1637,('path [ 1 ] '));
ENDSEC;
DATA('_EXPRESS_SDAI_DICTIONARY_SCHEMA',('EXTENDED_DICTIONARY_SCHEMA'));
#853=EXPRESS_CODE(#153,('local_elements '));
#855=EXPRESS_CODE(#854,('( sizeof ( local_elements ) > 0 ) or ( ''extended_dictionary_schema.extensible_enumeration_type'' in typeof ( self ) ) '));
#877=EXPRESS_CODE(#270,('0 '));
#896=EXPRESS_CODE(#312,('local_selections '));
ENDSEC;
DATA('_EXPRESS_SDAI_MAPPING_SCHEMA',('EXTENDED_DICTIONARY_SCHEMA'));
#947=EXPRESS_CODE(#580,('path [ 1 ] '));
ENDSEC;
END-ISO-10303-21;
